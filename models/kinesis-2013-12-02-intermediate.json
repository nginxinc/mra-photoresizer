{
  "metadata" : {
    "apiVersion" : "2013-12-02",
    "exceptionUnmarshallerImpl" : null,
    "protocol" : "json",
    "checksumFormat" : null,
    "documentation" : "<fullname>Amazon Kinesis Service API Reference</fullname> <p>Amazon Kinesis is a managed service that scales elastically for real time processing of streaming big data.</p>",
    "defaultEndpoint" : "https://kinesis.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "kinesis.us-east-1.amazonaws.com",
    "syncInterface" : "AmazonKinesis",
    "syncClient" : "AmazonKinesisClient",
    "asyncInterface" : "AmazonKinesisAsync",
    "asyncClient" : "AmazonKinesisAsyncClient",
    "packageName" : "com.amazonaws.services.kinesis",
    "packagePath" : "com/amazonaws/services/kinesis",
    "serviceAbbreviation" : "Kinesis",
    "serviceFullName" : "Amazon Kinesis",
    "hasApiWithStreamInput" : false,
    "jsonContentVersion" : "application/x-amz-json-1.1",
    "endpointPrefix" : "kinesis",
    "signingName" : "kinesis",
    "serviceName" : "Kinesis",
    "jsonProtocol" : true,
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "protocolDefaultExceptionUnmarshallerType" : "JsonErrorUnmarshaller"
  },
  "operations" : {
    "AddTagsToStream" : {
      "documentation" : "<p>Adds or updates tags for the specified Amazon Kinesis stream. Each stream can have up to 10 tags. </p> <p>If tags have already been assigned to the stream, <code>AddTagsToStream</code> overwrites any existing tags that correspond to the specified tag keys.</p>",
      "operationName" : "AddTagsToStream",
      "deprecated" : false,
      "input" : {
        "variableName" : "addTagsToStreamRequest",
        "variableType" : "AddTagsToStreamRequest",
        "variableDeclarationType" : "AddTagsToStreamRequest",
        "documentation" : "<p>Represents the input for <code>AddTagsToStream</code>.</p>",
        "simpleType" : "AddTagsToStreamRequest",
        "variableSetterType" : "AddTagsToStreamRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Adds or updates tags for the specified Amazon Kinesis stream. Each stream can have up to 10 tags. </p> <p>If tags have already been assigned to the stream, <code>AddTagsToStream</code> overwrites any existing tags that correspond to the specified tag keys.</p>\n@param addTagsToStreamRequest Represents the input for <code>AddTagsToStream</code>.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws ResourceInUseException The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).*/",
      "asyncDocumentation" : "/**<p>Adds or updates tags for the specified Amazon Kinesis stream. Each stream can have up to 10 tags. </p> <p>If tags have already been assigned to the stream, <code>AddTagsToStream</code> overwrites any existing tags that correspond to the specified tag keys.</p>\n@param addTagsToStreamRequest Represents the input for <code>AddTagsToStream</code>.*/",
      "asyncDocumentationWithHandler" : "/**<p>Adds or updates tags for the specified Amazon Kinesis stream. Each stream can have up to 10 tags. </p> <p>If tags have already been assigned to the stream, <code>AddTagsToStream</code> overwrites any existing tags that correspond to the specified tag keys.</p>\n@param addTagsToStreamRequest Represents the input for <code>AddTagsToStream</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AddTagsToStreamRequest, Void>",
      "methodName" : "addTagsToStream"
    },
    "CreateStream" : {
      "documentation" : "<p>Creates a Amazon Kinesis stream. A stream captures and transports data records that are continuously emitted from different data sources or <i>producers</i>. Scale-out within an Amazon Kinesis stream is explicitly supported by means of shards, which are uniquely identified groups of data records in an Amazon Kinesis stream.</p> <p>You specify and control the number of shards that a stream is composed of. Each shard can support reads up to 5 transactions per second, up to a maximum data read total of 2 MB per second. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second. You can add shards to a stream if the amount of data input increases and you can remove shards if the amount of data input decreases.</p> <p>The stream name identifies the stream. The name is scoped to the AWS account used by the application. It is also scoped by region. That is, two streams in two different accounts can have the same name, and two streams in the same account, but in two different regions, can have the same name. </p> <p><code>CreateStream</code> is an asynchronous operation. Upon receiving a <code>CreateStream</code> request, Amazon Kinesis immediately returns and sets the stream status to <code>CREATING</code>. After the stream is created, Amazon Kinesis sets the stream status to <code>ACTIVE</code>. You should perform read and write operations only on an <code>ACTIVE</code> stream. </p> <p>You receive a <code>LimitExceededException</code> when making a <code>CreateStream</code> request if you try to do one of the following:</p> <ul> <li>Have more than five streams in the <code>CREATING</code> state at any point in time.</li> <li>Create more shards than are authorized for your account.</li> </ul> <p>For the default shard limit for an AWS account, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Amazon Kinesis Limits</a>. If you need to increase this limit, <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">contact AWS Support</a>.</p> <p>You can use <code>DescribeStream</code> to check the stream status, which is returned in <code>StreamStatus</code>.</p> <p><a>CreateStream</a> has a limit of 5 transactions per second per account.</p>",
      "operationName" : "CreateStream",
      "deprecated" : false,
      "input" : {
        "variableName" : "createStreamRequest",
        "variableType" : "CreateStreamRequest",
        "variableDeclarationType" : "CreateStreamRequest",
        "documentation" : "<p>Represents the input for <code>CreateStream</code>.</p>",
        "simpleType" : "CreateStreamRequest",
        "variableSetterType" : "CreateStreamRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a Amazon Kinesis stream. A stream captures and transports data records that are continuously emitted from different data sources or <i>producers</i>. Scale-out within an Amazon Kinesis stream is explicitly supported by means of shards, which are uniquely identified groups of data records in an Amazon Kinesis stream.</p> <p>You specify and control the number of shards that a stream is composed of. Each shard can support reads up to 5 transactions per second, up to a maximum data read total of 2 MB per second. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second. You can add shards to a stream if the amount of data input increases and you can remove shards if the amount of data input decreases.</p> <p>The stream name identifies the stream. The name is scoped to the AWS account used by the application. It is also scoped by region. That is, two streams in two different accounts can have the same name, and two streams in the same account, but in two different regions, can have the same name. </p> <p><code>CreateStream</code> is an asynchronous operation. Upon receiving a <code>CreateStream</code> request, Amazon Kinesis immediately returns and sets the stream status to <code>CREATING</code>. After the stream is created, Amazon Kinesis sets the stream status to <code>ACTIVE</code>. You should perform read and write operations only on an <code>ACTIVE</code> stream. </p> <p>You receive a <code>LimitExceededException</code> when making a <code>CreateStream</code> request if you try to do one of the following:</p> <ul> <li>Have more than five streams in the <code>CREATING</code> state at any point in time.</li> <li>Create more shards than are authorized for your account.</li> </ul> <p>For the default shard limit for an AWS account, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Amazon Kinesis Limits</a>. If you need to increase this limit, <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">contact AWS Support</a>.</p> <p>You can use <code>DescribeStream</code> to check the stream status, which is returned in <code>StreamStatus</code>.</p> <p><a>CreateStream</a> has a limit of 5 transactions per second per account.</p>\n@param createStreamRequest Represents the input for <code>CreateStream</code>.\n@throws ResourceInUseException The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.*/",
      "asyncDocumentation" : "/**<p>Creates a Amazon Kinesis stream. A stream captures and transports data records that are continuously emitted from different data sources or <i>producers</i>. Scale-out within an Amazon Kinesis stream is explicitly supported by means of shards, which are uniquely identified groups of data records in an Amazon Kinesis stream.</p> <p>You specify and control the number of shards that a stream is composed of. Each shard can support reads up to 5 transactions per second, up to a maximum data read total of 2 MB per second. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second. You can add shards to a stream if the amount of data input increases and you can remove shards if the amount of data input decreases.</p> <p>The stream name identifies the stream. The name is scoped to the AWS account used by the application. It is also scoped by region. That is, two streams in two different accounts can have the same name, and two streams in the same account, but in two different regions, can have the same name. </p> <p><code>CreateStream</code> is an asynchronous operation. Upon receiving a <code>CreateStream</code> request, Amazon Kinesis immediately returns and sets the stream status to <code>CREATING</code>. After the stream is created, Amazon Kinesis sets the stream status to <code>ACTIVE</code>. You should perform read and write operations only on an <code>ACTIVE</code> stream. </p> <p>You receive a <code>LimitExceededException</code> when making a <code>CreateStream</code> request if you try to do one of the following:</p> <ul> <li>Have more than five streams in the <code>CREATING</code> state at any point in time.</li> <li>Create more shards than are authorized for your account.</li> </ul> <p>For the default shard limit for an AWS account, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Amazon Kinesis Limits</a>. If you need to increase this limit, <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">contact AWS Support</a>.</p> <p>You can use <code>DescribeStream</code> to check the stream status, which is returned in <code>StreamStatus</code>.</p> <p><a>CreateStream</a> has a limit of 5 transactions per second per account.</p>\n@param createStreamRequest Represents the input for <code>CreateStream</code>.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a Amazon Kinesis stream. A stream captures and transports data records that are continuously emitted from different data sources or <i>producers</i>. Scale-out within an Amazon Kinesis stream is explicitly supported by means of shards, which are uniquely identified groups of data records in an Amazon Kinesis stream.</p> <p>You specify and control the number of shards that a stream is composed of. Each shard can support reads up to 5 transactions per second, up to a maximum data read total of 2 MB per second. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second. You can add shards to a stream if the amount of data input increases and you can remove shards if the amount of data input decreases.</p> <p>The stream name identifies the stream. The name is scoped to the AWS account used by the application. It is also scoped by region. That is, two streams in two different accounts can have the same name, and two streams in the same account, but in two different regions, can have the same name. </p> <p><code>CreateStream</code> is an asynchronous operation. Upon receiving a <code>CreateStream</code> request, Amazon Kinesis immediately returns and sets the stream status to <code>CREATING</code>. After the stream is created, Amazon Kinesis sets the stream status to <code>ACTIVE</code>. You should perform read and write operations only on an <code>ACTIVE</code> stream. </p> <p>You receive a <code>LimitExceededException</code> when making a <code>CreateStream</code> request if you try to do one of the following:</p> <ul> <li>Have more than five streams in the <code>CREATING</code> state at any point in time.</li> <li>Create more shards than are authorized for your account.</li> </ul> <p>For the default shard limit for an AWS account, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Amazon Kinesis Limits</a>. If you need to increase this limit, <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">contact AWS Support</a>.</p> <p>You can use <code>DescribeStream</code> to check the stream status, which is returned in <code>StreamStatus</code>.</p> <p><a>CreateStream</a> has a limit of 5 transactions per second per account.</p>\n@param createStreamRequest Represents the input for <code>CreateStream</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateStreamRequest, Void>",
      "methodName" : "createStream"
    },
    "DecreaseStreamRetentionPeriod" : {
      "documentation" : "<p>Decreases the stream's retention period, which is the length of time data records are accessible after they are added to the stream. The minimum value of a stream’s retention period is 24 hours. </p> <p>This operation may result in lost data. For example, if the stream's retention period is 48 hours and is decreased to 24 hours, any data already in the stream that is older than 24 hours is inaccessible.</p>",
      "operationName" : "DecreaseStreamRetentionPeriod",
      "deprecated" : false,
      "input" : {
        "variableName" : "decreaseStreamRetentionPeriodRequest",
        "variableType" : "DecreaseStreamRetentionPeriodRequest",
        "variableDeclarationType" : "DecreaseStreamRetentionPeriodRequest",
        "documentation" : "<p>Represents the input for <a>DecreaseStreamRetentionPeriod</a>.</p>",
        "simpleType" : "DecreaseStreamRetentionPeriodRequest",
        "variableSetterType" : "DecreaseStreamRetentionPeriodRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Decreases the stream's retention period, which is the length of time data records are accessible after they are added to the stream. The minimum value of a stream’s retention period is 24 hours. </p> <p>This operation may result in lost data. For example, if the stream's retention period is 48 hours and is decreased to 24 hours, any data already in the stream that is older than 24 hours is inaccessible.</p>\n@param decreaseStreamRetentionPeriodRequest Represents the input for <a>DecreaseStreamRetentionPeriod</a>.\n@throws ResourceInUseException The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.*/",
      "asyncDocumentation" : "/**<p>Decreases the stream's retention period, which is the length of time data records are accessible after they are added to the stream. The minimum value of a stream’s retention period is 24 hours. </p> <p>This operation may result in lost data. For example, if the stream's retention period is 48 hours and is decreased to 24 hours, any data already in the stream that is older than 24 hours is inaccessible.</p>\n@param decreaseStreamRetentionPeriodRequest Represents the input for <a>DecreaseStreamRetentionPeriod</a>.*/",
      "asyncDocumentationWithHandler" : "/**<p>Decreases the stream's retention period, which is the length of time data records are accessible after they are added to the stream. The minimum value of a stream’s retention period is 24 hours. </p> <p>This operation may result in lost data. For example, if the stream's retention period is 48 hours and is decreased to 24 hours, any data already in the stream that is older than 24 hours is inaccessible.</p>\n@param decreaseStreamRetentionPeriodRequest Represents the input for <a>DecreaseStreamRetentionPeriod</a>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DecreaseStreamRetentionPeriodRequest, Void>",
      "methodName" : "decreaseStreamRetentionPeriod"
    },
    "DeleteStream" : {
      "documentation" : "<p>Deletes a stream and all its shards and data. You must shut down any applications that are operating on the stream before you delete the stream. If an application attempts to operate on a deleted stream, it will receive the exception <code>ResourceNotFoundException</code>.</p> <p>If the stream is in the <code>ACTIVE</code> state, you can delete it. After a <code>DeleteStream</code> request, the specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</p> <p><b>Note:</b> Amazon Kinesis might continue to accept data read and write operations, such as <a>PutRecord</a>, <a>PutRecords</a>, and <a>GetRecords</a>, on a stream in the <code>DELETING</code> state until the stream deletion is complete.</p> <p>When you delete a stream, any shards in that stream are also deleted, and any tags are dissociated from the stream.</p> <p>You can use the <a>DescribeStream</a> operation to check the state of the stream, which is returned in <code>StreamStatus</code>.</p> <p><a>DeleteStream</a> has a limit of 5 transactions per second per account.</p>",
      "operationName" : "DeleteStream",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteStreamRequest",
        "variableType" : "DeleteStreamRequest",
        "variableDeclarationType" : "DeleteStreamRequest",
        "documentation" : "<p>Represents the input for <a>DeleteStream</a>.</p>",
        "simpleType" : "DeleteStreamRequest",
        "variableSetterType" : "DeleteStreamRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes a stream and all its shards and data. You must shut down any applications that are operating on the stream before you delete the stream. If an application attempts to operate on a deleted stream, it will receive the exception <code>ResourceNotFoundException</code>.</p> <p>If the stream is in the <code>ACTIVE</code> state, you can delete it. After a <code>DeleteStream</code> request, the specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</p> <p><b>Note:</b> Amazon Kinesis might continue to accept data read and write operations, such as <a>PutRecord</a>, <a>PutRecords</a>, and <a>GetRecords</a>, on a stream in the <code>DELETING</code> state until the stream deletion is complete.</p> <p>When you delete a stream, any shards in that stream are also deleted, and any tags are dissociated from the stream.</p> <p>You can use the <a>DescribeStream</a> operation to check the state of the stream, which is returned in <code>StreamStatus</code>.</p> <p><a>DeleteStream</a> has a limit of 5 transactions per second per account.</p>\n@param deleteStreamRequest Represents the input for <a>DeleteStream</a>.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).*/",
      "asyncDocumentation" : "/**<p>Deletes a stream and all its shards and data. You must shut down any applications that are operating on the stream before you delete the stream. If an application attempts to operate on a deleted stream, it will receive the exception <code>ResourceNotFoundException</code>.</p> <p>If the stream is in the <code>ACTIVE</code> state, you can delete it. After a <code>DeleteStream</code> request, the specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</p> <p><b>Note:</b> Amazon Kinesis might continue to accept data read and write operations, such as <a>PutRecord</a>, <a>PutRecords</a>, and <a>GetRecords</a>, on a stream in the <code>DELETING</code> state until the stream deletion is complete.</p> <p>When you delete a stream, any shards in that stream are also deleted, and any tags are dissociated from the stream.</p> <p>You can use the <a>DescribeStream</a> operation to check the state of the stream, which is returned in <code>StreamStatus</code>.</p> <p><a>DeleteStream</a> has a limit of 5 transactions per second per account.</p>\n@param deleteStreamRequest Represents the input for <a>DeleteStream</a>.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes a stream and all its shards and data. You must shut down any applications that are operating on the stream before you delete the stream. If an application attempts to operate on a deleted stream, it will receive the exception <code>ResourceNotFoundException</code>.</p> <p>If the stream is in the <code>ACTIVE</code> state, you can delete it. After a <code>DeleteStream</code> request, the specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</p> <p><b>Note:</b> Amazon Kinesis might continue to accept data read and write operations, such as <a>PutRecord</a>, <a>PutRecords</a>, and <a>GetRecords</a>, on a stream in the <code>DELETING</code> state until the stream deletion is complete.</p> <p>When you delete a stream, any shards in that stream are also deleted, and any tags are dissociated from the stream.</p> <p>You can use the <a>DescribeStream</a> operation to check the state of the stream, which is returned in <code>StreamStatus</code>.</p> <p><a>DeleteStream</a> has a limit of 5 transactions per second per account.</p>\n@param deleteStreamRequest Represents the input for <a>DeleteStream</a>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteStreamRequest, Void>",
      "methodName" : "deleteStream"
    },
    "DescribeStream" : {
      "documentation" : "<p>Describes the specified stream.</p> <p>The information about the stream includes its current status, its Amazon Resource Name (ARN), and an array of shard objects. For each shard object, there is information about the hash key and sequence number ranges that the shard spans, and the IDs of any earlier shards that played in a role in creating the shard. A sequence number is the identifier associated with every record ingested in the Amazon Kinesis stream. The sequence number is assigned when a record is put into the stream.</p> <p>You can limit the number of returned shards using the <code>Limit</code> parameter. The number of shards in a stream may be too large to return from a single call to <code>DescribeStream</code>. You can detect this by using the <code>HasMoreShards</code> flag in the returned output. <code>HasMoreShards</code> is set to <code>true</code> when there is more data available. </p> <p><code>DescribeStream</code> is a paginated operation. If there are more shards available, you can request them using the shard ID of the last shard returned. Specify this ID in the <code>ExclusiveStartShardId</code> parameter in a subsequent request to <code>DescribeStream</code>. </p> <p><a>DescribeStream</a> has a limit of 10 transactions per second per account.</p>",
      "operationName" : "DescribeStream",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeStreamRequest",
        "variableType" : "DescribeStreamRequest",
        "variableDeclarationType" : "DescribeStreamRequest",
        "documentation" : "<p>Represents the input for <code>DescribeStream</code>.</p>",
        "simpleType" : "DescribeStreamRequest",
        "variableSetterType" : "DescribeStreamRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeStreamResult",
        "documentation" : "<p>Represents the output for <code>DescribeStream</code>.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Describes the specified stream.</p> <p>The information about the stream includes its current status, its Amazon Resource Name (ARN), and an array of shard objects. For each shard object, there is information about the hash key and sequence number ranges that the shard spans, and the IDs of any earlier shards that played in a role in creating the shard. A sequence number is the identifier associated with every record ingested in the Amazon Kinesis stream. The sequence number is assigned when a record is put into the stream.</p> <p>You can limit the number of returned shards using the <code>Limit</code> parameter. The number of shards in a stream may be too large to return from a single call to <code>DescribeStream</code>. You can detect this by using the <code>HasMoreShards</code> flag in the returned output. <code>HasMoreShards</code> is set to <code>true</code> when there is more data available. </p> <p><code>DescribeStream</code> is a paginated operation. If there are more shards available, you can request them using the shard ID of the last shard returned. Specify this ID in the <code>ExclusiveStartShardId</code> parameter in a subsequent request to <code>DescribeStream</code>. </p> <p><a>DescribeStream</a> has a limit of 10 transactions per second per account.</p>\n@param describeStreamRequest Represents the input for <code>DescribeStream</code>.\n@return Result of the DescribeStream operation returned by the service.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).*/",
      "asyncDocumentation" : "/**<p>Describes the specified stream.</p> <p>The information about the stream includes its current status, its Amazon Resource Name (ARN), and an array of shard objects. For each shard object, there is information about the hash key and sequence number ranges that the shard spans, and the IDs of any earlier shards that played in a role in creating the shard. A sequence number is the identifier associated with every record ingested in the Amazon Kinesis stream. The sequence number is assigned when a record is put into the stream.</p> <p>You can limit the number of returned shards using the <code>Limit</code> parameter. The number of shards in a stream may be too large to return from a single call to <code>DescribeStream</code>. You can detect this by using the <code>HasMoreShards</code> flag in the returned output. <code>HasMoreShards</code> is set to <code>true</code> when there is more data available. </p> <p><code>DescribeStream</code> is a paginated operation. If there are more shards available, you can request them using the shard ID of the last shard returned. Specify this ID in the <code>ExclusiveStartShardId</code> parameter in a subsequent request to <code>DescribeStream</code>. </p> <p><a>DescribeStream</a> has a limit of 10 transactions per second per account.</p>\n@param describeStreamRequest Represents the input for <code>DescribeStream</code>.\n@return A Java Future containing the result of the DescribeStream operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Describes the specified stream.</p> <p>The information about the stream includes its current status, its Amazon Resource Name (ARN), and an array of shard objects. For each shard object, there is information about the hash key and sequence number ranges that the shard spans, and the IDs of any earlier shards that played in a role in creating the shard. A sequence number is the identifier associated with every record ingested in the Amazon Kinesis stream. The sequence number is assigned when a record is put into the stream.</p> <p>You can limit the number of returned shards using the <code>Limit</code> parameter. The number of shards in a stream may be too large to return from a single call to <code>DescribeStream</code>. You can detect this by using the <code>HasMoreShards</code> flag in the returned output. <code>HasMoreShards</code> is set to <code>true</code> when there is more data available. </p> <p><code>DescribeStream</code> is a paginated operation. If there are more shards available, you can request them using the shard ID of the last shard returned. Specify this ID in the <code>ExclusiveStartShardId</code> parameter in a subsequent request to <code>DescribeStream</code>. </p> <p><a>DescribeStream</a> has a limit of 10 transactions per second per account.</p>\n@param describeStreamRequest Represents the input for <code>DescribeStream</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeStream operation returned by the service.*/",
      "syncReturnType" : "DescribeStreamResult",
      "asyncReturnType" : "DescribeStreamResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeStreamResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeStreamResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult>",
      "methodName" : "describeStream"
    },
    "GetRecords" : {
      "documentation" : "<p>Gets data records from a shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard iterator specifies the position in the shard from which you want to start reading data records sequentially. If there are no records available in the portion of the shard that the iterator points to, <a>GetRecords</a> returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains records.</p> <p>You can scale by provisioning multiple shards. Your application should have one thread per shard, each reading continuously from its stream. To read from a stream continually, call <a>GetRecords</a> in a loop. Use <a>GetShardIterator</a> to get the shard iterator to specify in the first <a>GetRecords</a> call. <a>GetRecords</a> returns a new shard iterator in <code>NextShardIterator</code>. Specify the shard iterator returned in <code>NextShardIterator</code> in subsequent calls to <a>GetRecords</a>. Note that if the shard has been closed, the shard iterator can't return more data and <a>GetRecords</a> returns <code>null</code> in <code>NextShardIterator</code>. You can terminate the loop when the shard is closed, or when the shard iterator reaches the record with the sequence number or other attribute that marks it as the last record to process.</p> <p>Each data record can be up to 1 MB in size, and each shard can read up to 2 MB per second. You can ensure that your calls don't exceed the maximum supported size or throughput by using the <code>Limit</code> parameter to specify the maximum number of records that <a>GetRecords</a> can return. Consider your average record size when determining this limit.</p> <p>The size of the data returned by <a>GetRecords</a> will vary depending on the utilization of the shard. The maximum size of data that <a>GetRecords</a> can return is 10 MB. If a call returns this amount of data, subsequent calls made within the next 5 seconds throw <code>ProvisionedThroughputExceededException</code>. If there is insufficient provisioned throughput on the shard, subsequent calls made within the next 1 second throw <code>ProvisionedThroughputExceededException</code>. Note that <a>GetRecords</a> won't return any data when it throws an exception. For this reason, we recommend that you wait one second between calls to <a>GetRecords</a>; however, it's possible that the application will get exceptions for longer than 1 second.</p> <p>To detect whether the application is falling behind in processing, you can use the <code>MillisBehindLatest</code> response attribute. You can also monitor the stream using CloudWatch metrics (see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/monitoring.html\">Monitoring Amazon Kinesis</a> in the <i>Amazon Kinesis Developer Guide</i>).</p> <p>Each Amazon Kinesis record includes a value, <code>ApproximateArrivalTimestamp</code>, that is set when an Amazon Kinesis stream successfully receives and stores a record. This is commonly referred to as a server-side timestamp, which is different than a client-side timestamp, where the timestamp is set when a data producer creates or sends the record to a stream. The timestamp has millisecond precision. There are no guarantees about the timestamp accuracy, or that the timestamp is always increasing. For example, records in a shard or across a stream might have timestamps that are out of order.</p>",
      "operationName" : "GetRecords",
      "deprecated" : false,
      "input" : {
        "variableName" : "getRecordsRequest",
        "variableType" : "GetRecordsRequest",
        "variableDeclarationType" : "GetRecordsRequest",
        "documentation" : "<p>Represents the input for <a>GetRecords</a>.</p>",
        "simpleType" : "GetRecordsRequest",
        "variableSetterType" : "GetRecordsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetRecordsResult",
        "documentation" : "<p>Represents the output for <a>GetRecords</a>.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.</p>"
      }, {
        "exceptionName" : "ExpiredIteratorException",
        "documentation" : "<p>The provided iterator exceeds the maximum age allowed.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets data records from a shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard iterator specifies the position in the shard from which you want to start reading data records sequentially. If there are no records available in the portion of the shard that the iterator points to, <a>GetRecords</a> returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains records.</p> <p>You can scale by provisioning multiple shards. Your application should have one thread per shard, each reading continuously from its stream. To read from a stream continually, call <a>GetRecords</a> in a loop. Use <a>GetShardIterator</a> to get the shard iterator to specify in the first <a>GetRecords</a> call. <a>GetRecords</a> returns a new shard iterator in <code>NextShardIterator</code>. Specify the shard iterator returned in <code>NextShardIterator</code> in subsequent calls to <a>GetRecords</a>. Note that if the shard has been closed, the shard iterator can't return more data and <a>GetRecords</a> returns <code>null</code> in <code>NextShardIterator</code>. You can terminate the loop when the shard is closed, or when the shard iterator reaches the record with the sequence number or other attribute that marks it as the last record to process.</p> <p>Each data record can be up to 1 MB in size, and each shard can read up to 2 MB per second. You can ensure that your calls don't exceed the maximum supported size or throughput by using the <code>Limit</code> parameter to specify the maximum number of records that <a>GetRecords</a> can return. Consider your average record size when determining this limit.</p> <p>The size of the data returned by <a>GetRecords</a> will vary depending on the utilization of the shard. The maximum size of data that <a>GetRecords</a> can return is 10 MB. If a call returns this amount of data, subsequent calls made within the next 5 seconds throw <code>ProvisionedThroughputExceededException</code>. If there is insufficient provisioned throughput on the shard, subsequent calls made within the next 1 second throw <code>ProvisionedThroughputExceededException</code>. Note that <a>GetRecords</a> won't return any data when it throws an exception. For this reason, we recommend that you wait one second between calls to <a>GetRecords</a>; however, it's possible that the application will get exceptions for longer than 1 second.</p> <p>To detect whether the application is falling behind in processing, you can use the <code>MillisBehindLatest</code> response attribute. You can also monitor the stream using CloudWatch metrics (see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/monitoring.html\">Monitoring Amazon Kinesis</a> in the <i>Amazon Kinesis Developer Guide</i>).</p> <p>Each Amazon Kinesis record includes a value, <code>ApproximateArrivalTimestamp</code>, that is set when an Amazon Kinesis stream successfully receives and stores a record. This is commonly referred to as a server-side timestamp, which is different than a client-side timestamp, where the timestamp is set when a data producer creates or sends the record to a stream. The timestamp has millisecond precision. There are no guarantees about the timestamp accuracy, or that the timestamp is always increasing. For example, records in a shard or across a stream might have timestamps that are out of order.</p>\n@param getRecordsRequest Represents the input for <a>GetRecords</a>.\n@return Result of the GetRecords operation returned by the service.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws ProvisionedThroughputExceededException The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.\n@throws ExpiredIteratorException The provided iterator exceeds the maximum age allowed.*/",
      "asyncDocumentation" : "/**<p>Gets data records from a shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard iterator specifies the position in the shard from which you want to start reading data records sequentially. If there are no records available in the portion of the shard that the iterator points to, <a>GetRecords</a> returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains records.</p> <p>You can scale by provisioning multiple shards. Your application should have one thread per shard, each reading continuously from its stream. To read from a stream continually, call <a>GetRecords</a> in a loop. Use <a>GetShardIterator</a> to get the shard iterator to specify in the first <a>GetRecords</a> call. <a>GetRecords</a> returns a new shard iterator in <code>NextShardIterator</code>. Specify the shard iterator returned in <code>NextShardIterator</code> in subsequent calls to <a>GetRecords</a>. Note that if the shard has been closed, the shard iterator can't return more data and <a>GetRecords</a> returns <code>null</code> in <code>NextShardIterator</code>. You can terminate the loop when the shard is closed, or when the shard iterator reaches the record with the sequence number or other attribute that marks it as the last record to process.</p> <p>Each data record can be up to 1 MB in size, and each shard can read up to 2 MB per second. You can ensure that your calls don't exceed the maximum supported size or throughput by using the <code>Limit</code> parameter to specify the maximum number of records that <a>GetRecords</a> can return. Consider your average record size when determining this limit.</p> <p>The size of the data returned by <a>GetRecords</a> will vary depending on the utilization of the shard. The maximum size of data that <a>GetRecords</a> can return is 10 MB. If a call returns this amount of data, subsequent calls made within the next 5 seconds throw <code>ProvisionedThroughputExceededException</code>. If there is insufficient provisioned throughput on the shard, subsequent calls made within the next 1 second throw <code>ProvisionedThroughputExceededException</code>. Note that <a>GetRecords</a> won't return any data when it throws an exception. For this reason, we recommend that you wait one second between calls to <a>GetRecords</a>; however, it's possible that the application will get exceptions for longer than 1 second.</p> <p>To detect whether the application is falling behind in processing, you can use the <code>MillisBehindLatest</code> response attribute. You can also monitor the stream using CloudWatch metrics (see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/monitoring.html\">Monitoring Amazon Kinesis</a> in the <i>Amazon Kinesis Developer Guide</i>).</p> <p>Each Amazon Kinesis record includes a value, <code>ApproximateArrivalTimestamp</code>, that is set when an Amazon Kinesis stream successfully receives and stores a record. This is commonly referred to as a server-side timestamp, which is different than a client-side timestamp, where the timestamp is set when a data producer creates or sends the record to a stream. The timestamp has millisecond precision. There are no guarantees about the timestamp accuracy, or that the timestamp is always increasing. For example, records in a shard or across a stream might have timestamps that are out of order.</p>\n@param getRecordsRequest Represents the input for <a>GetRecords</a>.\n@return A Java Future containing the result of the GetRecords operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets data records from a shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard iterator specifies the position in the shard from which you want to start reading data records sequentially. If there are no records available in the portion of the shard that the iterator points to, <a>GetRecords</a> returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains records.</p> <p>You can scale by provisioning multiple shards. Your application should have one thread per shard, each reading continuously from its stream. To read from a stream continually, call <a>GetRecords</a> in a loop. Use <a>GetShardIterator</a> to get the shard iterator to specify in the first <a>GetRecords</a> call. <a>GetRecords</a> returns a new shard iterator in <code>NextShardIterator</code>. Specify the shard iterator returned in <code>NextShardIterator</code> in subsequent calls to <a>GetRecords</a>. Note that if the shard has been closed, the shard iterator can't return more data and <a>GetRecords</a> returns <code>null</code> in <code>NextShardIterator</code>. You can terminate the loop when the shard is closed, or when the shard iterator reaches the record with the sequence number or other attribute that marks it as the last record to process.</p> <p>Each data record can be up to 1 MB in size, and each shard can read up to 2 MB per second. You can ensure that your calls don't exceed the maximum supported size or throughput by using the <code>Limit</code> parameter to specify the maximum number of records that <a>GetRecords</a> can return. Consider your average record size when determining this limit.</p> <p>The size of the data returned by <a>GetRecords</a> will vary depending on the utilization of the shard. The maximum size of data that <a>GetRecords</a> can return is 10 MB. If a call returns this amount of data, subsequent calls made within the next 5 seconds throw <code>ProvisionedThroughputExceededException</code>. If there is insufficient provisioned throughput on the shard, subsequent calls made within the next 1 second throw <code>ProvisionedThroughputExceededException</code>. Note that <a>GetRecords</a> won't return any data when it throws an exception. For this reason, we recommend that you wait one second between calls to <a>GetRecords</a>; however, it's possible that the application will get exceptions for longer than 1 second.</p> <p>To detect whether the application is falling behind in processing, you can use the <code>MillisBehindLatest</code> response attribute. You can also monitor the stream using CloudWatch metrics (see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/monitoring.html\">Monitoring Amazon Kinesis</a> in the <i>Amazon Kinesis Developer Guide</i>).</p> <p>Each Amazon Kinesis record includes a value, <code>ApproximateArrivalTimestamp</code>, that is set when an Amazon Kinesis stream successfully receives and stores a record. This is commonly referred to as a server-side timestamp, which is different than a client-side timestamp, where the timestamp is set when a data producer creates or sends the record to a stream. The timestamp has millisecond precision. There are no guarantees about the timestamp accuracy, or that the timestamp is always increasing. For example, records in a shard or across a stream might have timestamps that are out of order.</p>\n@param getRecordsRequest Represents the input for <a>GetRecords</a>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetRecords operation returned by the service.*/",
      "syncReturnType" : "GetRecordsResult",
      "asyncReturnType" : "GetRecordsResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetRecordsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetRecordsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRecordsRequest, GetRecordsResult>",
      "methodName" : "getRecords"
    },
    "GetShardIterator" : {
      "documentation" : "<p>Gets a shard iterator. A shard iterator expires five minutes after it is returned to the requester.</p> <p>A shard iterator specifies the position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard. A sequence number is the identifier associated with every record ingested in the Amazon Kinesis stream. The sequence number is assigned when a record is put into the stream. </p> <p>You must specify the shard iterator type. For example, you can set the <code>ShardIteratorType</code> parameter to read exactly from the position denoted by a specific sequence number by using the <code>AT_SEQUENCE_NUMBER</code> shard iterator type, or right after the sequence number by using the <code>AFTER_SEQUENCE_NUMBER</code> shard iterator type, using sequence numbers returned by earlier calls to <a>PutRecord</a>, <a>PutRecords</a>, <a>GetRecords</a>, or <a>DescribeStream</a>. You can specify the shard iterator type <code>TRIM_HORIZON</code> in the request to cause <code>ShardIterator</code> to point to the last untrimmed record in the shard in the system, which is the oldest data record in the shard. Or you can point to just after the most recent record in the shard, by using the shard iterator type <code>LATEST</code>, so that you always read the most recent data in the shard. </p> <p>When you repeatedly read from an Amazon Kinesis stream use a <a>GetShardIterator</a> request to get the first shard iterator for use in your first <a>GetRecords</a> request and then use the shard iterator returned by the <a>GetRecords</a> request in <code>NextShardIterator</code> for subsequent reads. A new shard iterator is returned by every <a>GetRecords</a> request in <code>NextShardIterator</code>, which you use in the <code>ShardIterator</code> parameter of the next <a>GetRecords</a> request. </p> <p>If a <a>GetShardIterator</a> request is made too often, you receive a <code>ProvisionedThroughputExceededException</code>. For more information about throughput limits, see <a>GetRecords</a>.</p> <p>If the shard is closed, the iterator can't return more data, and <a>GetShardIterator</a> returns <code>null</code> for its <code>ShardIterator</code>. A shard can be closed using <a>SplitShard</a> or <a>MergeShards</a>.</p> <p><a>GetShardIterator</a> has a limit of 5 transactions per second per account per open shard.</p>",
      "operationName" : "GetShardIterator",
      "deprecated" : false,
      "input" : {
        "variableName" : "getShardIteratorRequest",
        "variableType" : "GetShardIteratorRequest",
        "variableDeclarationType" : "GetShardIteratorRequest",
        "documentation" : "<p>Represents the input for <code>GetShardIterator</code>.</p>",
        "simpleType" : "GetShardIteratorRequest",
        "variableSetterType" : "GetShardIteratorRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetShardIteratorResult",
        "documentation" : "<p>Represents the output for <code>GetShardIterator</code>.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets a shard iterator. A shard iterator expires five minutes after it is returned to the requester.</p> <p>A shard iterator specifies the position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard. A sequence number is the identifier associated with every record ingested in the Amazon Kinesis stream. The sequence number is assigned when a record is put into the stream. </p> <p>You must specify the shard iterator type. For example, you can set the <code>ShardIteratorType</code> parameter to read exactly from the position denoted by a specific sequence number by using the <code>AT_SEQUENCE_NUMBER</code> shard iterator type, or right after the sequence number by using the <code>AFTER_SEQUENCE_NUMBER</code> shard iterator type, using sequence numbers returned by earlier calls to <a>PutRecord</a>, <a>PutRecords</a>, <a>GetRecords</a>, or <a>DescribeStream</a>. You can specify the shard iterator type <code>TRIM_HORIZON</code> in the request to cause <code>ShardIterator</code> to point to the last untrimmed record in the shard in the system, which is the oldest data record in the shard. Or you can point to just after the most recent record in the shard, by using the shard iterator type <code>LATEST</code>, so that you always read the most recent data in the shard. </p> <p>When you repeatedly read from an Amazon Kinesis stream use a <a>GetShardIterator</a> request to get the first shard iterator for use in your first <a>GetRecords</a> request and then use the shard iterator returned by the <a>GetRecords</a> request in <code>NextShardIterator</code> for subsequent reads. A new shard iterator is returned by every <a>GetRecords</a> request in <code>NextShardIterator</code>, which you use in the <code>ShardIterator</code> parameter of the next <a>GetRecords</a> request. </p> <p>If a <a>GetShardIterator</a> request is made too often, you receive a <code>ProvisionedThroughputExceededException</code>. For more information about throughput limits, see <a>GetRecords</a>.</p> <p>If the shard is closed, the iterator can't return more data, and <a>GetShardIterator</a> returns <code>null</code> for its <code>ShardIterator</code>. A shard can be closed using <a>SplitShard</a> or <a>MergeShards</a>.</p> <p><a>GetShardIterator</a> has a limit of 5 transactions per second per account per open shard.</p>\n@param getShardIteratorRequest Represents the input for <code>GetShardIterator</code>.\n@return Result of the GetShardIterator operation returned by the service.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws ProvisionedThroughputExceededException The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.*/",
      "asyncDocumentation" : "/**<p>Gets a shard iterator. A shard iterator expires five minutes after it is returned to the requester.</p> <p>A shard iterator specifies the position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard. A sequence number is the identifier associated with every record ingested in the Amazon Kinesis stream. The sequence number is assigned when a record is put into the stream. </p> <p>You must specify the shard iterator type. For example, you can set the <code>ShardIteratorType</code> parameter to read exactly from the position denoted by a specific sequence number by using the <code>AT_SEQUENCE_NUMBER</code> shard iterator type, or right after the sequence number by using the <code>AFTER_SEQUENCE_NUMBER</code> shard iterator type, using sequence numbers returned by earlier calls to <a>PutRecord</a>, <a>PutRecords</a>, <a>GetRecords</a>, or <a>DescribeStream</a>. You can specify the shard iterator type <code>TRIM_HORIZON</code> in the request to cause <code>ShardIterator</code> to point to the last untrimmed record in the shard in the system, which is the oldest data record in the shard. Or you can point to just after the most recent record in the shard, by using the shard iterator type <code>LATEST</code>, so that you always read the most recent data in the shard. </p> <p>When you repeatedly read from an Amazon Kinesis stream use a <a>GetShardIterator</a> request to get the first shard iterator for use in your first <a>GetRecords</a> request and then use the shard iterator returned by the <a>GetRecords</a> request in <code>NextShardIterator</code> for subsequent reads. A new shard iterator is returned by every <a>GetRecords</a> request in <code>NextShardIterator</code>, which you use in the <code>ShardIterator</code> parameter of the next <a>GetRecords</a> request. </p> <p>If a <a>GetShardIterator</a> request is made too often, you receive a <code>ProvisionedThroughputExceededException</code>. For more information about throughput limits, see <a>GetRecords</a>.</p> <p>If the shard is closed, the iterator can't return more data, and <a>GetShardIterator</a> returns <code>null</code> for its <code>ShardIterator</code>. A shard can be closed using <a>SplitShard</a> or <a>MergeShards</a>.</p> <p><a>GetShardIterator</a> has a limit of 5 transactions per second per account per open shard.</p>\n@param getShardIteratorRequest Represents the input for <code>GetShardIterator</code>.\n@return A Java Future containing the result of the GetShardIterator operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets a shard iterator. A shard iterator expires five minutes after it is returned to the requester.</p> <p>A shard iterator specifies the position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard. A sequence number is the identifier associated with every record ingested in the Amazon Kinesis stream. The sequence number is assigned when a record is put into the stream. </p> <p>You must specify the shard iterator type. For example, you can set the <code>ShardIteratorType</code> parameter to read exactly from the position denoted by a specific sequence number by using the <code>AT_SEQUENCE_NUMBER</code> shard iterator type, or right after the sequence number by using the <code>AFTER_SEQUENCE_NUMBER</code> shard iterator type, using sequence numbers returned by earlier calls to <a>PutRecord</a>, <a>PutRecords</a>, <a>GetRecords</a>, or <a>DescribeStream</a>. You can specify the shard iterator type <code>TRIM_HORIZON</code> in the request to cause <code>ShardIterator</code> to point to the last untrimmed record in the shard in the system, which is the oldest data record in the shard. Or you can point to just after the most recent record in the shard, by using the shard iterator type <code>LATEST</code>, so that you always read the most recent data in the shard. </p> <p>When you repeatedly read from an Amazon Kinesis stream use a <a>GetShardIterator</a> request to get the first shard iterator for use in your first <a>GetRecords</a> request and then use the shard iterator returned by the <a>GetRecords</a> request in <code>NextShardIterator</code> for subsequent reads. A new shard iterator is returned by every <a>GetRecords</a> request in <code>NextShardIterator</code>, which you use in the <code>ShardIterator</code> parameter of the next <a>GetRecords</a> request. </p> <p>If a <a>GetShardIterator</a> request is made too often, you receive a <code>ProvisionedThroughputExceededException</code>. For more information about throughput limits, see <a>GetRecords</a>.</p> <p>If the shard is closed, the iterator can't return more data, and <a>GetShardIterator</a> returns <code>null</code> for its <code>ShardIterator</code>. A shard can be closed using <a>SplitShard</a> or <a>MergeShards</a>.</p> <p><a>GetShardIterator</a> has a limit of 5 transactions per second per account per open shard.</p>\n@param getShardIteratorRequest Represents the input for <code>GetShardIterator</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetShardIterator operation returned by the service.*/",
      "syncReturnType" : "GetShardIteratorResult",
      "asyncReturnType" : "GetShardIteratorResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetShardIteratorResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetShardIteratorResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetShardIteratorRequest, GetShardIteratorResult>",
      "methodName" : "getShardIterator"
    },
    "IncreaseStreamRetentionPeriod" : {
      "documentation" : "<p>Increases the stream's retention period, which is the length of time data records are accessible after they are added to the stream. The maximum value of a stream’s retention period is 168 hours (7 days).</p> <p>Upon choosing a longer stream retention period, this operation will increase the time period records are accessible that have not yet expired. However, it will not make previous data that has expired (older than the stream’s previous retention period) accessible after the operation has been called. For example, if a stream’s retention period is set to 24 hours and is increased to 168 hours, any data that is older than 24 hours will remain inaccessible to consumer applications.</p>",
      "operationName" : "IncreaseStreamRetentionPeriod",
      "deprecated" : false,
      "input" : {
        "variableName" : "increaseStreamRetentionPeriodRequest",
        "variableType" : "IncreaseStreamRetentionPeriodRequest",
        "variableDeclarationType" : "IncreaseStreamRetentionPeriodRequest",
        "documentation" : "<p>Represents the input for <a>IncreaseStreamRetentionPeriod</a>.</p>",
        "simpleType" : "IncreaseStreamRetentionPeriodRequest",
        "variableSetterType" : "IncreaseStreamRetentionPeriodRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Increases the stream's retention period, which is the length of time data records are accessible after they are added to the stream. The maximum value of a stream’s retention period is 168 hours (7 days).</p> <p>Upon choosing a longer stream retention period, this operation will increase the time period records are accessible that have not yet expired. However, it will not make previous data that has expired (older than the stream’s previous retention period) accessible after the operation has been called. For example, if a stream’s retention period is set to 24 hours and is increased to 168 hours, any data that is older than 24 hours will remain inaccessible to consumer applications.</p>\n@param increaseStreamRetentionPeriodRequest Represents the input for <a>IncreaseStreamRetentionPeriod</a>.\n@throws ResourceInUseException The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.*/",
      "asyncDocumentation" : "/**<p>Increases the stream's retention period, which is the length of time data records are accessible after they are added to the stream. The maximum value of a stream’s retention period is 168 hours (7 days).</p> <p>Upon choosing a longer stream retention period, this operation will increase the time period records are accessible that have not yet expired. However, it will not make previous data that has expired (older than the stream’s previous retention period) accessible after the operation has been called. For example, if a stream’s retention period is set to 24 hours and is increased to 168 hours, any data that is older than 24 hours will remain inaccessible to consumer applications.</p>\n@param increaseStreamRetentionPeriodRequest Represents the input for <a>IncreaseStreamRetentionPeriod</a>.*/",
      "asyncDocumentationWithHandler" : "/**<p>Increases the stream's retention period, which is the length of time data records are accessible after they are added to the stream. The maximum value of a stream’s retention period is 168 hours (7 days).</p> <p>Upon choosing a longer stream retention period, this operation will increase the time period records are accessible that have not yet expired. However, it will not make previous data that has expired (older than the stream’s previous retention period) accessible after the operation has been called. For example, if a stream’s retention period is set to 24 hours and is increased to 168 hours, any data that is older than 24 hours will remain inaccessible to consumer applications.</p>\n@param increaseStreamRetentionPeriodRequest Represents the input for <a>IncreaseStreamRetentionPeriod</a>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<IncreaseStreamRetentionPeriodRequest, Void>",
      "methodName" : "increaseStreamRetentionPeriod"
    },
    "ListStreams" : {
      "documentation" : "<p> Lists your streams.</p> <p> The number of streams may be too large to return from a single call to <code>ListStreams</code>. You can limit the number of returned streams using the <code>Limit</code> parameter. If you do not specify a value for the <code>Limit</code> parameter, Amazon Kinesis uses the default limit, which is currently 10.</p> <p> You can detect if there are more streams available to list by using the <code>HasMoreStreams</code> flag from the returned output. If there are more streams available, you can request more streams by using the name of the last stream returned by the <code>ListStreams</code> request in the <code>ExclusiveStartStreamName</code> parameter in a subsequent request to <code>ListStreams</code>. The group of stream names returned by the subsequent request is then added to the list. You can continue this process until all the stream names have been collected in the list. </p> <p><a>ListStreams</a> has a limit of 5 transactions per second per account.</p>",
      "operationName" : "ListStreams",
      "deprecated" : false,
      "input" : {
        "variableName" : "listStreamsRequest",
        "variableType" : "ListStreamsRequest",
        "variableDeclarationType" : "ListStreamsRequest",
        "documentation" : "<p>Represents the input for <code>ListStreams</code>.</p>",
        "simpleType" : "ListStreamsRequest",
        "variableSetterType" : "ListStreamsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListStreamsResult",
        "documentation" : "<p>Represents the output for <code>ListStreams</code>.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p> Lists your streams.</p> <p> The number of streams may be too large to return from a single call to <code>ListStreams</code>. You can limit the number of returned streams using the <code>Limit</code> parameter. If you do not specify a value for the <code>Limit</code> parameter, Amazon Kinesis uses the default limit, which is currently 10.</p> <p> You can detect if there are more streams available to list by using the <code>HasMoreStreams</code> flag from the returned output. If there are more streams available, you can request more streams by using the name of the last stream returned by the <code>ListStreams</code> request in the <code>ExclusiveStartStreamName</code> parameter in a subsequent request to <code>ListStreams</code>. The group of stream names returned by the subsequent request is then added to the list. You can continue this process until all the stream names have been collected in the list. </p> <p><a>ListStreams</a> has a limit of 5 transactions per second per account.</p>\n@param listStreamsRequest Represents the input for <code>ListStreams</code>.\n@return Result of the ListStreams operation returned by the service.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).*/",
      "asyncDocumentation" : "/**<p> Lists your streams.</p> <p> The number of streams may be too large to return from a single call to <code>ListStreams</code>. You can limit the number of returned streams using the <code>Limit</code> parameter. If you do not specify a value for the <code>Limit</code> parameter, Amazon Kinesis uses the default limit, which is currently 10.</p> <p> You can detect if there are more streams available to list by using the <code>HasMoreStreams</code> flag from the returned output. If there are more streams available, you can request more streams by using the name of the last stream returned by the <code>ListStreams</code> request in the <code>ExclusiveStartStreamName</code> parameter in a subsequent request to <code>ListStreams</code>. The group of stream names returned by the subsequent request is then added to the list. You can continue this process until all the stream names have been collected in the list. </p> <p><a>ListStreams</a> has a limit of 5 transactions per second per account.</p>\n@param listStreamsRequest Represents the input for <code>ListStreams</code>.\n@return A Java Future containing the result of the ListStreams operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p> Lists your streams.</p> <p> The number of streams may be too large to return from a single call to <code>ListStreams</code>. You can limit the number of returned streams using the <code>Limit</code> parameter. If you do not specify a value for the <code>Limit</code> parameter, Amazon Kinesis uses the default limit, which is currently 10.</p> <p> You can detect if there are more streams available to list by using the <code>HasMoreStreams</code> flag from the returned output. If there are more streams available, you can request more streams by using the name of the last stream returned by the <code>ListStreams</code> request in the <code>ExclusiveStartStreamName</code> parameter in a subsequent request to <code>ListStreams</code>. The group of stream names returned by the subsequent request is then added to the list. You can continue this process until all the stream names have been collected in the list. </p> <p><a>ListStreams</a> has a limit of 5 transactions per second per account.</p>\n@param listStreamsRequest Represents the input for <code>ListStreams</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListStreams operation returned by the service.*/",
      "syncReturnType" : "ListStreamsResult",
      "asyncReturnType" : "ListStreamsResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListStreamsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListStreamsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult>",
      "methodName" : "listStreams"
    },
    "ListTagsForStream" : {
      "documentation" : "<p>Lists the tags for the specified Amazon Kinesis stream.</p>",
      "operationName" : "ListTagsForStream",
      "deprecated" : false,
      "input" : {
        "variableName" : "listTagsForStreamRequest",
        "variableType" : "ListTagsForStreamRequest",
        "variableDeclarationType" : "ListTagsForStreamRequest",
        "documentation" : "<p>Represents the input for <code>ListTagsForStream</code>.</p>",
        "simpleType" : "ListTagsForStreamRequest",
        "variableSetterType" : "ListTagsForStreamRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListTagsForStreamResult",
        "documentation" : "<p>Represents the output for <code>ListTagsForStream</code>.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists the tags for the specified Amazon Kinesis stream.</p>\n@param listTagsForStreamRequest Represents the input for <code>ListTagsForStream</code>.\n@return Result of the ListTagsForStream operation returned by the service.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).*/",
      "asyncDocumentation" : "/**<p>Lists the tags for the specified Amazon Kinesis stream.</p>\n@param listTagsForStreamRequest Represents the input for <code>ListTagsForStream</code>.\n@return A Java Future containing the result of the ListTagsForStream operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists the tags for the specified Amazon Kinesis stream.</p>\n@param listTagsForStreamRequest Represents the input for <code>ListTagsForStream</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListTagsForStream operation returned by the service.*/",
      "syncReturnType" : "ListTagsForStreamResult",
      "asyncReturnType" : "ListTagsForStreamResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListTagsForStreamResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListTagsForStreamResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTagsForStreamRequest, ListTagsForStreamResult>",
      "methodName" : "listTagsForStream"
    },
    "MergeShards" : {
      "documentation" : "<p>Merges two adjacent shards in a stream and combines them into a single shard to reduce the stream's capacity to ingest and transport data. Two shards are considered adjacent if the union of the hash key ranges for the two shards form a contiguous set with no gaps. For example, if you have two shards, one with a hash key range of 276...381 and the other with a hash key range of 382...454, then you could merge these two shards into a single shard that would have a hash key range of 276...454. After the merge, the single child shard receives data for all hash key values covered by the two parent shards.</p> <p><code>MergeShards</code> is called when there is a need to reduce the overall capacity of a stream because of excess capacity that is not being used. You must specify the shard to be merged and the adjacent shard for a stream. For more information about merging shards, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-merge.html\">Merge Two Shards</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>If the stream is in the <code>ACTIVE</code> state, you can call <code>MergeShards</code>. If a stream is in the <code>CREATING</code>, <code>UPDATING</code>, or <code>DELETING</code> state, <code>MergeShards</code> returns a <code>ResourceInUseException</code>. If the specified stream does not exist, <code>MergeShards</code> returns a <code>ResourceNotFoundException</code>. </p> <p>You can use <a>DescribeStream</a> to check the state of the stream, which is returned in <code>StreamStatus</code>.</p> <p><code>MergeShards</code> is an asynchronous operation. Upon receiving a <code>MergeShards</code> request, Amazon Kinesis immediately returns a response and sets the <code>StreamStatus</code> to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the <code>StreamStatus</code> to <code>ACTIVE</code>. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state. </p> <p>You use <a>DescribeStream</a> to determine the shard IDs that are specified in the <code>MergeShards</code> request. </p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>, <code>MergeShards</code> or <a>SplitShard</a>, you will receive a <code>LimitExceededException</code>. </p> <p><code>MergeShards</code> has limit of 5 transactions per second per account.</p>",
      "operationName" : "MergeShards",
      "deprecated" : false,
      "input" : {
        "variableName" : "mergeShardsRequest",
        "variableType" : "MergeShardsRequest",
        "variableDeclarationType" : "MergeShardsRequest",
        "documentation" : "<p>Represents the input for <code>MergeShards</code>.</p>",
        "simpleType" : "MergeShardsRequest",
        "variableSetterType" : "MergeShardsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Merges two adjacent shards in a stream and combines them into a single shard to reduce the stream's capacity to ingest and transport data. Two shards are considered adjacent if the union of the hash key ranges for the two shards form a contiguous set with no gaps. For example, if you have two shards, one with a hash key range of 276...381 and the other with a hash key range of 382...454, then you could merge these two shards into a single shard that would have a hash key range of 276...454. After the merge, the single child shard receives data for all hash key values covered by the two parent shards.</p> <p><code>MergeShards</code> is called when there is a need to reduce the overall capacity of a stream because of excess capacity that is not being used. You must specify the shard to be merged and the adjacent shard for a stream. For more information about merging shards, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-merge.html\">Merge Two Shards</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>If the stream is in the <code>ACTIVE</code> state, you can call <code>MergeShards</code>. If a stream is in the <code>CREATING</code>, <code>UPDATING</code>, or <code>DELETING</code> state, <code>MergeShards</code> returns a <code>ResourceInUseException</code>. If the specified stream does not exist, <code>MergeShards</code> returns a <code>ResourceNotFoundException</code>. </p> <p>You can use <a>DescribeStream</a> to check the state of the stream, which is returned in <code>StreamStatus</code>.</p> <p><code>MergeShards</code> is an asynchronous operation. Upon receiving a <code>MergeShards</code> request, Amazon Kinesis immediately returns a response and sets the <code>StreamStatus</code> to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the <code>StreamStatus</code> to <code>ACTIVE</code>. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state. </p> <p>You use <a>DescribeStream</a> to determine the shard IDs that are specified in the <code>MergeShards</code> request. </p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>, <code>MergeShards</code> or <a>SplitShard</a>, you will receive a <code>LimitExceededException</code>. </p> <p><code>MergeShards</code> has limit of 5 transactions per second per account.</p>\n@param mergeShardsRequest Represents the input for <code>MergeShards</code>.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws ResourceInUseException The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).*/",
      "asyncDocumentation" : "/**<p>Merges two adjacent shards in a stream and combines them into a single shard to reduce the stream's capacity to ingest and transport data. Two shards are considered adjacent if the union of the hash key ranges for the two shards form a contiguous set with no gaps. For example, if you have two shards, one with a hash key range of 276...381 and the other with a hash key range of 382...454, then you could merge these two shards into a single shard that would have a hash key range of 276...454. After the merge, the single child shard receives data for all hash key values covered by the two parent shards.</p> <p><code>MergeShards</code> is called when there is a need to reduce the overall capacity of a stream because of excess capacity that is not being used. You must specify the shard to be merged and the adjacent shard for a stream. For more information about merging shards, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-merge.html\">Merge Two Shards</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>If the stream is in the <code>ACTIVE</code> state, you can call <code>MergeShards</code>. If a stream is in the <code>CREATING</code>, <code>UPDATING</code>, or <code>DELETING</code> state, <code>MergeShards</code> returns a <code>ResourceInUseException</code>. If the specified stream does not exist, <code>MergeShards</code> returns a <code>ResourceNotFoundException</code>. </p> <p>You can use <a>DescribeStream</a> to check the state of the stream, which is returned in <code>StreamStatus</code>.</p> <p><code>MergeShards</code> is an asynchronous operation. Upon receiving a <code>MergeShards</code> request, Amazon Kinesis immediately returns a response and sets the <code>StreamStatus</code> to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the <code>StreamStatus</code> to <code>ACTIVE</code>. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state. </p> <p>You use <a>DescribeStream</a> to determine the shard IDs that are specified in the <code>MergeShards</code> request. </p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>, <code>MergeShards</code> or <a>SplitShard</a>, you will receive a <code>LimitExceededException</code>. </p> <p><code>MergeShards</code> has limit of 5 transactions per second per account.</p>\n@param mergeShardsRequest Represents the input for <code>MergeShards</code>.*/",
      "asyncDocumentationWithHandler" : "/**<p>Merges two adjacent shards in a stream and combines them into a single shard to reduce the stream's capacity to ingest and transport data. Two shards are considered adjacent if the union of the hash key ranges for the two shards form a contiguous set with no gaps. For example, if you have two shards, one with a hash key range of 276...381 and the other with a hash key range of 382...454, then you could merge these two shards into a single shard that would have a hash key range of 276...454. After the merge, the single child shard receives data for all hash key values covered by the two parent shards.</p> <p><code>MergeShards</code> is called when there is a need to reduce the overall capacity of a stream because of excess capacity that is not being used. You must specify the shard to be merged and the adjacent shard for a stream. For more information about merging shards, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-merge.html\">Merge Two Shards</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>If the stream is in the <code>ACTIVE</code> state, you can call <code>MergeShards</code>. If a stream is in the <code>CREATING</code>, <code>UPDATING</code>, or <code>DELETING</code> state, <code>MergeShards</code> returns a <code>ResourceInUseException</code>. If the specified stream does not exist, <code>MergeShards</code> returns a <code>ResourceNotFoundException</code>. </p> <p>You can use <a>DescribeStream</a> to check the state of the stream, which is returned in <code>StreamStatus</code>.</p> <p><code>MergeShards</code> is an asynchronous operation. Upon receiving a <code>MergeShards</code> request, Amazon Kinesis immediately returns a response and sets the <code>StreamStatus</code> to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the <code>StreamStatus</code> to <code>ACTIVE</code>. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state. </p> <p>You use <a>DescribeStream</a> to determine the shard IDs that are specified in the <code>MergeShards</code> request. </p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>, <code>MergeShards</code> or <a>SplitShard</a>, you will receive a <code>LimitExceededException</code>. </p> <p><code>MergeShards</code> has limit of 5 transactions per second per account.</p>\n@param mergeShardsRequest Represents the input for <code>MergeShards</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<MergeShardsRequest, Void>",
      "methodName" : "mergeShards"
    },
    "PutRecord" : {
      "documentation" : "<p>Writes a single data record from a producer into an Amazon Kinesis stream. Call <code>PutRecord</code> to send data from the producer into the Amazon Kinesis stream for real-time ingestion and subsequent processing, one record at a time. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second.</p> <p>You must specify the name of the stream that captures, stores, and transports the data; a partition key; and the data blob itself.</p> <p>The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon Kinesis to distribute data across shards. Amazon Kinesis segregates the data records that belong to a data stream into multiple shards, using the partition key associated with each data record to determine which shard a given data record belongs to. </p> <p>Partition keys are Unicode strings, with a maximum length limit of 256 characters for each key. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards using the hash key ranges of the shards. You can override hashing the partition key to determine the shard by explicitly specifying a hash value using the <code>ExplicitHashKey</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p><code>PutRecord</code> returns the shard ID of where the data record was placed and the sequence number that was assigned to the data record.</p> <p>Sequence numbers generally increase over time. To guarantee strictly increasing ordering, use the <code>SequenceNumberForOrdering</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>If a <code>PutRecord</code> request cannot be processed because of insufficient provisioned throughput on the shard involved in the request, <code>PutRecord</code> throws <code>ProvisionedThroughputExceededException</code>. </p> <p>By default, data records are accessible for only 24 hours from the time that they are added to an Amazon Kinesis stream. This retention period can be modified using the <a>DecreaseStreamRetentionPeriod</a> and <a>IncreaseStreamRetentionPeriod</a> operations.</p>",
      "operationName" : "PutRecord",
      "deprecated" : false,
      "input" : {
        "variableName" : "putRecordRequest",
        "variableType" : "PutRecordRequest",
        "variableDeclarationType" : "PutRecordRequest",
        "documentation" : "<p>Represents the input for <code>PutRecord</code>.</p>",
        "simpleType" : "PutRecordRequest",
        "variableSetterType" : "PutRecordRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "PutRecordResult",
        "documentation" : "<p>Represents the output for <code>PutRecord</code>.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Writes a single data record from a producer into an Amazon Kinesis stream. Call <code>PutRecord</code> to send data from the producer into the Amazon Kinesis stream for real-time ingestion and subsequent processing, one record at a time. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second.</p> <p>You must specify the name of the stream that captures, stores, and transports the data; a partition key; and the data blob itself.</p> <p>The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon Kinesis to distribute data across shards. Amazon Kinesis segregates the data records that belong to a data stream into multiple shards, using the partition key associated with each data record to determine which shard a given data record belongs to. </p> <p>Partition keys are Unicode strings, with a maximum length limit of 256 characters for each key. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards using the hash key ranges of the shards. You can override hashing the partition key to determine the shard by explicitly specifying a hash value using the <code>ExplicitHashKey</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p><code>PutRecord</code> returns the shard ID of where the data record was placed and the sequence number that was assigned to the data record.</p> <p>Sequence numbers generally increase over time. To guarantee strictly increasing ordering, use the <code>SequenceNumberForOrdering</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>If a <code>PutRecord</code> request cannot be processed because of insufficient provisioned throughput on the shard involved in the request, <code>PutRecord</code> throws <code>ProvisionedThroughputExceededException</code>. </p> <p>By default, data records are accessible for only 24 hours from the time that they are added to an Amazon Kinesis stream. This retention period can be modified using the <a>DecreaseStreamRetentionPeriod</a> and <a>IncreaseStreamRetentionPeriod</a> operations.</p>\n@param putRecordRequest Represents the input for <code>PutRecord</code>.\n@return Result of the PutRecord operation returned by the service.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws ProvisionedThroughputExceededException The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.*/",
      "asyncDocumentation" : "/**<p>Writes a single data record from a producer into an Amazon Kinesis stream. Call <code>PutRecord</code> to send data from the producer into the Amazon Kinesis stream for real-time ingestion and subsequent processing, one record at a time. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second.</p> <p>You must specify the name of the stream that captures, stores, and transports the data; a partition key; and the data blob itself.</p> <p>The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon Kinesis to distribute data across shards. Amazon Kinesis segregates the data records that belong to a data stream into multiple shards, using the partition key associated with each data record to determine which shard a given data record belongs to. </p> <p>Partition keys are Unicode strings, with a maximum length limit of 256 characters for each key. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards using the hash key ranges of the shards. You can override hashing the partition key to determine the shard by explicitly specifying a hash value using the <code>ExplicitHashKey</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p><code>PutRecord</code> returns the shard ID of where the data record was placed and the sequence number that was assigned to the data record.</p> <p>Sequence numbers generally increase over time. To guarantee strictly increasing ordering, use the <code>SequenceNumberForOrdering</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>If a <code>PutRecord</code> request cannot be processed because of insufficient provisioned throughput on the shard involved in the request, <code>PutRecord</code> throws <code>ProvisionedThroughputExceededException</code>. </p> <p>By default, data records are accessible for only 24 hours from the time that they are added to an Amazon Kinesis stream. This retention period can be modified using the <a>DecreaseStreamRetentionPeriod</a> and <a>IncreaseStreamRetentionPeriod</a> operations.</p>\n@param putRecordRequest Represents the input for <code>PutRecord</code>.\n@return A Java Future containing the result of the PutRecord operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Writes a single data record from a producer into an Amazon Kinesis stream. Call <code>PutRecord</code> to send data from the producer into the Amazon Kinesis stream for real-time ingestion and subsequent processing, one record at a time. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second.</p> <p>You must specify the name of the stream that captures, stores, and transports the data; a partition key; and the data blob itself.</p> <p>The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon Kinesis to distribute data across shards. Amazon Kinesis segregates the data records that belong to a data stream into multiple shards, using the partition key associated with each data record to determine which shard a given data record belongs to. </p> <p>Partition keys are Unicode strings, with a maximum length limit of 256 characters for each key. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards using the hash key ranges of the shards. You can override hashing the partition key to determine the shard by explicitly specifying a hash value using the <code>ExplicitHashKey</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p><code>PutRecord</code> returns the shard ID of where the data record was placed and the sequence number that was assigned to the data record.</p> <p>Sequence numbers generally increase over time. To guarantee strictly increasing ordering, use the <code>SequenceNumberForOrdering</code> parameter. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>If a <code>PutRecord</code> request cannot be processed because of insufficient provisioned throughput on the shard involved in the request, <code>PutRecord</code> throws <code>ProvisionedThroughputExceededException</code>. </p> <p>By default, data records are accessible for only 24 hours from the time that they are added to an Amazon Kinesis stream. This retention period can be modified using the <a>DecreaseStreamRetentionPeriod</a> and <a>IncreaseStreamRetentionPeriod</a> operations.</p>\n@param putRecordRequest Represents the input for <code>PutRecord</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the PutRecord operation returned by the service.*/",
      "syncReturnType" : "PutRecordResult",
      "asyncReturnType" : "PutRecordResult",
      "asyncFutureType" : "java.util.concurrent.Future<PutRecordResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<PutRecordResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutRecordRequest, PutRecordResult>",
      "methodName" : "putRecord"
    },
    "PutRecords" : {
      "documentation" : "<p>Writes multiple data records from a producer into an Amazon Kinesis stream in a single call (also referred to as a <code>PutRecords</code> request). Use this operation to send data from a data producer into the Amazon Kinesis stream for data ingestion and processing. </p> <p>Each <code>PutRecords</code> request can support up to 500 records. Each record in the request can be as large as 1 MB, up to a limit of 5 MB for the entire request, including partition keys. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second.</p> <p>You must specify the name of the stream that captures, stores, and transports the data; and an array of request <code>Records</code>, with each record in the array requiring a partition key and data blob. The record size limit applies to the total size of the partition key and data blob.</p> <p>The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon Kinesis as input to a hash function that maps the partition key and associated data to a specific shard. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>Each record in the <code>Records</code> array may include an optional parameter, <code>ExplicitHashKey</code>, which overrides the partition key to shard mapping. This parameter allows a data producer to determine explicitly the shard where the record is stored. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords\">Adding Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>The <code>PutRecords</code> response includes an array of response <code>Records</code>. Each record in the response array directly correlates with a record in the request array using natural ordering, from the top to the bottom of the request and response. The response <code>Records</code> array always includes the same number of records as the request array.</p> <p>The response <code>Records</code> array includes both successfully and unsuccessfully processed records. Amazon Kinesis attempts to process all records in each <code>PutRecords</code> request. A single record failure does not stop the processing of subsequent records.</p> <p>A successfully-processed record includes <code>ShardId</code> and <code>SequenceNumber</code> values. The <code>ShardId</code> parameter identifies the shard in the stream where the record is stored. The <code>SequenceNumber</code> parameter is an identifier assigned to the put record, unique to all records in the stream.</p> <p>An unsuccessfully-processed record includes <code>ErrorCode</code> and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of error and can be one of the following values: <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed information about the <code>ProvisionedThroughputExceededException</code> exception including the account ID, stream name, and shard ID of the record that was throttled. For more information about partially successful responses, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-add-data-to-stream.html#kinesis-using-sdk-java-putrecords\">Adding Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>By default, data records are accessible for only 24 hours from the time that they are added to an Amazon Kinesis stream. This retention period can be modified using the <a>DecreaseStreamRetentionPeriod</a> and <a>IncreaseStreamRetentionPeriod</a> operations.</p>",
      "operationName" : "PutRecords",
      "deprecated" : false,
      "input" : {
        "variableName" : "putRecordsRequest",
        "variableType" : "PutRecordsRequest",
        "variableDeclarationType" : "PutRecordsRequest",
        "documentation" : "<p>A <code>PutRecords</code> request.</p>",
        "simpleType" : "PutRecordsRequest",
        "variableSetterType" : "PutRecordsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "PutRecordsResult",
        "documentation" : "<p><code>PutRecords</code> results.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "ProvisionedThroughputExceededException",
        "documentation" : "<p>The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Writes multiple data records from a producer into an Amazon Kinesis stream in a single call (also referred to as a <code>PutRecords</code> request). Use this operation to send data from a data producer into the Amazon Kinesis stream for data ingestion and processing. </p> <p>Each <code>PutRecords</code> request can support up to 500 records. Each record in the request can be as large as 1 MB, up to a limit of 5 MB for the entire request, including partition keys. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second.</p> <p>You must specify the name of the stream that captures, stores, and transports the data; and an array of request <code>Records</code>, with each record in the array requiring a partition key and data blob. The record size limit applies to the total size of the partition key and data blob.</p> <p>The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon Kinesis as input to a hash function that maps the partition key and associated data to a specific shard. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>Each record in the <code>Records</code> array may include an optional parameter, <code>ExplicitHashKey</code>, which overrides the partition key to shard mapping. This parameter allows a data producer to determine explicitly the shard where the record is stored. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords\">Adding Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>The <code>PutRecords</code> response includes an array of response <code>Records</code>. Each record in the response array directly correlates with a record in the request array using natural ordering, from the top to the bottom of the request and response. The response <code>Records</code> array always includes the same number of records as the request array.</p> <p>The response <code>Records</code> array includes both successfully and unsuccessfully processed records. Amazon Kinesis attempts to process all records in each <code>PutRecords</code> request. A single record failure does not stop the processing of subsequent records.</p> <p>A successfully-processed record includes <code>ShardId</code> and <code>SequenceNumber</code> values. The <code>ShardId</code> parameter identifies the shard in the stream where the record is stored. The <code>SequenceNumber</code> parameter is an identifier assigned to the put record, unique to all records in the stream.</p> <p>An unsuccessfully-processed record includes <code>ErrorCode</code> and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of error and can be one of the following values: <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed information about the <code>ProvisionedThroughputExceededException</code> exception including the account ID, stream name, and shard ID of the record that was throttled. For more information about partially successful responses, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-add-data-to-stream.html#kinesis-using-sdk-java-putrecords\">Adding Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>By default, data records are accessible for only 24 hours from the time that they are added to an Amazon Kinesis stream. This retention period can be modified using the <a>DecreaseStreamRetentionPeriod</a> and <a>IncreaseStreamRetentionPeriod</a> operations.</p>\n@param putRecordsRequest A <code>PutRecords</code> request.\n@return Result of the PutRecords operation returned by the service.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws ProvisionedThroughputExceededException The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.*/",
      "asyncDocumentation" : "/**<p>Writes multiple data records from a producer into an Amazon Kinesis stream in a single call (also referred to as a <code>PutRecords</code> request). Use this operation to send data from a data producer into the Amazon Kinesis stream for data ingestion and processing. </p> <p>Each <code>PutRecords</code> request can support up to 500 records. Each record in the request can be as large as 1 MB, up to a limit of 5 MB for the entire request, including partition keys. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second.</p> <p>You must specify the name of the stream that captures, stores, and transports the data; and an array of request <code>Records</code>, with each record in the array requiring a partition key and data blob. The record size limit applies to the total size of the partition key and data blob.</p> <p>The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon Kinesis as input to a hash function that maps the partition key and associated data to a specific shard. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>Each record in the <code>Records</code> array may include an optional parameter, <code>ExplicitHashKey</code>, which overrides the partition key to shard mapping. This parameter allows a data producer to determine explicitly the shard where the record is stored. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords\">Adding Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>The <code>PutRecords</code> response includes an array of response <code>Records</code>. Each record in the response array directly correlates with a record in the request array using natural ordering, from the top to the bottom of the request and response. The response <code>Records</code> array always includes the same number of records as the request array.</p> <p>The response <code>Records</code> array includes both successfully and unsuccessfully processed records. Amazon Kinesis attempts to process all records in each <code>PutRecords</code> request. A single record failure does not stop the processing of subsequent records.</p> <p>A successfully-processed record includes <code>ShardId</code> and <code>SequenceNumber</code> values. The <code>ShardId</code> parameter identifies the shard in the stream where the record is stored. The <code>SequenceNumber</code> parameter is an identifier assigned to the put record, unique to all records in the stream.</p> <p>An unsuccessfully-processed record includes <code>ErrorCode</code> and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of error and can be one of the following values: <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed information about the <code>ProvisionedThroughputExceededException</code> exception including the account ID, stream name, and shard ID of the record that was throttled. For more information about partially successful responses, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-add-data-to-stream.html#kinesis-using-sdk-java-putrecords\">Adding Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>By default, data records are accessible for only 24 hours from the time that they are added to an Amazon Kinesis stream. This retention period can be modified using the <a>DecreaseStreamRetentionPeriod</a> and <a>IncreaseStreamRetentionPeriod</a> operations.</p>\n@param putRecordsRequest A <code>PutRecords</code> request.\n@return A Java Future containing the result of the PutRecords operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Writes multiple data records from a producer into an Amazon Kinesis stream in a single call (also referred to as a <code>PutRecords</code> request). Use this operation to send data from a data producer into the Amazon Kinesis stream for data ingestion and processing. </p> <p>Each <code>PutRecords</code> request can support up to 500 records. Each record in the request can be as large as 1 MB, up to a limit of 5 MB for the entire request, including partition keys. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MB per second.</p> <p>You must specify the name of the stream that captures, stores, and transports the data; and an array of request <code>Records</code>, with each record in the array requiring a partition key and data blob. The record size limit applies to the total size of the partition key and data blob.</p> <p>The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.</p> <p>The partition key is used by Amazon Kinesis as input to a hash function that maps the partition key and associated data to a specific shard. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream\">Adding Data to a Stream</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>Each record in the <code>Records</code> array may include an optional parameter, <code>ExplicitHashKey</code>, which overrides the partition key to shard mapping. This parameter allows a data producer to determine explicitly the shard where the record is stored. For more information, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-putrecords\">Adding Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>The <code>PutRecords</code> response includes an array of response <code>Records</code>. Each record in the response array directly correlates with a record in the request array using natural ordering, from the top to the bottom of the request and response. The response <code>Records</code> array always includes the same number of records as the request array.</p> <p>The response <code>Records</code> array includes both successfully and unsuccessfully processed records. Amazon Kinesis attempts to process all records in each <code>PutRecords</code> request. A single record failure does not stop the processing of subsequent records.</p> <p>A successfully-processed record includes <code>ShardId</code> and <code>SequenceNumber</code> values. The <code>ShardId</code> parameter identifies the shard in the stream where the record is stored. The <code>SequenceNumber</code> parameter is an identifier assigned to the put record, unique to all records in the stream.</p> <p>An unsuccessfully-processed record includes <code>ErrorCode</code> and <code>ErrorMessage</code> values. <code>ErrorCode</code> reflects the type of error and can be one of the following values: <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>. <code>ErrorMessage</code> provides more detailed information about the <code>ProvisionedThroughputExceededException</code> exception including the account ID, stream name, and shard ID of the record that was throttled. For more information about partially successful responses, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-add-data-to-stream.html#kinesis-using-sdk-java-putrecords\">Adding Multiple Records with PutRecords</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>By default, data records are accessible for only 24 hours from the time that they are added to an Amazon Kinesis stream. This retention period can be modified using the <a>DecreaseStreamRetentionPeriod</a> and <a>IncreaseStreamRetentionPeriod</a> operations.</p>\n@param putRecordsRequest A <code>PutRecords</code> request.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the PutRecords operation returned by the service.*/",
      "syncReturnType" : "PutRecordsResult",
      "asyncReturnType" : "PutRecordsResult",
      "asyncFutureType" : "java.util.concurrent.Future<PutRecordsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<PutRecordsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutRecordsRequest, PutRecordsResult>",
      "methodName" : "putRecords"
    },
    "RemoveTagsFromStream" : {
      "documentation" : "<p>Deletes tags from the specified Amazon Kinesis stream.</p> <p>If you specify a tag that does not exist, it is ignored.</p>",
      "operationName" : "RemoveTagsFromStream",
      "deprecated" : false,
      "input" : {
        "variableName" : "removeTagsFromStreamRequest",
        "variableType" : "RemoveTagsFromStreamRequest",
        "variableDeclarationType" : "RemoveTagsFromStreamRequest",
        "documentation" : "<p>Represents the input for <code>RemoveTagsFromStream</code>.</p>",
        "simpleType" : "RemoveTagsFromStreamRequest",
        "variableSetterType" : "RemoveTagsFromStreamRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes tags from the specified Amazon Kinesis stream.</p> <p>If you specify a tag that does not exist, it is ignored.</p>\n@param removeTagsFromStreamRequest Represents the input for <code>RemoveTagsFromStream</code>.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws ResourceInUseException The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).*/",
      "asyncDocumentation" : "/**<p>Deletes tags from the specified Amazon Kinesis stream.</p> <p>If you specify a tag that does not exist, it is ignored.</p>\n@param removeTagsFromStreamRequest Represents the input for <code>RemoveTagsFromStream</code>.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes tags from the specified Amazon Kinesis stream.</p> <p>If you specify a tag that does not exist, it is ignored.</p>\n@param removeTagsFromStreamRequest Represents the input for <code>RemoveTagsFromStream</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<RemoveTagsFromStreamRequest, Void>",
      "methodName" : "removeTagsFromStream"
    },
    "SplitShard" : {
      "documentation" : "<p>Splits a shard into two new shards in the stream, to increase the stream's capacity to ingest and transport data. <code>SplitShard</code> is called when there is a need to increase the overall capacity of stream because of an expected increase in the volume of data records being ingested. </p> <p>You can also use <code>SplitShard</code> when a shard appears to be approaching its maximum utilization, for example, when the set of producers sending data into the specific shard are suddenly sending more than previously anticipated. You can also call <code>SplitShard</code> to increase stream capacity, so that more Amazon Kinesis applications can simultaneously read data from the stream for real-time processing. </p> <p>You must specify the shard to be split and the new hash key, which is the position in the shard where the shard gets split in two. In many cases, the new hash key might simply be the average of the beginning and ending hash key, but it can be any hash key value in the range being mapped into the shard. For more information about splitting shards, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-split.html\">Split a Shard</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>You can use <a>DescribeStream</a> to determine the shard ID and hash key values for the <code>ShardToSplit</code> and <code>NewStartingHashKey</code> parameters that are specified in the <code>SplitShard</code> request.</p> <p><code>SplitShard</code> is an asynchronous operation. Upon receiving a <code>SplitShard</code> request, Amazon Kinesis immediately returns a response and sets the stream status to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the stream status to <code>ACTIVE</code>. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state. </p> <p>You can use <code>DescribeStream</code> to check the status of the stream, which is returned in <code>StreamStatus</code>. If the stream is in the <code>ACTIVE</code> state, you can call <code>SplitShard</code>. If a stream is in <code>CREATING</code> or <code>UPDATING</code> or <code>DELETING</code> states, <code>DescribeStream</code> returns a <code>ResourceInUseException</code>.</p> <p>If the specified stream does not exist, <code>DescribeStream</code> returns a <code>ResourceNotFoundException</code>. If you try to create more shards than are authorized for your account, you receive a <code>LimitExceededException</code>. </p> <p>For the default shard limit for an AWS account, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Amazon Kinesis Limits</a>. If you need to increase this limit, <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">contact AWS Support</a>.</p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>, <a>MergeShards</a> or <a>SplitShard</a>, you receive a <code>LimitExceededException</code>. </p> <p><code>SplitShard</code> has limit of 5 transactions per second per account.</p>",
      "operationName" : "SplitShard",
      "deprecated" : false,
      "input" : {
        "variableName" : "splitShardRequest",
        "variableType" : "SplitShardRequest",
        "variableDeclarationType" : "SplitShardRequest",
        "documentation" : "<p>Represents the input for <code>SplitShard</code>.</p>",
        "simpleType" : "SplitShardRequest",
        "variableSetterType" : "SplitShardRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>"
      }, {
        "exceptionName" : "ResourceInUseException",
        "documentation" : "<p>The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.</p>"
      }, {
        "exceptionName" : "InvalidArgumentException",
        "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Splits a shard into two new shards in the stream, to increase the stream's capacity to ingest and transport data. <code>SplitShard</code> is called when there is a need to increase the overall capacity of stream because of an expected increase in the volume of data records being ingested. </p> <p>You can also use <code>SplitShard</code> when a shard appears to be approaching its maximum utilization, for example, when the set of producers sending data into the specific shard are suddenly sending more than previously anticipated. You can also call <code>SplitShard</code> to increase stream capacity, so that more Amazon Kinesis applications can simultaneously read data from the stream for real-time processing. </p> <p>You must specify the shard to be split and the new hash key, which is the position in the shard where the shard gets split in two. In many cases, the new hash key might simply be the average of the beginning and ending hash key, but it can be any hash key value in the range being mapped into the shard. For more information about splitting shards, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-split.html\">Split a Shard</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>You can use <a>DescribeStream</a> to determine the shard ID and hash key values for the <code>ShardToSplit</code> and <code>NewStartingHashKey</code> parameters that are specified in the <code>SplitShard</code> request.</p> <p><code>SplitShard</code> is an asynchronous operation. Upon receiving a <code>SplitShard</code> request, Amazon Kinesis immediately returns a response and sets the stream status to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the stream status to <code>ACTIVE</code>. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state. </p> <p>You can use <code>DescribeStream</code> to check the status of the stream, which is returned in <code>StreamStatus</code>. If the stream is in the <code>ACTIVE</code> state, you can call <code>SplitShard</code>. If a stream is in <code>CREATING</code> or <code>UPDATING</code> or <code>DELETING</code> states, <code>DescribeStream</code> returns a <code>ResourceInUseException</code>.</p> <p>If the specified stream does not exist, <code>DescribeStream</code> returns a <code>ResourceNotFoundException</code>. If you try to create more shards than are authorized for your account, you receive a <code>LimitExceededException</code>. </p> <p>For the default shard limit for an AWS account, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Amazon Kinesis Limits</a>. If you need to increase this limit, <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">contact AWS Support</a>.</p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>, <a>MergeShards</a> or <a>SplitShard</a>, you receive a <code>LimitExceededException</code>. </p> <p><code>SplitShard</code> has limit of 5 transactions per second per account.</p>\n@param splitShardRequest Represents the input for <code>SplitShard</code>.\n@throws ResourceNotFoundException The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.\n@throws ResourceInUseException The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.\n@throws InvalidArgumentException A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.\n@throws LimitExceededException The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).*/",
      "asyncDocumentation" : "/**<p>Splits a shard into two new shards in the stream, to increase the stream's capacity to ingest and transport data. <code>SplitShard</code> is called when there is a need to increase the overall capacity of stream because of an expected increase in the volume of data records being ingested. </p> <p>You can also use <code>SplitShard</code> when a shard appears to be approaching its maximum utilization, for example, when the set of producers sending data into the specific shard are suddenly sending more than previously anticipated. You can also call <code>SplitShard</code> to increase stream capacity, so that more Amazon Kinesis applications can simultaneously read data from the stream for real-time processing. </p> <p>You must specify the shard to be split and the new hash key, which is the position in the shard where the shard gets split in two. In many cases, the new hash key might simply be the average of the beginning and ending hash key, but it can be any hash key value in the range being mapped into the shard. For more information about splitting shards, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-split.html\">Split a Shard</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>You can use <a>DescribeStream</a> to determine the shard ID and hash key values for the <code>ShardToSplit</code> and <code>NewStartingHashKey</code> parameters that are specified in the <code>SplitShard</code> request.</p> <p><code>SplitShard</code> is an asynchronous operation. Upon receiving a <code>SplitShard</code> request, Amazon Kinesis immediately returns a response and sets the stream status to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the stream status to <code>ACTIVE</code>. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state. </p> <p>You can use <code>DescribeStream</code> to check the status of the stream, which is returned in <code>StreamStatus</code>. If the stream is in the <code>ACTIVE</code> state, you can call <code>SplitShard</code>. If a stream is in <code>CREATING</code> or <code>UPDATING</code> or <code>DELETING</code> states, <code>DescribeStream</code> returns a <code>ResourceInUseException</code>.</p> <p>If the specified stream does not exist, <code>DescribeStream</code> returns a <code>ResourceNotFoundException</code>. If you try to create more shards than are authorized for your account, you receive a <code>LimitExceededException</code>. </p> <p>For the default shard limit for an AWS account, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Amazon Kinesis Limits</a>. If you need to increase this limit, <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">contact AWS Support</a>.</p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>, <a>MergeShards</a> or <a>SplitShard</a>, you receive a <code>LimitExceededException</code>. </p> <p><code>SplitShard</code> has limit of 5 transactions per second per account.</p>\n@param splitShardRequest Represents the input for <code>SplitShard</code>.*/",
      "asyncDocumentationWithHandler" : "/**<p>Splits a shard into two new shards in the stream, to increase the stream's capacity to ingest and transport data. <code>SplitShard</code> is called when there is a need to increase the overall capacity of stream because of an expected increase in the volume of data records being ingested. </p> <p>You can also use <code>SplitShard</code> when a shard appears to be approaching its maximum utilization, for example, when the set of producers sending data into the specific shard are suddenly sending more than previously anticipated. You can also call <code>SplitShard</code> to increase stream capacity, so that more Amazon Kinesis applications can simultaneously read data from the stream for real-time processing. </p> <p>You must specify the shard to be split and the new hash key, which is the position in the shard where the shard gets split in two. In many cases, the new hash key might simply be the average of the beginning and ending hash key, but it can be any hash key value in the range being mapped into the shard. For more information about splitting shards, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/kinesis-using-sdk-java-resharding-split.html\">Split a Shard</a> in the <i>Amazon Kinesis Developer Guide</i>.</p> <p>You can use <a>DescribeStream</a> to determine the shard ID and hash key values for the <code>ShardToSplit</code> and <code>NewStartingHashKey</code> parameters that are specified in the <code>SplitShard</code> request.</p> <p><code>SplitShard</code> is an asynchronous operation. Upon receiving a <code>SplitShard</code> request, Amazon Kinesis immediately returns a response and sets the stream status to <code>UPDATING</code>. After the operation is completed, Amazon Kinesis sets the stream status to <code>ACTIVE</code>. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state. </p> <p>You can use <code>DescribeStream</code> to check the status of the stream, which is returned in <code>StreamStatus</code>. If the stream is in the <code>ACTIVE</code> state, you can call <code>SplitShard</code>. If a stream is in <code>CREATING</code> or <code>UPDATING</code> or <code>DELETING</code> states, <code>DescribeStream</code> returns a <code>ResourceInUseException</code>.</p> <p>If the specified stream does not exist, <code>DescribeStream</code> returns a <code>ResourceNotFoundException</code>. If you try to create more shards than are authorized for your account, you receive a <code>LimitExceededException</code>. </p> <p>For the default shard limit for an AWS account, see <a href=\"http://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Amazon Kinesis Limits</a>. If you need to increase this limit, <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">contact AWS Support</a>.</p> <p>If you try to operate on too many streams in parallel using <a>CreateStream</a>, <a>DeleteStream</a>, <a>MergeShards</a> or <a>SplitShard</a>, you receive a <code>LimitExceededException</code>. </p> <p><code>SplitShard</code> has limit of 5 transactions per second per account.</p>\n@param splitShardRequest Represents the input for <code>SplitShard</code>.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SplitShardRequest, Void>",
      "methodName" : "splitShard"
    }
  },
  "shapes" : {
    "SplitShardRequest" : {
      "c2jName" : "SplitShardInput",
      "documentation" : "<p>Represents the input for <code>SplitShard</code>.</p>",
      "shapeName" : "SplitShardRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "ShardToSplit", "NewStartingHashKey" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream for the shard split.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream for the shard split.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream for the shard split.</p>\n@param streamName The name of the stream for the shard split.*/",
        "getterDocumentation" : "/**<p>The name of the stream for the shard split.</p>\n@return The name of the stream for the shard split.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream for the shard split.</p>\n@param streamName The name of the stream for the shard split.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream for the shard split.</p>\n@param streamName The name of the stream for the shard split.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID of the shard to split.</p>",
        "name" : "ShardToSplit",
        "c2jName" : "ShardToSplit",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "shardToSplit",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the shard to split.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardToSplit",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardToSplit",
          "marshallLocationName" : "ShardToSplit",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the shard to split.</p>\n@param shardToSplit The shard ID of the shard to split.*/",
        "getterDocumentation" : "/**<p>The shard ID of the shard to split.</p>\n@return The shard ID of the shard to split.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the shard to split.</p>\n@param shardToSplit The shard ID of the shard to split.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the shard to split.</p>\n@param shardToSplit The shard ID of the shard to split.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>",
        "name" : "NewStartingHashKey",
        "c2jName" : "NewStartingHashKey",
        "c2jShape" : "HashKey",
        "variable" : {
          "variableName" : "newStartingHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "newStartingHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NewStartingHashKey",
          "marshallLocationName" : "NewStartingHashKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>\n@param newStartingHashKey A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.*/",
        "getterDocumentation" : "/**<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>\n@return A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.*/",
        "fluentSetterDocumentation" : "/**<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>\n@param newStartingHashKey A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>\n@param newStartingHashKey A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "splitShardRequest",
        "variableType" : "SplitShardRequest",
        "variableDeclarationType" : "SplitShardRequest",
        "documentation" : null,
        "simpleType" : "SplitShardRequest",
        "variableSetterType" : "SplitShardRequest"
      },
      "marshaller" : {
        "action" : "SplitShard",
        "verb" : "POST",
        "target" : "Kinesis_20131202.SplitShard",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NewStartingHashKey" : {
          "documentation" : "<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>",
          "name" : "NewStartingHashKey",
          "c2jName" : "NewStartingHashKey",
          "c2jShape" : "HashKey",
          "variable" : {
            "variableName" : "newStartingHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "newStartingHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NewStartingHashKey",
            "marshallLocationName" : "NewStartingHashKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>\n@param newStartingHashKey A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.*/",
          "getterDocumentation" : "/**<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>\n@return A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.*/",
          "fluentSetterDocumentation" : "/**<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>\n@param newStartingHashKey A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.</p>\n@param newStartingHashKey A hash key value for the starting hash key of one of the child shards created by the split. The hash key range for a given shard constitutes a set of ordered contiguous positive integers. The value for <code>NewStartingHashKey</code> must be in the range of hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key value and all higher hash key values in hash key range are distributed to one of the child shards. All the lower hash key values in the range are distributed to the other child shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream for the shard split.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream for the shard split.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream for the shard split.</p>\n@param streamName The name of the stream for the shard split.*/",
          "getterDocumentation" : "/**<p>The name of the stream for the shard split.</p>\n@return The name of the stream for the shard split.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream for the shard split.</p>\n@param streamName The name of the stream for the shard split.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream for the shard split.</p>\n@param streamName The name of the stream for the shard split.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ShardToSplit" : {
          "documentation" : "<p>The shard ID of the shard to split.</p>",
          "name" : "ShardToSplit",
          "c2jName" : "ShardToSplit",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "shardToSplit",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the shard to split.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardToSplit",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardToSplit",
            "marshallLocationName" : "ShardToSplit",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the shard to split.</p>\n@param shardToSplit The shard ID of the shard to split.*/",
          "getterDocumentation" : "/**<p>The shard ID of the shard to split.</p>\n@return The shard ID of the shard to split.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the shard to split.</p>\n@param shardToSplit The shard ID of the shard to split.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the shard to split.</p>\n@param shardToSplit The shard ID of the shard to split.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ProvisionedThroughputExceededException" : {
      "c2jName" : "ProvisionedThroughputExceededException",
      "documentation" : "<p>The request rate is too high, or the requested data is too large for the available throughput. Reduce the frequency or size of your requests. For more information, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/api-retries.html\" target=\"_blank\">Error Retries and Exponential Backoff in AWS</a> in the <i>AWS General Reference</i>.</p>",
      "shapeName" : "ProvisionedThroughputExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "provisionedThroughputExceededException",
        "variableType" : "ProvisionedThroughputExceededException",
        "variableDeclarationType" : "ProvisionedThroughputExceededException",
        "documentation" : null,
        "simpleType" : "ProvisionedThroughputExceededException",
        "variableSetterType" : "ProvisionedThroughputExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ProvisionedThroughputExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DescribeStreamRequest" : {
      "c2jName" : "DescribeStreamInput",
      "documentation" : "<p>Represents the input for <code>DescribeStream</code>.</p>",
      "shapeName" : "DescribeStreamRequest",
      "deprecated" : false,
      "required" : [ "StreamName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream to describe.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream to describe.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream to describe.</p>\n@param streamName The name of the stream to describe.*/",
        "getterDocumentation" : "/**<p>The name of the stream to describe.</p>\n@return The name of the stream to describe.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream to describe.</p>\n@param streamName The name of the stream to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream to describe.</p>\n@param streamName The name of the stream to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The maximum number of shards to return.</p>",
        "name" : "Limit",
        "c2jName" : "Limit",
        "c2jShape" : "DescribeStreamInputLimit",
        "variable" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of shards to return.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Limit",
          "marshallLocationName" : "Limit",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of shards to return.</p>\n@param limit The maximum number of shards to return.*/",
        "getterDocumentation" : "/**<p>The maximum number of shards to return.</p>\n@return The maximum number of shards to return.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of shards to return.</p>\n@param limit The maximum number of shards to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of shards to return.</p>\n@param limit The maximum number of shards to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID of the shard to start with.</p>",
        "name" : "ExclusiveStartShardId",
        "c2jName" : "ExclusiveStartShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "exclusiveStartShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the shard to start with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "exclusiveStartShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ExclusiveStartShardId",
          "marshallLocationName" : "ExclusiveStartShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the shard to start with.</p>\n@param exclusiveStartShardId The shard ID of the shard to start with.*/",
        "getterDocumentation" : "/**<p>The shard ID of the shard to start with.</p>\n@return The shard ID of the shard to start with.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the shard to start with.</p>\n@param exclusiveStartShardId The shard ID of the shard to start with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the shard to start with.</p>\n@param exclusiveStartShardId The shard ID of the shard to start with.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeStreamRequest",
        "variableType" : "DescribeStreamRequest",
        "variableDeclarationType" : "DescribeStreamRequest",
        "documentation" : null,
        "simpleType" : "DescribeStreamRequest",
        "variableSetterType" : "DescribeStreamRequest"
      },
      "marshaller" : {
        "action" : "DescribeStream",
        "verb" : "POST",
        "target" : "Kinesis_20131202.DescribeStream",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ExclusiveStartShardId" : {
          "documentation" : "<p>The shard ID of the shard to start with.</p>",
          "name" : "ExclusiveStartShardId",
          "c2jName" : "ExclusiveStartShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "exclusiveStartShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the shard to start with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "exclusiveStartShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ExclusiveStartShardId",
            "marshallLocationName" : "ExclusiveStartShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the shard to start with.</p>\n@param exclusiveStartShardId The shard ID of the shard to start with.*/",
          "getterDocumentation" : "/**<p>The shard ID of the shard to start with.</p>\n@return The shard ID of the shard to start with.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the shard to start with.</p>\n@param exclusiveStartShardId The shard ID of the shard to start with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the shard to start with.</p>\n@param exclusiveStartShardId The shard ID of the shard to start with.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream to describe.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream to describe.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream to describe.</p>\n@param streamName The name of the stream to describe.*/",
          "getterDocumentation" : "/**<p>The name of the stream to describe.</p>\n@return The name of the stream to describe.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream to describe.</p>\n@param streamName The name of the stream to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream to describe.</p>\n@param streamName The name of the stream to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Limit" : {
          "documentation" : "<p>The maximum number of shards to return.</p>",
          "name" : "Limit",
          "c2jName" : "Limit",
          "c2jShape" : "DescribeStreamInputLimit",
          "variable" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of shards to return.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Limit",
            "marshallLocationName" : "Limit",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of shards to return.</p>\n@param limit The maximum number of shards to return.*/",
          "getterDocumentation" : "/**<p>The maximum number of shards to return.</p>\n@return The maximum number of shards to return.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of shards to return.</p>\n@param limit The maximum number of shards to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of shards to return.</p>\n@param limit The maximum number of shards to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "SequenceNumberRange" : {
      "c2jName" : "SequenceNumberRange",
      "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
      "shapeName" : "SequenceNumberRange",
      "deprecated" : false,
      "required" : [ "StartingSequenceNumber" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The starting sequence number for the range.</p>",
        "name" : "StartingSequenceNumber",
        "c2jName" : "StartingSequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "startingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The starting sequence number for the range.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "startingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StartingSequenceNumber",
          "marshallLocationName" : "StartingSequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The starting sequence number for the range.</p>\n@param startingSequenceNumber The starting sequence number for the range.*/",
        "getterDocumentation" : "/**<p>The starting sequence number for the range.</p>\n@return The starting sequence number for the range.*/",
        "fluentSetterDocumentation" : "/**<p>The starting sequence number for the range.</p>\n@param startingSequenceNumber The starting sequence number for the range.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The starting sequence number for the range.</p>\n@param startingSequenceNumber The starting sequence number for the range.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>",
        "name" : "EndingSequenceNumber",
        "c2jName" : "EndingSequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "endingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "endingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "EndingSequenceNumber",
          "marshallLocationName" : "EndingSequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>\n@param endingSequenceNumber The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.*/",
        "getterDocumentation" : "/**<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>\n@return The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.*/",
        "fluentSetterDocumentation" : "/**<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>\n@param endingSequenceNumber The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>\n@param endingSequenceNumber The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "sequenceNumberRange",
        "variableType" : "SequenceNumberRange",
        "variableDeclarationType" : "SequenceNumberRange",
        "documentation" : null,
        "simpleType" : "SequenceNumberRange",
        "variableSetterType" : "SequenceNumberRange"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StartingSequenceNumber" : {
          "documentation" : "<p>The starting sequence number for the range.</p>",
          "name" : "StartingSequenceNumber",
          "c2jName" : "StartingSequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "startingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The starting sequence number for the range.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "startingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StartingSequenceNumber",
            "marshallLocationName" : "StartingSequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The starting sequence number for the range.</p>\n@param startingSequenceNumber The starting sequence number for the range.*/",
          "getterDocumentation" : "/**<p>The starting sequence number for the range.</p>\n@return The starting sequence number for the range.*/",
          "fluentSetterDocumentation" : "/**<p>The starting sequence number for the range.</p>\n@param startingSequenceNumber The starting sequence number for the range.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The starting sequence number for the range.</p>\n@param startingSequenceNumber The starting sequence number for the range.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "EndingSequenceNumber" : {
          "documentation" : "<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>",
          "name" : "EndingSequenceNumber",
          "c2jName" : "EndingSequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "endingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "endingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "EndingSequenceNumber",
            "marshallLocationName" : "EndingSequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>\n@param endingSequenceNumber The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.*/",
          "getterDocumentation" : "/**<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>\n@return The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.*/",
          "fluentSetterDocumentation" : "/**<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>\n@param endingSequenceNumber The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.</p>\n@param endingSequenceNumber The ending sequence number for the range. Shards that are in the OPEN state have an ending sequence number of <code>null</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ResourceInUseException" : {
      "c2jName" : "ResourceInUseException",
      "documentation" : "<p>The resource is not available for this operation. For successful operation, the resource needs to be in the <code>ACTIVE</code> state.</p>",
      "shapeName" : "ResourceInUseException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "resourceInUseException",
        "variableType" : "ResourceInUseException",
        "variableDeclarationType" : "ResourceInUseException",
        "documentation" : null,
        "simpleType" : "ResourceInUseException",
        "variableSetterType" : "ResourceInUseException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ResourceInUseException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ShardIteratorType" : {
      "c2jName" : "ShardIteratorType",
      "documentation" : "",
      "shapeName" : "ShardIteratorType",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "AT_SEQUENCE_NUMBER",
        "value" : "AT_SEQUENCE_NUMBER"
      }, {
        "name" : "AFTER_SEQUENCE_NUMBER",
        "value" : "AFTER_SEQUENCE_NUMBER"
      }, {
        "name" : "TRIM_HORIZON",
        "value" : "TRIM_HORIZON"
      }, {
        "name" : "LATEST",
        "value" : "LATEST"
      } ],
      "variable" : {
        "variableName" : "shardIteratorType",
        "variableType" : "ShardIteratorType",
        "variableDeclarationType" : "ShardIteratorType",
        "documentation" : null,
        "simpleType" : "ShardIteratorType",
        "variableSetterType" : "ShardIteratorType"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "RemoveTagsFromStreamRequest" : {
      "c2jName" : "RemoveTagsFromStreamInput",
      "documentation" : "<p>Represents the input for <code>RemoveTagsFromStream</code>.</p>",
      "shapeName" : "RemoveTagsFromStreamRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "TagKeys" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.*/",
        "getterDocumentation" : "/**<p>The name of the stream.</p>\n@return The name of the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>",
        "name" : "TagKeys",
        "c2jName" : "TagKeys",
        "c2jShape" : "TagKeyList",
        "variable" : {
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
          "documentation" : "<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "tagKeys",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "TagKeys",
          "marshallLocationName" : "TagKeys",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n@param tagKeys A list of tag keys. Each corresponding tag is removed from the stream.*/",
        "getterDocumentation" : "/**<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n@return A list of tag keys. Each corresponding tag is removed from the stream.*/",
        "fluentSetterDocumentation" : "/**<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n@param tagKeys A list of tag keys. Each corresponding tag is removed from the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys A list of tag keys. Each corresponding tag is removed from the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "removeTagsFromStreamRequest",
        "variableType" : "RemoveTagsFromStreamRequest",
        "variableDeclarationType" : "RemoveTagsFromStreamRequest",
        "documentation" : null,
        "simpleType" : "RemoveTagsFromStreamRequest",
        "variableSetterType" : "RemoveTagsFromStreamRequest"
      },
      "marshaller" : {
        "action" : "RemoveTagsFromStream",
        "verb" : "POST",
        "target" : "Kinesis_20131202.RemoveTagsFromStream",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "TagKeys" : {
          "documentation" : "<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>",
          "name" : "TagKeys",
          "c2jName" : "TagKeys",
          "c2jShape" : "TagKeyList",
          "variable" : {
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
            "documentation" : "<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "tagKeys",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "TagKeys",
            "marshallLocationName" : "TagKeys",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n@param tagKeys A list of tag keys. Each corresponding tag is removed from the stream.*/",
          "getterDocumentation" : "/**<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n@return A list of tag keys. Each corresponding tag is removed from the stream.*/",
          "fluentSetterDocumentation" : "/**<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n@param tagKeys A list of tag keys. Each corresponding tag is removed from the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTagKeys(java.util.Collection)} or {@link #withTagKeys(java.util.Collection)} if you want to override the existing values.</p>\n@param tagKeys A list of tag keys. Each corresponding tag is removed from the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.*/",
          "getterDocumentation" : "/**<p>The name of the stream.</p>\n@return The name of the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Shard" : {
      "c2jName" : "Shard",
      "documentation" : "<p>A uniquely identified group of data records in an Amazon Kinesis stream.</p>",
      "shapeName" : "Shard",
      "deprecated" : false,
      "required" : [ "ShardId", "HashKeyRange", "SequenceNumberRange" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>",
        "name" : "ShardId",
        "c2jName" : "ShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardId",
          "marshallLocationName" : "ShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>\n@param shardId The unique identifier of the shard within the Amazon Kinesis stream.*/",
        "getterDocumentation" : "/**<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>\n@return The unique identifier of the shard within the Amazon Kinesis stream.*/",
        "fluentSetterDocumentation" : "/**<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>\n@param shardId The unique identifier of the shard within the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>\n@param shardId The unique identifier of the shard within the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard Id of the shard's parent.</p>",
        "name" : "ParentShardId",
        "c2jName" : "ParentShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "parentShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard Id of the shard's parent.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "parentShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ParentShardId",
          "marshallLocationName" : "ParentShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard Id of the shard's parent.</p>\n@param parentShardId The shard Id of the shard's parent.*/",
        "getterDocumentation" : "/**<p>The shard Id of the shard's parent.</p>\n@return The shard Id of the shard's parent.*/",
        "fluentSetterDocumentation" : "/**<p>The shard Id of the shard's parent.</p>\n@param parentShardId The shard Id of the shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard Id of the shard's parent.</p>\n@param parentShardId The shard Id of the shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard Id of the shard adjacent to the shard's parent.</p>",
        "name" : "AdjacentParentShardId",
        "c2jName" : "AdjacentParentShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "adjacentParentShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard Id of the shard adjacent to the shard's parent.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "adjacentParentShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AdjacentParentShardId",
          "marshallLocationName" : "AdjacentParentShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard Id of the shard adjacent to the shard's parent.</p>\n@param adjacentParentShardId The shard Id of the shard adjacent to the shard's parent.*/",
        "getterDocumentation" : "/**<p>The shard Id of the shard adjacent to the shard's parent.</p>\n@return The shard Id of the shard adjacent to the shard's parent.*/",
        "fluentSetterDocumentation" : "/**<p>The shard Id of the shard adjacent to the shard's parent.</p>\n@param adjacentParentShardId The shard Id of the shard adjacent to the shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard Id of the shard adjacent to the shard's parent.</p>\n@param adjacentParentShardId The shard Id of the shard adjacent to the shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>",
        "name" : "HashKeyRange",
        "c2jName" : "HashKeyRange",
        "c2jShape" : "HashKeyRange",
        "variable" : {
          "variableName" : "hashKeyRange",
          "variableType" : "HashKeyRange",
          "variableDeclarationType" : "HashKeyRange",
          "documentation" : "<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>",
          "simpleType" : "HashKeyRange",
          "variableSetterType" : "HashKeyRange"
        },
        "setterModel" : {
          "variableName" : "hashKeyRange",
          "variableType" : "HashKeyRange",
          "variableDeclarationType" : "HashKeyRange",
          "documentation" : "",
          "simpleType" : "HashKeyRange",
          "variableSetterType" : "HashKeyRange"
        },
        "getterModel" : {
          "returnType" : "HashKeyRange",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "HashKeyRange",
          "marshallLocationName" : "HashKeyRange",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n@param hashKeyRange The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.*/",
        "getterDocumentation" : "/**<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n@return The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.*/",
        "fluentSetterDocumentation" : "/**<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n@param hashKeyRange The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n@param hashKeyRange The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
        "name" : "SequenceNumberRange",
        "c2jName" : "SequenceNumberRange",
        "c2jShape" : "SequenceNumberRange",
        "variable" : {
          "variableName" : "sequenceNumberRange",
          "variableType" : "SequenceNumberRange",
          "variableDeclarationType" : "SequenceNumberRange",
          "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
          "simpleType" : "SequenceNumberRange",
          "variableSetterType" : "SequenceNumberRange"
        },
        "setterModel" : {
          "variableName" : "sequenceNumberRange",
          "variableType" : "SequenceNumberRange",
          "variableDeclarationType" : "SequenceNumberRange",
          "documentation" : "",
          "simpleType" : "SequenceNumberRange",
          "variableSetterType" : "SequenceNumberRange"
        },
        "getterModel" : {
          "returnType" : "SequenceNumberRange",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SequenceNumberRange",
          "marshallLocationName" : "SequenceNumberRange",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.*/",
        "getterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@return The range of possible sequence numbers for the shard.*/",
        "fluentSetterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "shard",
        "variableType" : "Shard",
        "variableDeclarationType" : "Shard",
        "documentation" : null,
        "simpleType" : "Shard",
        "variableSetterType" : "Shard"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ParentShardId" : {
          "documentation" : "<p>The shard Id of the shard's parent.</p>",
          "name" : "ParentShardId",
          "c2jName" : "ParentShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "parentShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard Id of the shard's parent.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "parentShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ParentShardId",
            "marshallLocationName" : "ParentShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard Id of the shard's parent.</p>\n@param parentShardId The shard Id of the shard's parent.*/",
          "getterDocumentation" : "/**<p>The shard Id of the shard's parent.</p>\n@return The shard Id of the shard's parent.*/",
          "fluentSetterDocumentation" : "/**<p>The shard Id of the shard's parent.</p>\n@param parentShardId The shard Id of the shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard Id of the shard's parent.</p>\n@param parentShardId The shard Id of the shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SequenceNumberRange" : {
          "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
          "name" : "SequenceNumberRange",
          "c2jName" : "SequenceNumberRange",
          "c2jShape" : "SequenceNumberRange",
          "variable" : {
            "variableName" : "sequenceNumberRange",
            "variableType" : "SequenceNumberRange",
            "variableDeclarationType" : "SequenceNumberRange",
            "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
            "simpleType" : "SequenceNumberRange",
            "variableSetterType" : "SequenceNumberRange"
          },
          "setterModel" : {
            "variableName" : "sequenceNumberRange",
            "variableType" : "SequenceNumberRange",
            "variableDeclarationType" : "SequenceNumberRange",
            "documentation" : "",
            "simpleType" : "SequenceNumberRange",
            "variableSetterType" : "SequenceNumberRange"
          },
          "getterModel" : {
            "returnType" : "SequenceNumberRange",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SequenceNumberRange",
            "marshallLocationName" : "SequenceNumberRange",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.*/",
          "getterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@return The range of possible sequence numbers for the shard.*/",
          "fluentSetterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ShardId" : {
          "documentation" : "<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>",
          "name" : "ShardId",
          "c2jName" : "ShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardId",
            "marshallLocationName" : "ShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>\n@param shardId The unique identifier of the shard within the Amazon Kinesis stream.*/",
          "getterDocumentation" : "/**<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>\n@return The unique identifier of the shard within the Amazon Kinesis stream.*/",
          "fluentSetterDocumentation" : "/**<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>\n@param shardId The unique identifier of the shard within the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The unique identifier of the shard within the Amazon Kinesis stream.</p>\n@param shardId The unique identifier of the shard within the Amazon Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "HashKeyRange" : {
          "documentation" : "<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>",
          "name" : "HashKeyRange",
          "c2jName" : "HashKeyRange",
          "c2jShape" : "HashKeyRange",
          "variable" : {
            "variableName" : "hashKeyRange",
            "variableType" : "HashKeyRange",
            "variableDeclarationType" : "HashKeyRange",
            "documentation" : "<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>",
            "simpleType" : "HashKeyRange",
            "variableSetterType" : "HashKeyRange"
          },
          "setterModel" : {
            "variableName" : "hashKeyRange",
            "variableType" : "HashKeyRange",
            "variableDeclarationType" : "HashKeyRange",
            "documentation" : "",
            "simpleType" : "HashKeyRange",
            "variableSetterType" : "HashKeyRange"
          },
          "getterModel" : {
            "returnType" : "HashKeyRange",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "HashKeyRange",
            "marshallLocationName" : "HashKeyRange",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n@param hashKeyRange The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.*/",
          "getterDocumentation" : "/**<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n@return The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.*/",
          "fluentSetterDocumentation" : "/**<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n@param hashKeyRange The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n@param hashKeyRange The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AdjacentParentShardId" : {
          "documentation" : "<p>The shard Id of the shard adjacent to the shard's parent.</p>",
          "name" : "AdjacentParentShardId",
          "c2jName" : "AdjacentParentShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "adjacentParentShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard Id of the shard adjacent to the shard's parent.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "adjacentParentShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AdjacentParentShardId",
            "marshallLocationName" : "AdjacentParentShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard Id of the shard adjacent to the shard's parent.</p>\n@param adjacentParentShardId The shard Id of the shard adjacent to the shard's parent.*/",
          "getterDocumentation" : "/**<p>The shard Id of the shard adjacent to the shard's parent.</p>\n@return The shard Id of the shard adjacent to the shard's parent.*/",
          "fluentSetterDocumentation" : "/**<p>The shard Id of the shard adjacent to the shard's parent.</p>\n@param adjacentParentShardId The shard Id of the shard adjacent to the shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard Id of the shard adjacent to the shard's parent.</p>\n@param adjacentParentShardId The shard Id of the shard adjacent to the shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "MergeShardsRequest" : {
      "c2jName" : "MergeShardsInput",
      "documentation" : "<p>Represents the input for <code>MergeShards</code>.</p>",
      "shapeName" : "MergeShardsRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "ShardToMerge", "AdjacentShardToMerge" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream for the merge.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream for the merge.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream for the merge.</p>\n@param streamName The name of the stream for the merge.*/",
        "getterDocumentation" : "/**<p>The name of the stream for the merge.</p>\n@return The name of the stream for the merge.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream for the merge.</p>\n@param streamName The name of the stream for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream for the merge.</p>\n@param streamName The name of the stream for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>",
        "name" : "ShardToMerge",
        "c2jName" : "ShardToMerge",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "shardToMerge",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardToMerge",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardToMerge",
          "marshallLocationName" : "ShardToMerge",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n@param shardToMerge The shard ID of the shard to combine with the adjacent shard for the merge.*/",
        "getterDocumentation" : "/**<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n@return The shard ID of the shard to combine with the adjacent shard for the merge.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n@param shardToMerge The shard ID of the shard to combine with the adjacent shard for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n@param shardToMerge The shard ID of the shard to combine with the adjacent shard for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID of the adjacent shard for the merge.</p>",
        "name" : "AdjacentShardToMerge",
        "c2jName" : "AdjacentShardToMerge",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "adjacentShardToMerge",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the adjacent shard for the merge.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "adjacentShardToMerge",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AdjacentShardToMerge",
          "marshallLocationName" : "AdjacentShardToMerge",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the adjacent shard for the merge.</p>\n@param adjacentShardToMerge The shard ID of the adjacent shard for the merge.*/",
        "getterDocumentation" : "/**<p>The shard ID of the adjacent shard for the merge.</p>\n@return The shard ID of the adjacent shard for the merge.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the adjacent shard for the merge.</p>\n@param adjacentShardToMerge The shard ID of the adjacent shard for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the adjacent shard for the merge.</p>\n@param adjacentShardToMerge The shard ID of the adjacent shard for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "mergeShardsRequest",
        "variableType" : "MergeShardsRequest",
        "variableDeclarationType" : "MergeShardsRequest",
        "documentation" : null,
        "simpleType" : "MergeShardsRequest",
        "variableSetterType" : "MergeShardsRequest"
      },
      "marshaller" : {
        "action" : "MergeShards",
        "verb" : "POST",
        "target" : "Kinesis_20131202.MergeShards",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AdjacentShardToMerge" : {
          "documentation" : "<p>The shard ID of the adjacent shard for the merge.</p>",
          "name" : "AdjacentShardToMerge",
          "c2jName" : "AdjacentShardToMerge",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "adjacentShardToMerge",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the adjacent shard for the merge.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "adjacentShardToMerge",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AdjacentShardToMerge",
            "marshallLocationName" : "AdjacentShardToMerge",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the adjacent shard for the merge.</p>\n@param adjacentShardToMerge The shard ID of the adjacent shard for the merge.*/",
          "getterDocumentation" : "/**<p>The shard ID of the adjacent shard for the merge.</p>\n@return The shard ID of the adjacent shard for the merge.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the adjacent shard for the merge.</p>\n@param adjacentShardToMerge The shard ID of the adjacent shard for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the adjacent shard for the merge.</p>\n@param adjacentShardToMerge The shard ID of the adjacent shard for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream for the merge.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream for the merge.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream for the merge.</p>\n@param streamName The name of the stream for the merge.*/",
          "getterDocumentation" : "/**<p>The name of the stream for the merge.</p>\n@return The name of the stream for the merge.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream for the merge.</p>\n@param streamName The name of the stream for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream for the merge.</p>\n@param streamName The name of the stream for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ShardToMerge" : {
          "documentation" : "<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>",
          "name" : "ShardToMerge",
          "c2jName" : "ShardToMerge",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "shardToMerge",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardToMerge",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardToMerge",
            "marshallLocationName" : "ShardToMerge",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n@param shardToMerge The shard ID of the shard to combine with the adjacent shard for the merge.*/",
          "getterDocumentation" : "/**<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n@return The shard ID of the shard to combine with the adjacent shard for the merge.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n@param shardToMerge The shard ID of the shard to combine with the adjacent shard for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n@param shardToMerge The shard ID of the shard to combine with the adjacent shard for the merge.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DecreaseStreamRetentionPeriodRequest" : {
      "c2jName" : "DecreaseStreamRetentionPeriodInput",
      "documentation" : "<p>Represents the input for <a>DecreaseStreamRetentionPeriod</a>.</p>",
      "shapeName" : "DecreaseStreamRetentionPeriodRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "RetentionPeriodHours" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream to modify.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream to modify.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.*/",
        "getterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@return The name of the stream to modify.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>",
        "name" : "RetentionPeriodHours",
        "c2jName" : "RetentionPeriodHours",
        "c2jShape" : "RetentionPeriodHours",
        "variable" : {
          "variableName" : "retentionPeriodHours",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "retentionPeriodHours",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "RetentionPeriodHours",
          "marshallLocationName" : "RetentionPeriodHours",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be less than the current retention period.*/",
        "getterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n@return The new retention period of the stream, in hours. Must be less than the current retention period.*/",
        "fluentSetterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be less than the current retention period.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be less than the current retention period.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "decreaseStreamRetentionPeriodRequest",
        "variableType" : "DecreaseStreamRetentionPeriodRequest",
        "variableDeclarationType" : "DecreaseStreamRetentionPeriodRequest",
        "documentation" : null,
        "simpleType" : "DecreaseStreamRetentionPeriodRequest",
        "variableSetterType" : "DecreaseStreamRetentionPeriodRequest"
      },
      "marshaller" : {
        "action" : "DecreaseStreamRetentionPeriod",
        "verb" : "POST",
        "target" : "Kinesis_20131202.DecreaseStreamRetentionPeriod",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RetentionPeriodHours" : {
          "documentation" : "<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>",
          "name" : "RetentionPeriodHours",
          "c2jName" : "RetentionPeriodHours",
          "c2jShape" : "RetentionPeriodHours",
          "variable" : {
            "variableName" : "retentionPeriodHours",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "retentionPeriodHours",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "RetentionPeriodHours",
            "marshallLocationName" : "RetentionPeriodHours",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be less than the current retention period.*/",
          "getterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n@return The new retention period of the stream, in hours. Must be less than the current retention period.*/",
          "fluentSetterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be less than the current retention period.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be less than the current retention period.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream to modify.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream to modify.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.*/",
          "getterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@return The name of the stream to modify.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "StreamDescription" : {
      "c2jName" : "StreamDescription",
      "documentation" : "<p>Represents the output for <a>DescribeStream</a>.</p>",
      "shapeName" : "StreamDescription",
      "deprecated" : false,
      "required" : [ "StreamName", "StreamARN", "StreamStatus", "Shards", "HasMoreShards", "RetentionPeriodHours" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream being described.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream being described.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream being described.</p>\n@param streamName The name of the stream being described.*/",
        "getterDocumentation" : "/**<p>The name of the stream being described.</p>\n@return The name of the stream being described.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream being described.</p>\n@param streamName The name of the stream being described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream being described.</p>\n@param streamName The name of the stream being described.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The Amazon Resource Name (ARN) for the stream being described.</p>",
        "name" : "StreamARN",
        "c2jName" : "StreamARN",
        "c2jShape" : "StreamARN",
        "variable" : {
          "variableName" : "streamARN",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream being described.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamARN",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamARN",
          "marshallLocationName" : "StreamARN",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream being described.</p>\n@param streamARN The Amazon Resource Name (ARN) for the stream being described.*/",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream being described.</p>\n@return The Amazon Resource Name (ARN) for the stream being described.*/",
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream being described.</p>\n@param streamARN The Amazon Resource Name (ARN) for the stream being described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream being described.</p>\n@param streamARN The Amazon Resource Name (ARN) for the stream being described.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>",
        "name" : "StreamStatus",
        "c2jName" : "StreamStatus",
        "c2jShape" : "StreamStatus",
        "variable" : {
          "variableName" : "streamStatus",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamStatus",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamStatus",
          "marshallLocationName" : "StreamStatus",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "StreamStatus",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>\n@param streamStatus The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li>\n@see StreamStatus*/",
        "getterDocumentation" : "/**<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>\n@return The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li>\n@see StreamStatus*/",
        "fluentSetterDocumentation" : "/**<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>\n@param streamStatus The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamStatus*/",
        "varargSetterDocumentation" : "/**<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>\n@param streamStatus The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamStatus*/"
      }, {
        "documentation" : "<p>The shards that comprise the stream.</p>",
        "name" : "Shards",
        "c2jName" : "Shards",
        "c2jShape" : "ShardList",
        "variable" : {
          "variableName" : "shards",
          "variableType" : "java.util.List<Shard>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Shard>",
          "documentation" : "<p>The shards that comprise the stream.</p>",
          "simpleType" : "List<Shard>",
          "variableSetterType" : "java.util.Collection<Shard>"
        },
        "setterModel" : {
          "variableName" : "shards",
          "variableType" : "java.util.List<Shard>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Shard>",
          "documentation" : "",
          "simpleType" : "List<Shard>",
          "variableSetterType" : "java.util.Collection<Shard>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Shard>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Shards",
          "marshallLocationName" : "Shards",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Shard",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Shard",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Shard",
              "variableDeclarationType" : "Shard",
              "documentation" : "",
              "simpleType" : "Shard",
              "variableSetterType" : "Shard"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Shard",
              "variableDeclarationType" : "Shard",
              "documentation" : "",
              "simpleType" : "Shard",
              "variableSetterType" : "Shard"
            },
            "getterModel" : {
              "returnType" : "Shard",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Shard",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Shard>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Shard>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@param shards The shards that comprise the stream.*/",
        "getterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@return The shards that comprise the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@param shards The shards that comprise the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setShards(java.util.Collection)} or {@link #withShards(java.util.Collection)} if you want to override the existing values.</p>\n@param shards The shards that comprise the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>",
        "name" : "HasMoreShards",
        "c2jName" : "HasMoreShards",
        "c2jShape" : "BooleanObject",
        "variable" : {
          "variableName" : "hasMoreShards",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "hasMoreShards",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "HasMoreShards",
          "marshallLocationName" : "HasMoreShards",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n@param hasMoreShards If set to <code>true</code>, more shards in the stream are available to describe.*/",
        "getterDocumentation" : "/**<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n@return If set to <code>true</code>, more shards in the stream are available to describe.*/",
        "fluentSetterDocumentation" : "/**<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n@param hasMoreShards If set to <code>true</code>, more shards in the stream are available to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n@param hasMoreShards If set to <code>true</code>, more shards in the stream are available to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The current retention period, in hours.</p>",
        "name" : "RetentionPeriodHours",
        "c2jName" : "RetentionPeriodHours",
        "c2jShape" : "RetentionPeriodHours",
        "variable" : {
          "variableName" : "retentionPeriodHours",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The current retention period, in hours.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "retentionPeriodHours",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "RetentionPeriodHours",
          "marshallLocationName" : "RetentionPeriodHours",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The current retention period, in hours.</p>\n@param retentionPeriodHours The current retention period, in hours.*/",
        "getterDocumentation" : "/**<p>The current retention period, in hours.</p>\n@return The current retention period, in hours.*/",
        "fluentSetterDocumentation" : "/**<p>The current retention period, in hours.</p>\n@param retentionPeriodHours The current retention period, in hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The current retention period, in hours.</p>\n@param retentionPeriodHours The current retention period, in hours.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "streamDescription",
        "variableType" : "StreamDescription",
        "variableDeclarationType" : "StreamDescription",
        "documentation" : null,
        "simpleType" : "StreamDescription",
        "variableSetterType" : "StreamDescription"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RetentionPeriodHours" : {
          "documentation" : "<p>The current retention period, in hours.</p>",
          "name" : "RetentionPeriodHours",
          "c2jName" : "RetentionPeriodHours",
          "c2jShape" : "RetentionPeriodHours",
          "variable" : {
            "variableName" : "retentionPeriodHours",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The current retention period, in hours.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "retentionPeriodHours",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "RetentionPeriodHours",
            "marshallLocationName" : "RetentionPeriodHours",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The current retention period, in hours.</p>\n@param retentionPeriodHours The current retention period, in hours.*/",
          "getterDocumentation" : "/**<p>The current retention period, in hours.</p>\n@return The current retention period, in hours.*/",
          "fluentSetterDocumentation" : "/**<p>The current retention period, in hours.</p>\n@param retentionPeriodHours The current retention period, in hours.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The current retention period, in hours.</p>\n@param retentionPeriodHours The current retention period, in hours.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "HasMoreShards" : {
          "documentation" : "<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>",
          "name" : "HasMoreShards",
          "c2jName" : "HasMoreShards",
          "c2jShape" : "BooleanObject",
          "variable" : {
            "variableName" : "hasMoreShards",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "hasMoreShards",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "HasMoreShards",
            "marshallLocationName" : "HasMoreShards",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n@param hasMoreShards If set to <code>true</code>, more shards in the stream are available to describe.*/",
          "getterDocumentation" : "/**<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n@return If set to <code>true</code>, more shards in the stream are available to describe.*/",
          "fluentSetterDocumentation" : "/**<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n@param hasMoreShards If set to <code>true</code>, more shards in the stream are available to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n@param hasMoreShards If set to <code>true</code>, more shards in the stream are available to describe.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream being described.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream being described.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream being described.</p>\n@param streamName The name of the stream being described.*/",
          "getterDocumentation" : "/**<p>The name of the stream being described.</p>\n@return The name of the stream being described.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream being described.</p>\n@param streamName The name of the stream being described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream being described.</p>\n@param streamName The name of the stream being described.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamARN" : {
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream being described.</p>",
          "name" : "StreamARN",
          "c2jName" : "StreamARN",
          "c2jShape" : "StreamARN",
          "variable" : {
            "variableName" : "streamARN",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the stream being described.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamARN",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamARN",
            "marshallLocationName" : "StreamARN",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream being described.</p>\n@param streamARN The Amazon Resource Name (ARN) for the stream being described.*/",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream being described.</p>\n@return The Amazon Resource Name (ARN) for the stream being described.*/",
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream being described.</p>\n@param streamARN The Amazon Resource Name (ARN) for the stream being described.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream being described.</p>\n@param streamARN The Amazon Resource Name (ARN) for the stream being described.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Shards" : {
          "documentation" : "<p>The shards that comprise the stream.</p>",
          "name" : "Shards",
          "c2jName" : "Shards",
          "c2jShape" : "ShardList",
          "variable" : {
            "variableName" : "shards",
            "variableType" : "java.util.List<Shard>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Shard>",
            "documentation" : "<p>The shards that comprise the stream.</p>",
            "simpleType" : "List<Shard>",
            "variableSetterType" : "java.util.Collection<Shard>"
          },
          "setterModel" : {
            "variableName" : "shards",
            "variableType" : "java.util.List<Shard>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Shard>",
            "documentation" : "",
            "simpleType" : "List<Shard>",
            "variableSetterType" : "java.util.Collection<Shard>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Shard>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Shards",
            "marshallLocationName" : "Shards",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Shard",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Shard",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Shard",
                "variableDeclarationType" : "Shard",
                "documentation" : "",
                "simpleType" : "Shard",
                "variableSetterType" : "Shard"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Shard",
                "variableDeclarationType" : "Shard",
                "documentation" : "",
                "simpleType" : "Shard",
                "variableSetterType" : "Shard"
              },
              "getterModel" : {
                "returnType" : "Shard",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Shard",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Shard>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Shard>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@param shards The shards that comprise the stream.*/",
          "getterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@return The shards that comprise the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@param shards The shards that comprise the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setShards(java.util.Collection)} or {@link #withShards(java.util.Collection)} if you want to override the existing values.</p>\n@param shards The shards that comprise the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamStatus" : {
          "documentation" : "<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>",
          "name" : "StreamStatus",
          "c2jName" : "StreamStatus",
          "c2jShape" : "StreamStatus",
          "variable" : {
            "variableName" : "streamStatus",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamStatus",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamStatus",
            "marshallLocationName" : "StreamStatus",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "StreamStatus",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>\n@param streamStatus The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li>\n@see StreamStatus*/",
          "getterDocumentation" : "/**<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>\n@return The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li>\n@see StreamStatus*/",
          "fluentSetterDocumentation" : "/**<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>\n@param streamStatus The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamStatus*/",
          "varargSetterDocumentation" : "/**<p>The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li> </ul>\n@param streamStatus The current status of the stream being described.</p> <p>The stream status is one of the following states:</p> <ul> <li> <code>CREATING</code> - The stream is being created. Amazon Kinesis immediately returns and sets <code>StreamStatus</code> to <code>CREATING</code>.</li> <li> <code>DELETING</code> - The stream is being deleted. The specified stream is in the <code>DELETING</code> state until Amazon Kinesis completes the deletion.</li> <li> <code>ACTIVE</code> - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an <code>ACTIVE</code> stream.</li> <li> <code>UPDATING</code> - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the <code>UPDATING</code> state.</li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamStatus*/"
        }
      }
    },
    "CreateStreamRequest" : {
      "c2jName" : "CreateStreamInput",
      "documentation" : "<p>Represents the input for <code>CreateStream</code>.</p>",
      "shapeName" : "CreateStreamRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "ShardCount" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>\n@param streamName A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.*/",
        "getterDocumentation" : "/**<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>\n@return A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.*/",
        "fluentSetterDocumentation" : "/**<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>\n@param streamName A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>\n@param streamName A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>",
        "name" : "ShardCount",
        "c2jName" : "ShardCount",
        "c2jShape" : "PositiveIntegerObject",
        "variable" : {
          "variableName" : "shardCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "shardCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardCount",
          "marshallLocationName" : "ShardCount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>\n@param shardCount The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;*/",
        "getterDocumentation" : "/**<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>\n@return The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;*/",
        "fluentSetterDocumentation" : "/**<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>\n@param shardCount The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>\n@param shardCount The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createStreamRequest",
        "variableType" : "CreateStreamRequest",
        "variableDeclarationType" : "CreateStreamRequest",
        "documentation" : null,
        "simpleType" : "CreateStreamRequest",
        "variableSetterType" : "CreateStreamRequest"
      },
      "marshaller" : {
        "action" : "CreateStream",
        "verb" : "POST",
        "target" : "Kinesis_20131202.CreateStream",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ShardCount" : {
          "documentation" : "<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>",
          "name" : "ShardCount",
          "c2jName" : "ShardCount",
          "c2jShape" : "PositiveIntegerObject",
          "variable" : {
            "variableName" : "shardCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "shardCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardCount",
            "marshallLocationName" : "ShardCount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>\n@param shardCount The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;*/",
          "getterDocumentation" : "/**<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>\n@return The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;*/",
          "fluentSetterDocumentation" : "/**<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>\n@param shardCount The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;</p>\n@param shardCount The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p> <p>DefaultShardLimit;\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>\n@param streamName A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.*/",
          "getterDocumentation" : "/**<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>\n@return A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.*/",
          "fluentSetterDocumentation" : "/**<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>\n@param streamName A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.</p>\n@param streamName A name to identify the stream. The stream name is scoped to the AWS account used by the application that creates the stream. It is also scoped by region. That is, two streams in two different AWS accounts can have the same name, and two streams in the same AWS account, but in two different regions, can have the same name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "documentation" : "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed (5).</p>",
      "shapeName" : "LimitExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "variableDeclarationType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "PutRecordsRequest" : {
      "c2jName" : "PutRecordsInput",
      "documentation" : "<p>A <code>PutRecords</code> request.</p>",
      "shapeName" : "PutRecordsRequest",
      "deprecated" : false,
      "required" : [ "Records", "StreamName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The records associated with the request.</p>",
        "name" : "Records",
        "c2jName" : "Records",
        "c2jShape" : "PutRecordsRequestEntryList",
        "variable" : {
          "variableName" : "records",
          "variableType" : "java.util.List<PutRecordsRequestEntry>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<PutRecordsRequestEntry>",
          "documentation" : "<p>The records associated with the request.</p>",
          "simpleType" : "List<PutRecordsRequestEntry>",
          "variableSetterType" : "java.util.Collection<PutRecordsRequestEntry>"
        },
        "setterModel" : {
          "variableName" : "records",
          "variableType" : "java.util.List<PutRecordsRequestEntry>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<PutRecordsRequestEntry>",
          "documentation" : "",
          "simpleType" : "List<PutRecordsRequestEntry>",
          "variableSetterType" : "java.util.Collection<PutRecordsRequestEntry>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<PutRecordsRequestEntry>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Records",
          "marshallLocationName" : "Records",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "PutRecordsRequestEntry",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "PutRecordsRequestEntry",
            "variable" : {
              "variableName" : "member",
              "variableType" : "PutRecordsRequestEntry",
              "variableDeclarationType" : "PutRecordsRequestEntry",
              "documentation" : "",
              "simpleType" : "PutRecordsRequestEntry",
              "variableSetterType" : "PutRecordsRequestEntry"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "PutRecordsRequestEntry",
              "variableDeclarationType" : "PutRecordsRequestEntry",
              "documentation" : "",
              "simpleType" : "PutRecordsRequestEntry",
              "variableSetterType" : "PutRecordsRequestEntry"
            },
            "getterModel" : {
              "returnType" : "PutRecordsRequestEntry",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "PutRecordsRequestEntry",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<PutRecordsRequestEntry>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<PutRecordsRequestEntry>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The records associated with the request.</p>\n@param records The records associated with the request.*/",
        "getterDocumentation" : "/**<p>The records associated with the request.</p>\n@return The records associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The records associated with the request.</p>\n@param records The records associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The records associated with the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRecords(java.util.Collection)} or {@link #withRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param records The records associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The stream name associated with the request.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The stream name associated with the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The stream name associated with the request.</p>\n@param streamName The stream name associated with the request.*/",
        "getterDocumentation" : "/**<p>The stream name associated with the request.</p>\n@return The stream name associated with the request.*/",
        "fluentSetterDocumentation" : "/**<p>The stream name associated with the request.</p>\n@param streamName The stream name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The stream name associated with the request.</p>\n@param streamName The stream name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putRecordsRequest",
        "variableType" : "PutRecordsRequest",
        "variableDeclarationType" : "PutRecordsRequest",
        "documentation" : null,
        "simpleType" : "PutRecordsRequest",
        "variableSetterType" : "PutRecordsRequest"
      },
      "marshaller" : {
        "action" : "PutRecords",
        "verb" : "POST",
        "target" : "Kinesis_20131202.PutRecords",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Records" : {
          "documentation" : "<p>The records associated with the request.</p>",
          "name" : "Records",
          "c2jName" : "Records",
          "c2jShape" : "PutRecordsRequestEntryList",
          "variable" : {
            "variableName" : "records",
            "variableType" : "java.util.List<PutRecordsRequestEntry>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<PutRecordsRequestEntry>",
            "documentation" : "<p>The records associated with the request.</p>",
            "simpleType" : "List<PutRecordsRequestEntry>",
            "variableSetterType" : "java.util.Collection<PutRecordsRequestEntry>"
          },
          "setterModel" : {
            "variableName" : "records",
            "variableType" : "java.util.List<PutRecordsRequestEntry>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<PutRecordsRequestEntry>",
            "documentation" : "",
            "simpleType" : "List<PutRecordsRequestEntry>",
            "variableSetterType" : "java.util.Collection<PutRecordsRequestEntry>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<PutRecordsRequestEntry>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Records",
            "marshallLocationName" : "Records",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "PutRecordsRequestEntry",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "PutRecordsRequestEntry",
              "variable" : {
                "variableName" : "member",
                "variableType" : "PutRecordsRequestEntry",
                "variableDeclarationType" : "PutRecordsRequestEntry",
                "documentation" : "",
                "simpleType" : "PutRecordsRequestEntry",
                "variableSetterType" : "PutRecordsRequestEntry"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "PutRecordsRequestEntry",
                "variableDeclarationType" : "PutRecordsRequestEntry",
                "documentation" : "",
                "simpleType" : "PutRecordsRequestEntry",
                "variableSetterType" : "PutRecordsRequestEntry"
              },
              "getterModel" : {
                "returnType" : "PutRecordsRequestEntry",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "PutRecordsRequestEntry",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<PutRecordsRequestEntry>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<PutRecordsRequestEntry>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The records associated with the request.</p>\n@param records The records associated with the request.*/",
          "getterDocumentation" : "/**<p>The records associated with the request.</p>\n@return The records associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The records associated with the request.</p>\n@param records The records associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The records associated with the request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRecords(java.util.Collection)} or {@link #withRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param records The records associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The stream name associated with the request.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The stream name associated with the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The stream name associated with the request.</p>\n@param streamName The stream name associated with the request.*/",
          "getterDocumentation" : "/**<p>The stream name associated with the request.</p>\n@return The stream name associated with the request.*/",
          "fluentSetterDocumentation" : "/**<p>The stream name associated with the request.</p>\n@param streamName The stream name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The stream name associated with the request.</p>\n@param streamName The stream name associated with the request.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AddTagsToStreamRequest" : {
      "c2jName" : "AddTagsToStreamInput",
      "documentation" : "<p>Represents the input for <code>AddTagsToStream</code>.</p>",
      "shapeName" : "AddTagsToStreamRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "Tags" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.*/",
        "getterDocumentation" : "/**<p>The name of the stream.</p>\n@return The name of the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The set of key-value pairs to use to create the tags.</p>",
        "name" : "Tags",
        "c2jName" : "Tags",
        "c2jShape" : "TagMap",
        "variable" : {
          "variableName" : "tags",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalMap<String,String>",
          "documentation" : "<p>The set of key-value pairs to use to create the tags.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "tags",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalMap<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Tags",
          "marshallLocationName" : "Tags",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "com.amazonaws.internal.SdkInternalMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>The set of key-value pairs to use to create the tags.</p>\n@param tags The set of key-value pairs to use to create the tags.*/",
        "getterDocumentation" : "/**<p>The set of key-value pairs to use to create the tags.</p>\n@return The set of key-value pairs to use to create the tags.*/",
        "fluentSetterDocumentation" : "/**<p>The set of key-value pairs to use to create the tags.</p>\n@param tags The set of key-value pairs to use to create the tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The set of key-value pairs to use to create the tags.</p>\n@param tags The set of key-value pairs to use to create the tags.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "addTagsToStreamRequest",
        "variableType" : "AddTagsToStreamRequest",
        "variableDeclarationType" : "AddTagsToStreamRequest",
        "documentation" : null,
        "simpleType" : "AddTagsToStreamRequest",
        "variableSetterType" : "AddTagsToStreamRequest"
      },
      "marshaller" : {
        "action" : "AddTagsToStream",
        "verb" : "POST",
        "target" : "Kinesis_20131202.AddTagsToStream",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Tags" : {
          "documentation" : "<p>The set of key-value pairs to use to create the tags.</p>",
          "name" : "Tags",
          "c2jName" : "Tags",
          "c2jShape" : "TagMap",
          "variable" : {
            "variableName" : "tags",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalMap<String,String>",
            "documentation" : "<p>The set of key-value pairs to use to create the tags.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "tags",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalMap<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Tags",
            "marshallLocationName" : "Tags",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "com.amazonaws.internal.SdkInternalMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>The set of key-value pairs to use to create the tags.</p>\n@param tags The set of key-value pairs to use to create the tags.*/",
          "getterDocumentation" : "/**<p>The set of key-value pairs to use to create the tags.</p>\n@return The set of key-value pairs to use to create the tags.*/",
          "fluentSetterDocumentation" : "/**<p>The set of key-value pairs to use to create the tags.</p>\n@param tags The set of key-value pairs to use to create the tags.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The set of key-value pairs to use to create the tags.</p>\n@param tags The set of key-value pairs to use to create the tags.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.*/",
          "getterDocumentation" : "/**<p>The name of the stream.</p>\n@return The name of the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Tag" : {
      "c2jName" : "Tag",
      "documentation" : "<p>Metadata assigned to the stream, consisting of a key-value pair.</p>",
      "shapeName" : "Tag",
      "deprecated" : false,
      "required" : [ "Key" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>",
        "name" : "Key",
        "c2jName" : "Key",
        "c2jShape" : "TagKey",
        "variable" : {
          "variableName" : "key",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "key",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Key",
          "marshallLocationName" : "Key",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param key A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @*/",
        "getterDocumentation" : "/**<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@return A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param key A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param key A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>",
        "name" : "Value",
        "c2jName" : "Value",
        "c2jShape" : "TagValue",
        "variable" : {
          "variableName" : "value",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "value",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Value",
          "marshallLocationName" : "Value",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param value An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @*/",
        "getterDocumentation" : "/**<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@return An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @*/",
        "fluentSetterDocumentation" : "/**<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param value An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param value An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "tag",
        "variableType" : "Tag",
        "variableDeclarationType" : "Tag",
        "documentation" : null,
        "simpleType" : "Tag",
        "variableSetterType" : "Tag"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Value" : {
          "documentation" : "<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>",
          "name" : "Value",
          "c2jName" : "Value",
          "c2jShape" : "TagValue",
          "variable" : {
            "variableName" : "value",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "value",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Value",
            "marshallLocationName" : "Value",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param value An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @*/",
          "getterDocumentation" : "/**<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@return An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @*/",
          "fluentSetterDocumentation" : "/**<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param value An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param value An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Key" : {
          "documentation" : "<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>",
          "name" : "Key",
          "c2jName" : "Key",
          "c2jShape" : "TagKey",
          "variable" : {
            "variableName" : "key",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "key",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Key",
            "marshallLocationName" : "Key",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param key A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @*/",
          "getterDocumentation" : "/**<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@return A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param key A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n@param key A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetRecordsRequest" : {
      "c2jName" : "GetRecordsInput",
      "documentation" : "<p>Represents the input for <a>GetRecords</a>.</p>",
      "shapeName" : "GetRecordsRequest",
      "deprecated" : false,
      "required" : [ "ShardIterator" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>",
        "name" : "ShardIterator",
        "c2jName" : "ShardIterator",
        "c2jShape" : "ShardIterator",
        "variable" : {
          "variableName" : "shardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardIterator",
          "marshallLocationName" : "ShardIterator",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n@param shardIterator The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.*/",
        "getterDocumentation" : "/**<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n@return The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.*/",
        "fluentSetterDocumentation" : "/**<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n@param shardIterator The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n@param shardIterator The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>",
        "name" : "Limit",
        "c2jName" : "Limit",
        "c2jShape" : "GetRecordsInputLimit",
        "variable" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Limit",
          "marshallLocationName" : "Limit",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>\n@param limit The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.*/",
        "getterDocumentation" : "/**<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>\n@return The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>\n@param limit The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>\n@param limit The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getRecordsRequest",
        "variableType" : "GetRecordsRequest",
        "variableDeclarationType" : "GetRecordsRequest",
        "documentation" : null,
        "simpleType" : "GetRecordsRequest",
        "variableSetterType" : "GetRecordsRequest"
      },
      "marshaller" : {
        "action" : "GetRecords",
        "verb" : "POST",
        "target" : "Kinesis_20131202.GetRecords",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ShardIterator" : {
          "documentation" : "<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>",
          "name" : "ShardIterator",
          "c2jName" : "ShardIterator",
          "c2jShape" : "ShardIterator",
          "variable" : {
            "variableName" : "shardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardIterator",
            "marshallLocationName" : "ShardIterator",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n@param shardIterator The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.*/",
          "getterDocumentation" : "/**<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n@return The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.*/",
          "fluentSetterDocumentation" : "/**<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n@param shardIterator The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n@param shardIterator The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Limit" : {
          "documentation" : "<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>",
          "name" : "Limit",
          "c2jName" : "Limit",
          "c2jShape" : "GetRecordsInputLimit",
          "variable" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Limit",
            "marshallLocationName" : "Limit",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>\n@param limit The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.*/",
          "getterDocumentation" : "/**<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>\n@return The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>\n@param limit The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.</p>\n@param limit The maximum number of records to return. Specify a value of up to 10,000. If you specify a value that is greater than 10,000, <a>GetRecords</a> throws <code>InvalidArgumentException</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "PutRecordsResultEntry" : {
      "c2jName" : "PutRecordsResultEntry",
      "documentation" : "<p>Represents the result of an individual record from a <code>PutRecords</code> request. A record that is successfully added to your Amazon Kinesis stream includes SequenceNumber and ShardId in the result. A record that fails to be added to your Amazon Kinesis stream includes ErrorCode and ErrorMessage in the result.</p>",
      "shapeName" : "PutRecordsResultEntry",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The sequence number for an individual record result.</p>",
        "name" : "SequenceNumber",
        "c2jName" : "SequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The sequence number for an individual record result.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SequenceNumber",
          "marshallLocationName" : "SequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The sequence number for an individual record result.</p>\n@param sequenceNumber The sequence number for an individual record result.*/",
        "getterDocumentation" : "/**<p>The sequence number for an individual record result.</p>\n@return The sequence number for an individual record result.*/",
        "fluentSetterDocumentation" : "/**<p>The sequence number for an individual record result.</p>\n@param sequenceNumber The sequence number for an individual record result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The sequence number for an individual record result.</p>\n@param sequenceNumber The sequence number for an individual record result.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID for an individual record result.</p>",
        "name" : "ShardId",
        "c2jName" : "ShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID for an individual record result.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardId",
          "marshallLocationName" : "ShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID for an individual record result.</p>\n@param shardId The shard ID for an individual record result.*/",
        "getterDocumentation" : "/**<p>The shard ID for an individual record result.</p>\n@return The shard ID for an individual record result.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID for an individual record result.</p>\n@param shardId The shard ID for an individual record result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID for an individual record result.</p>\n@param shardId The shard ID for an individual record result.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>",
        "name" : "ErrorCode",
        "c2jName" : "ErrorCode",
        "c2jShape" : "ErrorCode",
        "variable" : {
          "variableName" : "errorCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "errorCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ErrorCode",
          "marshallLocationName" : "ErrorCode",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>\n@param errorCode The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.*/",
        "getterDocumentation" : "/**<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>\n@return The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.*/",
        "fluentSetterDocumentation" : "/**<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>\n@param errorCode The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>\n@param errorCode The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>",
        "name" : "ErrorMessage",
        "c2jName" : "ErrorMessage",
        "c2jShape" : "ErrorMessage",
        "variable" : {
          "variableName" : "errorMessage",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "errorMessage",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ErrorMessage",
          "marshallLocationName" : "ErrorMessage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>\n@param errorMessage The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.*/",
        "getterDocumentation" : "/**<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>\n@return The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.*/",
        "fluentSetterDocumentation" : "/**<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>\n@param errorMessage The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>\n@param errorMessage The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putRecordsResultEntry",
        "variableType" : "PutRecordsResultEntry",
        "variableDeclarationType" : "PutRecordsResultEntry",
        "documentation" : null,
        "simpleType" : "PutRecordsResultEntry",
        "variableSetterType" : "PutRecordsResultEntry"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ErrorMessage" : {
          "documentation" : "<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>",
          "name" : "ErrorMessage",
          "c2jName" : "ErrorMessage",
          "c2jShape" : "ErrorMessage",
          "variable" : {
            "variableName" : "errorMessage",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "errorMessage",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ErrorMessage",
            "marshallLocationName" : "ErrorMessage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>\n@param errorMessage The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.*/",
          "getterDocumentation" : "/**<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>\n@return The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.*/",
          "fluentSetterDocumentation" : "/**<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>\n@param errorMessage The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.</p>\n@param errorMessage The error message for an individual record result. An <code>ErrorCode</code> value of <code>ProvisionedThroughputExceededException</code> has an error message that includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of <code>InternalFailure</code> has the error message <code>\"Internal Service Failure\"</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ShardId" : {
          "documentation" : "<p>The shard ID for an individual record result.</p>",
          "name" : "ShardId",
          "c2jName" : "ShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID for an individual record result.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardId",
            "marshallLocationName" : "ShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID for an individual record result.</p>\n@param shardId The shard ID for an individual record result.*/",
          "getterDocumentation" : "/**<p>The shard ID for an individual record result.</p>\n@return The shard ID for an individual record result.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID for an individual record result.</p>\n@param shardId The shard ID for an individual record result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID for an individual record result.</p>\n@param shardId The shard ID for an individual record result.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ErrorCode" : {
          "documentation" : "<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>",
          "name" : "ErrorCode",
          "c2jName" : "ErrorCode",
          "c2jShape" : "ErrorCode",
          "variable" : {
            "variableName" : "errorCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "errorCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ErrorCode",
            "marshallLocationName" : "ErrorCode",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>\n@param errorCode The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.*/",
          "getterDocumentation" : "/**<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>\n@return The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.*/",
          "fluentSetterDocumentation" : "/**<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>\n@param errorCode The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.</p>\n@param errorCode The error code for an individual record result. <code>ErrorCodes</code> can be either <code>ProvisionedThroughputExceededException</code> or <code>InternalFailure</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SequenceNumber" : {
          "documentation" : "<p>The sequence number for an individual record result.</p>",
          "name" : "SequenceNumber",
          "c2jName" : "SequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The sequence number for an individual record result.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SequenceNumber",
            "marshallLocationName" : "SequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The sequence number for an individual record result.</p>\n@param sequenceNumber The sequence number for an individual record result.*/",
          "getterDocumentation" : "/**<p>The sequence number for an individual record result.</p>\n@return The sequence number for an individual record result.*/",
          "fluentSetterDocumentation" : "/**<p>The sequence number for an individual record result.</p>\n@param sequenceNumber The sequence number for an individual record result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The sequence number for an individual record result.</p>\n@param sequenceNumber The sequence number for an individual record result.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetRecordsResult" : {
      "c2jName" : "GetRecordsOutput",
      "documentation" : "<p>Represents the output for <a>GetRecords</a>.</p>",
      "shapeName" : "GetRecordsResult",
      "deprecated" : false,
      "required" : [ "Records" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The data records retrieved from the shard.</p>",
        "name" : "Records",
        "c2jName" : "Records",
        "c2jShape" : "RecordList",
        "variable" : {
          "variableName" : "records",
          "variableType" : "java.util.List<Record>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Record>",
          "documentation" : "<p>The data records retrieved from the shard.</p>",
          "simpleType" : "List<Record>",
          "variableSetterType" : "java.util.Collection<Record>"
        },
        "setterModel" : {
          "variableName" : "records",
          "variableType" : "java.util.List<Record>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Record>",
          "documentation" : "",
          "simpleType" : "List<Record>",
          "variableSetterType" : "java.util.Collection<Record>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Record>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Records",
          "marshallLocationName" : "Records",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Record",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Record",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Record",
              "variableDeclarationType" : "Record",
              "documentation" : "",
              "simpleType" : "Record",
              "variableSetterType" : "Record"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Record",
              "variableDeclarationType" : "Record",
              "documentation" : "",
              "simpleType" : "Record",
              "variableSetterType" : "Record"
            },
            "getterModel" : {
              "returnType" : "Record",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Record",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Record>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Record>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The data records retrieved from the shard.</p>\n@param records The data records retrieved from the shard.*/",
        "getterDocumentation" : "/**<p>The data records retrieved from the shard.</p>\n@return The data records retrieved from the shard.*/",
        "fluentSetterDocumentation" : "/**<p>The data records retrieved from the shard.</p>\n@param records The data records retrieved from the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The data records retrieved from the shard.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRecords(java.util.Collection)} or {@link #withRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param records The data records retrieved from the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>",
        "name" : "NextShardIterator",
        "c2jName" : "NextShardIterator",
        "c2jShape" : "ShardIterator",
        "variable" : {
          "variableName" : "nextShardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextShardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextShardIterator",
          "marshallLocationName" : "NextShardIterator",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.*/",
        "getterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>\n@return The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.*/",
        "fluentSetterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>",
        "name" : "MillisBehindLatest",
        "c2jName" : "MillisBehindLatest",
        "c2jShape" : "MillisBehindLatest",
        "variable" : {
          "variableName" : "millisBehindLatest",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "millisBehindLatest",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "MillisBehindLatest",
          "marshallLocationName" : "MillisBehindLatest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>\n@param millisBehindLatest The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.*/",
        "getterDocumentation" : "/**<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>\n@return The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.*/",
        "fluentSetterDocumentation" : "/**<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>\n@param millisBehindLatest The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>\n@param millisBehindLatest The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getRecordsResult",
        "variableType" : "GetRecordsResult",
        "variableDeclarationType" : "GetRecordsResult",
        "documentation" : null,
        "simpleType" : "GetRecordsResult",
        "variableSetterType" : "GetRecordsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextShardIterator" : {
          "documentation" : "<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>",
          "name" : "NextShardIterator",
          "c2jName" : "NextShardIterator",
          "c2jShape" : "ShardIterator",
          "variable" : {
            "variableName" : "nextShardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextShardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextShardIterator",
            "marshallLocationName" : "NextShardIterator",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.*/",
          "getterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>\n@return The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.*/",
          "fluentSetterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data. </p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading data records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Records" : {
          "documentation" : "<p>The data records retrieved from the shard.</p>",
          "name" : "Records",
          "c2jName" : "Records",
          "c2jShape" : "RecordList",
          "variable" : {
            "variableName" : "records",
            "variableType" : "java.util.List<Record>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Record>",
            "documentation" : "<p>The data records retrieved from the shard.</p>",
            "simpleType" : "List<Record>",
            "variableSetterType" : "java.util.Collection<Record>"
          },
          "setterModel" : {
            "variableName" : "records",
            "variableType" : "java.util.List<Record>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Record>",
            "documentation" : "",
            "simpleType" : "List<Record>",
            "variableSetterType" : "java.util.Collection<Record>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Record>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Records",
            "marshallLocationName" : "Records",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Record",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Record",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Record",
                "variableDeclarationType" : "Record",
                "documentation" : "",
                "simpleType" : "Record",
                "variableSetterType" : "Record"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Record",
                "variableDeclarationType" : "Record",
                "documentation" : "",
                "simpleType" : "Record",
                "variableSetterType" : "Record"
              },
              "getterModel" : {
                "returnType" : "Record",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Record",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Record>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Record>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The data records retrieved from the shard.</p>\n@param records The data records retrieved from the shard.*/",
          "getterDocumentation" : "/**<p>The data records retrieved from the shard.</p>\n@return The data records retrieved from the shard.*/",
          "fluentSetterDocumentation" : "/**<p>The data records retrieved from the shard.</p>\n@param records The data records retrieved from the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The data records retrieved from the shard.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRecords(java.util.Collection)} or {@link #withRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param records The data records retrieved from the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "MillisBehindLatest" : {
          "documentation" : "<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>",
          "name" : "MillisBehindLatest",
          "c2jName" : "MillisBehindLatest",
          "c2jShape" : "MillisBehindLatest",
          "variable" : {
            "variableName" : "millisBehindLatest",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "millisBehindLatest",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "MillisBehindLatest",
            "marshallLocationName" : "MillisBehindLatest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>\n@param millisBehindLatest The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.*/",
          "getterDocumentation" : "/**<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>\n@return The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.*/",
          "fluentSetterDocumentation" : "/**<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>\n@param millisBehindLatest The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.</p>\n@param millisBehindLatest The number of milliseconds the <a>GetRecords</a> response is from the tip of the stream, indicating how far behind current time the consumer is. A value of zero indicates record processing is caught up, and there are no new records to process at this moment.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "PutRecordRequest" : {
      "c2jName" : "PutRecordInput",
      "documentation" : "<p>Represents the input for <code>PutRecord</code>.</p>",
      "shapeName" : "PutRecordRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "Data", "PartitionKey" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream to put the data record into.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream to put the data record into.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream to put the data record into.</p>\n@param streamName The name of the stream to put the data record into.*/",
        "getterDocumentation" : "/**<p>The name of the stream to put the data record into.</p>\n@return The name of the stream to put the data record into.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream to put the data record into.</p>\n@param streamName The name of the stream to put the data record into.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream to put the data record into.</p>\n@param streamName The name of the stream to put the data record into.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>",
        "name" : "Data",
        "c2jName" : "Data",
        "c2jShape" : "Data",
        "variable" : {
          "variableName" : "data",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "setterModel" : {
          "variableName" : "data",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Data",
          "marshallLocationName" : "Data",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
        "getterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
        "fluentSetterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>",
        "name" : "PartitionKey",
        "c2jName" : "PartitionKey",
        "c2jShape" : "PartitionKey",
        "variable" : {
          "variableName" : "partitionKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "partitionKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "PartitionKey",
          "marshallLocationName" : "PartitionKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.*/",
        "getterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>\n@return Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.*/",
        "fluentSetterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>",
        "name" : "ExplicitHashKey",
        "c2jName" : "ExplicitHashKey",
        "c2jShape" : "HashKey",
        "variable" : {
          "variableName" : "explicitHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "explicitHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ExplicitHashKey",
          "marshallLocationName" : "ExplicitHashKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.*/",
        "getterDocumentation" : "/**<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n@return The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.*/",
        "fluentSetterDocumentation" : "/**<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>",
        "name" : "SequenceNumberForOrdering",
        "c2jName" : "SequenceNumberForOrdering",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "sequenceNumberForOrdering",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sequenceNumberForOrdering",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SequenceNumberForOrdering",
          "marshallLocationName" : "SequenceNumberForOrdering",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>\n@param sequenceNumberForOrdering Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.*/",
        "getterDocumentation" : "/**<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>\n@return Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.*/",
        "fluentSetterDocumentation" : "/**<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>\n@param sequenceNumberForOrdering Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>\n@param sequenceNumberForOrdering Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putRecordRequest",
        "variableType" : "PutRecordRequest",
        "variableDeclarationType" : "PutRecordRequest",
        "documentation" : null,
        "simpleType" : "PutRecordRequest",
        "variableSetterType" : "PutRecordRequest"
      },
      "marshaller" : {
        "action" : "PutRecord",
        "verb" : "POST",
        "target" : "Kinesis_20131202.PutRecord",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Data" : {
          "documentation" : "<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>",
          "name" : "Data",
          "c2jName" : "Data",
          "c2jShape" : "Data",
          "variable" : {
            "variableName" : "data",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "setterModel" : {
            "variableName" : "data",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Data",
            "marshallLocationName" : "Data",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
          "getterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
          "fluentSetterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB). </p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ExplicitHashKey" : {
          "documentation" : "<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>",
          "name" : "ExplicitHashKey",
          "c2jName" : "ExplicitHashKey",
          "c2jShape" : "HashKey",
          "variable" : {
            "variableName" : "explicitHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "explicitHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ExplicitHashKey",
            "marshallLocationName" : "ExplicitHashKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.*/",
          "getterDocumentation" : "/**<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n@return The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.*/",
          "fluentSetterDocumentation" : "/**<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SequenceNumberForOrdering" : {
          "documentation" : "<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>",
          "name" : "SequenceNumberForOrdering",
          "c2jName" : "SequenceNumberForOrdering",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "sequenceNumberForOrdering",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sequenceNumberForOrdering",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SequenceNumberForOrdering",
            "marshallLocationName" : "SequenceNumberForOrdering",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>\n@param sequenceNumberForOrdering Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.*/",
          "getterDocumentation" : "/**<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>\n@return Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.*/",
          "fluentSetterDocumentation" : "/**<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>\n@param sequenceNumberForOrdering Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.</p>\n@param sequenceNumberForOrdering Guarantees strictly increasing sequence numbers, for puts from the same client and to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of record <i>n</i> to the sequence number of record <i>n-1</i> (as returned in the result when putting record <i>n-1</i>). If this parameter is not set, records will be coarsely ordered based on arrival time.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream to put the data record into.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream to put the data record into.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream to put the data record into.</p>\n@param streamName The name of the stream to put the data record into.*/",
          "getterDocumentation" : "/**<p>The name of the stream to put the data record into.</p>\n@return The name of the stream to put the data record into.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream to put the data record into.</p>\n@param streamName The name of the stream to put the data record into.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream to put the data record into.</p>\n@param streamName The name of the stream to put the data record into.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PartitionKey" : {
          "documentation" : "<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>",
          "name" : "PartitionKey",
          "c2jName" : "PartitionKey",
          "c2jShape" : "PartitionKey",
          "variable" : {
            "variableName" : "partitionKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "partitionKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "PartitionKey",
            "marshallLocationName" : "PartitionKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.*/",
          "getterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>\n@return Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.*/",
          "fluentSetterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key will map to the same shard within the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListTagsForStreamRequest" : {
      "c2jName" : "ListTagsForStreamInput",
      "documentation" : "<p>Represents the input for <code>ListTagsForStream</code>.</p>",
      "shapeName" : "ListTagsForStreamRequest",
      "deprecated" : false,
      "required" : [ "StreamName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.*/",
        "getterDocumentation" : "/**<p>The name of the stream.</p>\n@return The name of the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>",
        "name" : "ExclusiveStartTagKey",
        "c2jName" : "ExclusiveStartTagKey",
        "c2jShape" : "TagKey",
        "variable" : {
          "variableName" : "exclusiveStartTagKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "exclusiveStartTagKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ExclusiveStartTagKey",
          "marshallLocationName" : "ExclusiveStartTagKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>\n@param exclusiveStartTagKey The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.*/",
        "getterDocumentation" : "/**<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>\n@return The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.*/",
        "fluentSetterDocumentation" : "/**<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>\n@param exclusiveStartTagKey The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>\n@param exclusiveStartTagKey The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>",
        "name" : "Limit",
        "c2jName" : "Limit",
        "c2jShape" : "ListTagsForStreamInputLimit",
        "variable" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Limit",
          "marshallLocationName" : "Limit",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>\n@param limit The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.*/",
        "getterDocumentation" : "/**<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>\n@return The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.*/",
        "fluentSetterDocumentation" : "/**<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>\n@param limit The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>\n@param limit The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listTagsForStreamRequest",
        "variableType" : "ListTagsForStreamRequest",
        "variableDeclarationType" : "ListTagsForStreamRequest",
        "documentation" : null,
        "simpleType" : "ListTagsForStreamRequest",
        "variableSetterType" : "ListTagsForStreamRequest"
      },
      "marshaller" : {
        "action" : "ListTagsForStream",
        "verb" : "POST",
        "target" : "Kinesis_20131202.ListTagsForStream",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StreamName" : {
          "documentation" : "<p>The name of the stream.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.*/",
          "getterDocumentation" : "/**<p>The name of the stream.</p>\n@return The name of the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ExclusiveStartTagKey" : {
          "documentation" : "<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>",
          "name" : "ExclusiveStartTagKey",
          "c2jName" : "ExclusiveStartTagKey",
          "c2jShape" : "TagKey",
          "variable" : {
            "variableName" : "exclusiveStartTagKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "exclusiveStartTagKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ExclusiveStartTagKey",
            "marshallLocationName" : "ExclusiveStartTagKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>\n@param exclusiveStartTagKey The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.*/",
          "getterDocumentation" : "/**<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>\n@return The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.*/",
          "fluentSetterDocumentation" : "/**<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>\n@param exclusiveStartTagKey The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>. </p>\n@param exclusiveStartTagKey The key to use as the starting point for the list of tags. If this parameter is set, <code>ListTagsForStream</code> gets all tags that occur after <code>ExclusiveStartTagKey</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Limit" : {
          "documentation" : "<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>",
          "name" : "Limit",
          "c2jName" : "Limit",
          "c2jShape" : "ListTagsForStreamInputLimit",
          "variable" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Limit",
            "marshallLocationName" : "Limit",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>\n@param limit The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.*/",
          "getterDocumentation" : "/**<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>\n@return The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.*/",
          "fluentSetterDocumentation" : "/**<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>\n@param limit The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.</p>\n@param limit The number of tags to return. If this number is less than the total number of tags associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeStreamResult" : {
      "c2jName" : "DescribeStreamOutput",
      "documentation" : "<p>Represents the output for <code>DescribeStream</code>.</p>",
      "shapeName" : "DescribeStreamResult",
      "deprecated" : false,
      "required" : [ "StreamDescription" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>",
        "name" : "StreamDescription",
        "c2jName" : "StreamDescription",
        "c2jShape" : "StreamDescription",
        "variable" : {
          "variableName" : "streamDescription",
          "variableType" : "StreamDescription",
          "variableDeclarationType" : "StreamDescription",
          "documentation" : "<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>",
          "simpleType" : "StreamDescription",
          "variableSetterType" : "StreamDescription"
        },
        "setterModel" : {
          "variableName" : "streamDescription",
          "variableType" : "StreamDescription",
          "variableDeclarationType" : "StreamDescription",
          "documentation" : "",
          "simpleType" : "StreamDescription",
          "variableSetterType" : "StreamDescription"
        },
        "getterModel" : {
          "returnType" : "StreamDescription",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamDescription",
          "marshallLocationName" : "StreamDescription",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>\n@param streamDescription The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.*/",
        "getterDocumentation" : "/**<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>\n@return The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.*/",
        "fluentSetterDocumentation" : "/**<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>\n@param streamDescription The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>\n@param streamDescription The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeStreamResult",
        "variableType" : "DescribeStreamResult",
        "variableDeclarationType" : "DescribeStreamResult",
        "documentation" : null,
        "simpleType" : "DescribeStreamResult",
        "variableSetterType" : "DescribeStreamResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StreamDescription" : {
          "documentation" : "<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>",
          "name" : "StreamDescription",
          "c2jName" : "StreamDescription",
          "c2jShape" : "StreamDescription",
          "variable" : {
            "variableName" : "streamDescription",
            "variableType" : "StreamDescription",
            "variableDeclarationType" : "StreamDescription",
            "documentation" : "<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>",
            "simpleType" : "StreamDescription",
            "variableSetterType" : "StreamDescription"
          },
          "setterModel" : {
            "variableName" : "streamDescription",
            "variableType" : "StreamDescription",
            "variableDeclarationType" : "StreamDescription",
            "documentation" : "",
            "simpleType" : "StreamDescription",
            "variableSetterType" : "StreamDescription"
          },
          "getterModel" : {
            "returnType" : "StreamDescription",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamDescription",
            "marshallLocationName" : "StreamDescription",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>\n@param streamDescription The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.*/",
          "getterDocumentation" : "/**<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>\n@return The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.*/",
          "fluentSetterDocumentation" : "/**<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>\n@param streamDescription The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.</p>\n@param streamDescription The current status of the stream, the stream ARN, an array of shard objects that comprise the stream, and states whether there are more shards available.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "HashKeyRange" : {
      "c2jName" : "HashKeyRange",
      "documentation" : "<p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>",
      "shapeName" : "HashKeyRange",
      "deprecated" : false,
      "required" : [ "StartingHashKey", "EndingHashKey" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The starting hash key of the hash key range.</p>",
        "name" : "StartingHashKey",
        "c2jName" : "StartingHashKey",
        "c2jShape" : "HashKey",
        "variable" : {
          "variableName" : "startingHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The starting hash key of the hash key range.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "startingHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StartingHashKey",
          "marshallLocationName" : "StartingHashKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The starting hash key of the hash key range.</p>\n@param startingHashKey The starting hash key of the hash key range.*/",
        "getterDocumentation" : "/**<p>The starting hash key of the hash key range.</p>\n@return The starting hash key of the hash key range.*/",
        "fluentSetterDocumentation" : "/**<p>The starting hash key of the hash key range.</p>\n@param startingHashKey The starting hash key of the hash key range.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The starting hash key of the hash key range.</p>\n@param startingHashKey The starting hash key of the hash key range.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ending hash key of the hash key range.</p>",
        "name" : "EndingHashKey",
        "c2jName" : "EndingHashKey",
        "c2jShape" : "HashKey",
        "variable" : {
          "variableName" : "endingHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ending hash key of the hash key range.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "endingHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "EndingHashKey",
          "marshallLocationName" : "EndingHashKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ending hash key of the hash key range.</p>\n@param endingHashKey The ending hash key of the hash key range.*/",
        "getterDocumentation" : "/**<p>The ending hash key of the hash key range.</p>\n@return The ending hash key of the hash key range.*/",
        "fluentSetterDocumentation" : "/**<p>The ending hash key of the hash key range.</p>\n@param endingHashKey The ending hash key of the hash key range.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ending hash key of the hash key range.</p>\n@param endingHashKey The ending hash key of the hash key range.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "hashKeyRange",
        "variableType" : "HashKeyRange",
        "variableDeclarationType" : "HashKeyRange",
        "documentation" : null,
        "simpleType" : "HashKeyRange",
        "variableSetterType" : "HashKeyRange"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StartingHashKey" : {
          "documentation" : "<p>The starting hash key of the hash key range.</p>",
          "name" : "StartingHashKey",
          "c2jName" : "StartingHashKey",
          "c2jShape" : "HashKey",
          "variable" : {
            "variableName" : "startingHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The starting hash key of the hash key range.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "startingHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StartingHashKey",
            "marshallLocationName" : "StartingHashKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The starting hash key of the hash key range.</p>\n@param startingHashKey The starting hash key of the hash key range.*/",
          "getterDocumentation" : "/**<p>The starting hash key of the hash key range.</p>\n@return The starting hash key of the hash key range.*/",
          "fluentSetterDocumentation" : "/**<p>The starting hash key of the hash key range.</p>\n@param startingHashKey The starting hash key of the hash key range.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The starting hash key of the hash key range.</p>\n@param startingHashKey The starting hash key of the hash key range.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "EndingHashKey" : {
          "documentation" : "<p>The ending hash key of the hash key range.</p>",
          "name" : "EndingHashKey",
          "c2jName" : "EndingHashKey",
          "c2jShape" : "HashKey",
          "variable" : {
            "variableName" : "endingHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ending hash key of the hash key range.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "endingHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "EndingHashKey",
            "marshallLocationName" : "EndingHashKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ending hash key of the hash key range.</p>\n@param endingHashKey The ending hash key of the hash key range.*/",
          "getterDocumentation" : "/**<p>The ending hash key of the hash key range.</p>\n@return The ending hash key of the hash key range.*/",
          "fluentSetterDocumentation" : "/**<p>The ending hash key of the hash key range.</p>\n@param endingHashKey The ending hash key of the hash key range.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ending hash key of the hash key range.</p>\n@param endingHashKey The ending hash key of the hash key range.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListStreamsRequest" : {
      "c2jName" : "ListStreamsInput",
      "documentation" : "<p>Represents the input for <code>ListStreams</code>.</p>",
      "shapeName" : "ListStreamsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The maximum number of streams to list.</p>",
        "name" : "Limit",
        "c2jName" : "Limit",
        "c2jShape" : "ListStreamsInputLimit",
        "variable" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of streams to list.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Limit",
          "marshallLocationName" : "Limit",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of streams to list.</p>\n@param limit The maximum number of streams to list.*/",
        "getterDocumentation" : "/**<p>The maximum number of streams to list.</p>\n@return The maximum number of streams to list.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of streams to list.</p>\n@param limit The maximum number of streams to list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of streams to list.</p>\n@param limit The maximum number of streams to list.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The name of the stream to start the list with.</p>",
        "name" : "ExclusiveStartStreamName",
        "c2jName" : "ExclusiveStartStreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "exclusiveStartStreamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream to start the list with.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "exclusiveStartStreamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ExclusiveStartStreamName",
          "marshallLocationName" : "ExclusiveStartStreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream to start the list with.</p>\n@param exclusiveStartStreamName The name of the stream to start the list with.*/",
        "getterDocumentation" : "/**<p>The name of the stream to start the list with.</p>\n@return The name of the stream to start the list with.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream to start the list with.</p>\n@param exclusiveStartStreamName The name of the stream to start the list with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream to start the list with.</p>\n@param exclusiveStartStreamName The name of the stream to start the list with.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listStreamsRequest",
        "variableType" : "ListStreamsRequest",
        "variableDeclarationType" : "ListStreamsRequest",
        "documentation" : null,
        "simpleType" : "ListStreamsRequest",
        "variableSetterType" : "ListStreamsRequest"
      },
      "marshaller" : {
        "action" : "ListStreams",
        "verb" : "POST",
        "target" : "Kinesis_20131202.ListStreams",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ExclusiveStartStreamName" : {
          "documentation" : "<p>The name of the stream to start the list with.</p>",
          "name" : "ExclusiveStartStreamName",
          "c2jName" : "ExclusiveStartStreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "exclusiveStartStreamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream to start the list with.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "exclusiveStartStreamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ExclusiveStartStreamName",
            "marshallLocationName" : "ExclusiveStartStreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream to start the list with.</p>\n@param exclusiveStartStreamName The name of the stream to start the list with.*/",
          "getterDocumentation" : "/**<p>The name of the stream to start the list with.</p>\n@return The name of the stream to start the list with.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream to start the list with.</p>\n@param exclusiveStartStreamName The name of the stream to start the list with.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream to start the list with.</p>\n@param exclusiveStartStreamName The name of the stream to start the list with.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Limit" : {
          "documentation" : "<p>The maximum number of streams to list.</p>",
          "name" : "Limit",
          "c2jName" : "Limit",
          "c2jShape" : "ListStreamsInputLimit",
          "variable" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of streams to list.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Limit",
            "marshallLocationName" : "Limit",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of streams to list.</p>\n@param limit The maximum number of streams to list.*/",
          "getterDocumentation" : "/**<p>The maximum number of streams to list.</p>\n@return The maximum number of streams to list.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of streams to list.</p>\n@param limit The maximum number of streams to list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of streams to list.</p>\n@param limit The maximum number of streams to list.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListTagsForStreamResult" : {
      "c2jName" : "ListTagsForStreamOutput",
      "documentation" : "<p>Represents the output for <code>ListTagsForStream</code>.</p>",
      "shapeName" : "ListTagsForStreamResult",
      "deprecated" : false,
      "required" : [ "Tags", "HasMoreTags" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>",
        "name" : "Tags",
        "c2jName" : "Tags",
        "c2jShape" : "TagList",
        "variable" : {
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Tag>",
          "documentation" : "<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "setterModel" : {
          "variableName" : "tags",
          "variableType" : "java.util.List<Tag>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Tag>",
          "documentation" : "",
          "simpleType" : "List<Tag>",
          "variableSetterType" : "java.util.Collection<Tag>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Tag>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Tags",
          "marshallLocationName" : "Tags",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Tag",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Tag",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Tag",
              "variableDeclarationType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Tag",
              "variableDeclarationType" : "Tag",
              "documentation" : "",
              "simpleType" : "Tag",
              "variableSetterType" : "Tag"
            },
            "getterModel" : {
              "returnType" : "Tag",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Tag",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Tag>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Tag>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n@param tags A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.*/",
        "getterDocumentation" : "/**<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n@return A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.*/",
        "fluentSetterDocumentation" : "/**<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n@param tags A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>",
        "name" : "HasMoreTags",
        "c2jName" : "HasMoreTags",
        "c2jShape" : "BooleanObject",
        "variable" : {
          "variableName" : "hasMoreTags",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "hasMoreTags",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "HasMoreTags",
          "marshallLocationName" : "HasMoreTags",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n@param hasMoreTags If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.*/",
        "getterDocumentation" : "/**<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n@return If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.*/",
        "fluentSetterDocumentation" : "/**<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n@param hasMoreTags If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n@param hasMoreTags If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listTagsForStreamResult",
        "variableType" : "ListTagsForStreamResult",
        "variableDeclarationType" : "ListTagsForStreamResult",
        "documentation" : null,
        "simpleType" : "ListTagsForStreamResult",
        "variableSetterType" : "ListTagsForStreamResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Tags" : {
          "documentation" : "<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>",
          "name" : "Tags",
          "c2jName" : "Tags",
          "c2jShape" : "TagList",
          "variable" : {
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Tag>",
            "documentation" : "<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "setterModel" : {
            "variableName" : "tags",
            "variableType" : "java.util.List<Tag>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Tag>",
            "documentation" : "",
            "simpleType" : "List<Tag>",
            "variableSetterType" : "java.util.Collection<Tag>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Tag>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Tags",
            "marshallLocationName" : "Tags",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Tag",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Tag",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Tag",
                "variableDeclarationType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Tag",
                "variableDeclarationType" : "Tag",
                "documentation" : "",
                "simpleType" : "Tag",
                "variableSetterType" : "Tag"
              },
              "getterModel" : {
                "returnType" : "Tag",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Tag",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Tag>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Tag>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n@param tags A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.*/",
          "getterDocumentation" : "/**<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n@return A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.*/",
          "fluentSetterDocumentation" : "/**<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n@param tags A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTags(java.util.Collection)} or {@link #withTags(java.util.Collection)} if you want to override the existing values.</p>\n@param tags A list of tags associated with <code>StreamName</code>, starting with the first tag after <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "HasMoreTags" : {
          "documentation" : "<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>",
          "name" : "HasMoreTags",
          "c2jName" : "HasMoreTags",
          "c2jShape" : "BooleanObject",
          "variable" : {
            "variableName" : "hasMoreTags",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "hasMoreTags",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "HasMoreTags",
            "marshallLocationName" : "HasMoreTags",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n@param hasMoreTags If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.*/",
          "getterDocumentation" : "/**<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n@return If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.*/",
          "fluentSetterDocumentation" : "/**<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n@param hasMoreTags If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n@param hasMoreTags If set to <code>true</code>, more tags are available. To request additional tags, set <code>ExclusiveStartTagKey</code> to the key of the last tag returned.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListStreamsResult" : {
      "c2jName" : "ListStreamsOutput",
      "documentation" : "<p>Represents the output for <code>ListStreams</code>.</p>",
      "shapeName" : "ListStreamsResult",
      "deprecated" : false,
      "required" : [ "StreamNames", "HasMoreStreams" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>",
        "name" : "StreamNames",
        "c2jName" : "StreamNames",
        "c2jShape" : "StreamNameList",
        "variable" : {
          "variableName" : "streamNames",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
          "documentation" : "<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "streamNames",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamNames",
          "marshallLocationName" : "StreamNames",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>\n@param streamNames The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.*/",
        "getterDocumentation" : "/**<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>\n@return The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.*/",
        "fluentSetterDocumentation" : "/**<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>\n@param streamNames The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setStreamNames(java.util.Collection)} or {@link #withStreamNames(java.util.Collection)} if you want to override the existing values.</p>\n@param streamNames The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>If set to <code>true</code>, there are more streams available to list.</p>",
        "name" : "HasMoreStreams",
        "c2jName" : "HasMoreStreams",
        "c2jShape" : "BooleanObject",
        "variable" : {
          "variableName" : "hasMoreStreams",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>If set to <code>true</code>, there are more streams available to list.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "hasMoreStreams",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "HasMoreStreams",
          "marshallLocationName" : "HasMoreStreams",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>If set to <code>true</code>, there are more streams available to list.</p>\n@param hasMoreStreams If set to <code>true</code>, there are more streams available to list.*/",
        "getterDocumentation" : "/**<p>If set to <code>true</code>, there are more streams available to list.</p>\n@return If set to <code>true</code>, there are more streams available to list.*/",
        "fluentSetterDocumentation" : "/**<p>If set to <code>true</code>, there are more streams available to list.</p>\n@param hasMoreStreams If set to <code>true</code>, there are more streams available to list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>If set to <code>true</code>, there are more streams available to list.</p>\n@param hasMoreStreams If set to <code>true</code>, there are more streams available to list.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listStreamsResult",
        "variableType" : "ListStreamsResult",
        "variableDeclarationType" : "ListStreamsResult",
        "documentation" : null,
        "simpleType" : "ListStreamsResult",
        "variableSetterType" : "ListStreamsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StreamNames" : {
          "documentation" : "<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>",
          "name" : "StreamNames",
          "c2jName" : "StreamNames",
          "c2jShape" : "StreamNameList",
          "variable" : {
            "variableName" : "streamNames",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
            "documentation" : "<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "streamNames",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamNames",
            "marshallLocationName" : "StreamNames",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>\n@param streamNames The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.*/",
          "getterDocumentation" : "/**<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>\n@return The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.*/",
          "fluentSetterDocumentation" : "/**<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>\n@param streamNames The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setStreamNames(java.util.Collection)} or {@link #withStreamNames(java.util.Collection)} if you want to override the existing values.</p>\n@param streamNames The names of the streams that are associated with the AWS account making the <code>ListStreams</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "HasMoreStreams" : {
          "documentation" : "<p>If set to <code>true</code>, there are more streams available to list.</p>",
          "name" : "HasMoreStreams",
          "c2jName" : "HasMoreStreams",
          "c2jShape" : "BooleanObject",
          "variable" : {
            "variableName" : "hasMoreStreams",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>If set to <code>true</code>, there are more streams available to list.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "hasMoreStreams",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "HasMoreStreams",
            "marshallLocationName" : "HasMoreStreams",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>If set to <code>true</code>, there are more streams available to list.</p>\n@param hasMoreStreams If set to <code>true</code>, there are more streams available to list.*/",
          "getterDocumentation" : "/**<p>If set to <code>true</code>, there are more streams available to list.</p>\n@return If set to <code>true</code>, there are more streams available to list.*/",
          "fluentSetterDocumentation" : "/**<p>If set to <code>true</code>, there are more streams available to list.</p>\n@param hasMoreStreams If set to <code>true</code>, there are more streams available to list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>If set to <code>true</code>, there are more streams available to list.</p>\n@param hasMoreStreams If set to <code>true</code>, there are more streams available to list.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetShardIteratorRequest" : {
      "c2jName" : "GetShardIteratorInput",
      "documentation" : "<p>Represents the input for <code>GetShardIterator</code>.</p>",
      "shapeName" : "GetShardIteratorRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "ShardId", "ShardIteratorType" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.*/",
        "getterDocumentation" : "/**<p>The name of the stream.</p>\n@return The name of the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID of the shard to get the iterator for.</p>",
        "name" : "ShardId",
        "c2jName" : "ShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the shard to get the iterator for.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardId",
          "marshallLocationName" : "ShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the shard to get the iterator for.</p>\n@param shardId The shard ID of the shard to get the iterator for.*/",
        "getterDocumentation" : "/**<p>The shard ID of the shard to get the iterator for.</p>\n@return The shard ID of the shard to get the iterator for.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the shard to get the iterator for.</p>\n@param shardId The shard ID of the shard to get the iterator for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the shard to get the iterator for.</p>\n@param shardId The shard ID of the shard to get the iterator for.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>",
        "name" : "ShardIteratorType",
        "c2jName" : "ShardIteratorType",
        "c2jShape" : "ShardIteratorType",
        "variable" : {
          "variableName" : "shardIteratorType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardIteratorType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardIteratorType",
          "marshallLocationName" : "ShardIteratorType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ShardIteratorType",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li>\n@see ShardIteratorType*/",
        "getterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>\n@return Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li>\n@see ShardIteratorType*/",
        "fluentSetterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShardIteratorType*/",
        "varargSetterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShardIteratorType*/"
      }, {
        "documentation" : "<p>The sequence number of the data record in the shard from which to start reading from.</p>",
        "name" : "StartingSequenceNumber",
        "c2jName" : "StartingSequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "startingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The sequence number of the data record in the shard from which to start reading from.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "startingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StartingSequenceNumber",
          "marshallLocationName" : "StartingSequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The sequence number of the data record in the shard from which to start reading from.</p>\n@param startingSequenceNumber The sequence number of the data record in the shard from which to start reading from.*/",
        "getterDocumentation" : "/**<p>The sequence number of the data record in the shard from which to start reading from.</p>\n@return The sequence number of the data record in the shard from which to start reading from.*/",
        "fluentSetterDocumentation" : "/**<p>The sequence number of the data record in the shard from which to start reading from.</p>\n@param startingSequenceNumber The sequence number of the data record in the shard from which to start reading from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The sequence number of the data record in the shard from which to start reading from.</p>\n@param startingSequenceNumber The sequence number of the data record in the shard from which to start reading from.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getShardIteratorRequest",
        "variableType" : "GetShardIteratorRequest",
        "variableDeclarationType" : "GetShardIteratorRequest",
        "documentation" : null,
        "simpleType" : "GetShardIteratorRequest",
        "variableSetterType" : "GetShardIteratorRequest"
      },
      "marshaller" : {
        "action" : "GetShardIterator",
        "verb" : "POST",
        "target" : "Kinesis_20131202.GetShardIterator",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StartingSequenceNumber" : {
          "documentation" : "<p>The sequence number of the data record in the shard from which to start reading from.</p>",
          "name" : "StartingSequenceNumber",
          "c2jName" : "StartingSequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "startingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The sequence number of the data record in the shard from which to start reading from.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "startingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StartingSequenceNumber",
            "marshallLocationName" : "StartingSequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The sequence number of the data record in the shard from which to start reading from.</p>\n@param startingSequenceNumber The sequence number of the data record in the shard from which to start reading from.*/",
          "getterDocumentation" : "/**<p>The sequence number of the data record in the shard from which to start reading from.</p>\n@return The sequence number of the data record in the shard from which to start reading from.*/",
          "fluentSetterDocumentation" : "/**<p>The sequence number of the data record in the shard from which to start reading from.</p>\n@param startingSequenceNumber The sequence number of the data record in the shard from which to start reading from.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The sequence number of the data record in the shard from which to start reading from.</p>\n@param startingSequenceNumber The sequence number of the data record in the shard from which to start reading from.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.*/",
          "getterDocumentation" : "/**<p>The name of the stream.</p>\n@return The name of the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream.</p>\n@param streamName The name of the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ShardIteratorType" : {
          "documentation" : "<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>",
          "name" : "ShardIteratorType",
          "c2jName" : "ShardIteratorType",
          "c2jShape" : "ShardIteratorType",
          "variable" : {
            "variableName" : "shardIteratorType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardIteratorType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardIteratorType",
            "marshallLocationName" : "ShardIteratorType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ShardIteratorType",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li>\n@see ShardIteratorType*/",
          "getterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>\n@return Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li>\n@see ShardIteratorType*/",
          "fluentSetterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShardIteratorType*/",
          "varargSetterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading data records from the shard.</p> <p>The following are the valid shard iterator types:</p> <ul> <li>AT_SEQUENCE_NUMBER - Start reading exactly from the position denoted by a specific sequence number.</li> <li>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific sequence number.</li> <li>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</li> <li>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShardIteratorType*/"
        },
        "ShardId" : {
          "documentation" : "<p>The shard ID of the shard to get the iterator for.</p>",
          "name" : "ShardId",
          "c2jName" : "ShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the shard to get the iterator for.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardId",
            "marshallLocationName" : "ShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the shard to get the iterator for.</p>\n@param shardId The shard ID of the shard to get the iterator for.*/",
          "getterDocumentation" : "/**<p>The shard ID of the shard to get the iterator for.</p>\n@return The shard ID of the shard to get the iterator for.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the shard to get the iterator for.</p>\n@param shardId The shard ID of the shard to get the iterator for.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the shard to get the iterator for.</p>\n@param shardId The shard ID of the shard to get the iterator for.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetShardIteratorResult" : {
      "c2jName" : "GetShardIteratorOutput",
      "documentation" : "<p>Represents the output for <code>GetShardIterator</code>.</p>",
      "shapeName" : "GetShardIteratorResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>",
        "name" : "ShardIterator",
        "c2jName" : "ShardIterator",
        "c2jShape" : "ShardIterator",
        "variable" : {
          "variableName" : "shardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardIterator",
          "marshallLocationName" : "ShardIterator",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.*/",
        "getterDocumentation" : "/**<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n@return The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.*/",
        "fluentSetterDocumentation" : "/**<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getShardIteratorResult",
        "variableType" : "GetShardIteratorResult",
        "variableDeclarationType" : "GetShardIteratorResult",
        "documentation" : null,
        "simpleType" : "GetShardIteratorResult",
        "variableSetterType" : "GetShardIteratorResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ShardIterator" : {
          "documentation" : "<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>",
          "name" : "ShardIterator",
          "c2jName" : "ShardIterator",
          "c2jShape" : "ShardIterator",
          "variable" : {
            "variableName" : "shardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardIterator",
            "marshallLocationName" : "ShardIterator",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.*/",
          "getterDocumentation" : "/**<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n@return The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.*/",
          "fluentSetterDocumentation" : "/**<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteStreamRequest" : {
      "c2jName" : "DeleteStreamInput",
      "documentation" : "<p>Represents the input for <a>DeleteStream</a>.</p>",
      "shapeName" : "DeleteStreamRequest",
      "deprecated" : false,
      "required" : [ "StreamName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream to delete.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream to delete.</p>\n@param streamName The name of the stream to delete.*/",
        "getterDocumentation" : "/**<p>The name of the stream to delete.</p>\n@return The name of the stream to delete.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream to delete.</p>\n@param streamName The name of the stream to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream to delete.</p>\n@param streamName The name of the stream to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteStreamRequest",
        "variableType" : "DeleteStreamRequest",
        "variableDeclarationType" : "DeleteStreamRequest",
        "documentation" : null,
        "simpleType" : "DeleteStreamRequest",
        "variableSetterType" : "DeleteStreamRequest"
      },
      "marshaller" : {
        "action" : "DeleteStream",
        "verb" : "POST",
        "target" : "Kinesis_20131202.DeleteStream",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StreamName" : {
          "documentation" : "<p>The name of the stream to delete.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream to delete.</p>\n@param streamName The name of the stream to delete.*/",
          "getterDocumentation" : "/**<p>The name of the stream to delete.</p>\n@return The name of the stream to delete.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream to delete.</p>\n@param streamName The name of the stream to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream to delete.</p>\n@param streamName The name of the stream to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "PutRecordsResult" : {
      "c2jName" : "PutRecordsOutput",
      "documentation" : "<p><code>PutRecords</code> results.</p>",
      "shapeName" : "PutRecordsResult",
      "deprecated" : false,
      "required" : [ "Records" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>",
        "name" : "FailedRecordCount",
        "c2jName" : "FailedRecordCount",
        "c2jShape" : "PositiveIntegerObject",
        "variable" : {
          "variableName" : "failedRecordCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "failedRecordCount",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "FailedRecordCount",
          "marshallLocationName" : "FailedRecordCount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n@param failedRecordCount The number of unsuccessfully processed records in a <code>PutRecords</code> request.*/",
        "getterDocumentation" : "/**<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n@return The number of unsuccessfully processed records in a <code>PutRecords</code> request.*/",
        "fluentSetterDocumentation" : "/**<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n@param failedRecordCount The number of unsuccessfully processed records in a <code>PutRecords</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n@param failedRecordCount The number of unsuccessfully processed records in a <code>PutRecords</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>",
        "name" : "Records",
        "c2jName" : "Records",
        "c2jShape" : "PutRecordsResultEntryList",
        "variable" : {
          "variableName" : "records",
          "variableType" : "java.util.List<PutRecordsResultEntry>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<PutRecordsResultEntry>",
          "documentation" : "<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>",
          "simpleType" : "List<PutRecordsResultEntry>",
          "variableSetterType" : "java.util.Collection<PutRecordsResultEntry>"
        },
        "setterModel" : {
          "variableName" : "records",
          "variableType" : "java.util.List<PutRecordsResultEntry>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<PutRecordsResultEntry>",
          "documentation" : "",
          "simpleType" : "List<PutRecordsResultEntry>",
          "variableSetterType" : "java.util.Collection<PutRecordsResultEntry>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<PutRecordsResultEntry>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Records",
          "marshallLocationName" : "Records",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "PutRecordsResultEntry",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "PutRecordsResultEntry",
            "variable" : {
              "variableName" : "member",
              "variableType" : "PutRecordsResultEntry",
              "variableDeclarationType" : "PutRecordsResultEntry",
              "documentation" : "",
              "simpleType" : "PutRecordsResultEntry",
              "variableSetterType" : "PutRecordsResultEntry"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "PutRecordsResultEntry",
              "variableDeclarationType" : "PutRecordsResultEntry",
              "documentation" : "",
              "simpleType" : "PutRecordsResultEntry",
              "variableSetterType" : "PutRecordsResultEntry"
            },
            "getterModel" : {
              "returnType" : "PutRecordsResultEntry",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "PutRecordsResultEntry",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<PutRecordsResultEntry>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<PutRecordsResultEntry>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n@param records An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.*/",
        "getterDocumentation" : "/**<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n@return An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.*/",
        "fluentSetterDocumentation" : "/**<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n@param records An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRecords(java.util.Collection)} or {@link #withRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param records An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putRecordsResult",
        "variableType" : "PutRecordsResult",
        "variableDeclarationType" : "PutRecordsResult",
        "documentation" : null,
        "simpleType" : "PutRecordsResult",
        "variableSetterType" : "PutRecordsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "FailedRecordCount" : {
          "documentation" : "<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>",
          "name" : "FailedRecordCount",
          "c2jName" : "FailedRecordCount",
          "c2jShape" : "PositiveIntegerObject",
          "variable" : {
            "variableName" : "failedRecordCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "failedRecordCount",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "FailedRecordCount",
            "marshallLocationName" : "FailedRecordCount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n@param failedRecordCount The number of unsuccessfully processed records in a <code>PutRecords</code> request.*/",
          "getterDocumentation" : "/**<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n@return The number of unsuccessfully processed records in a <code>PutRecords</code> request.*/",
          "fluentSetterDocumentation" : "/**<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n@param failedRecordCount The number of unsuccessfully processed records in a <code>PutRecords</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n@param failedRecordCount The number of unsuccessfully processed records in a <code>PutRecords</code> request.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Records" : {
          "documentation" : "<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>",
          "name" : "Records",
          "c2jName" : "Records",
          "c2jShape" : "PutRecordsResultEntryList",
          "variable" : {
            "variableName" : "records",
            "variableType" : "java.util.List<PutRecordsResultEntry>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<PutRecordsResultEntry>",
            "documentation" : "<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>",
            "simpleType" : "List<PutRecordsResultEntry>",
            "variableSetterType" : "java.util.Collection<PutRecordsResultEntry>"
          },
          "setterModel" : {
            "variableName" : "records",
            "variableType" : "java.util.List<PutRecordsResultEntry>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<PutRecordsResultEntry>",
            "documentation" : "",
            "simpleType" : "List<PutRecordsResultEntry>",
            "variableSetterType" : "java.util.Collection<PutRecordsResultEntry>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<PutRecordsResultEntry>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Records",
            "marshallLocationName" : "Records",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "PutRecordsResultEntry",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "PutRecordsResultEntry",
              "variable" : {
                "variableName" : "member",
                "variableType" : "PutRecordsResultEntry",
                "variableDeclarationType" : "PutRecordsResultEntry",
                "documentation" : "",
                "simpleType" : "PutRecordsResultEntry",
                "variableSetterType" : "PutRecordsResultEntry"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "PutRecordsResultEntry",
                "variableDeclarationType" : "PutRecordsResultEntry",
                "documentation" : "",
                "simpleType" : "PutRecordsResultEntry",
                "variableSetterType" : "PutRecordsResultEntry"
              },
              "getterModel" : {
                "returnType" : "PutRecordsResultEntry",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "PutRecordsResultEntry",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<PutRecordsResultEntry>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<PutRecordsResultEntry>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n@param records An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.*/",
          "getterDocumentation" : "/**<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n@return An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.*/",
          "fluentSetterDocumentation" : "/**<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n@param records An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRecords(java.util.Collection)} or {@link #withRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param records An array of successfully and unsuccessfully processed record results, correlated with the request by natural ordering. A record that is successfully added to your Amazon Kinesis stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to your Amazon Kinesis stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Record" : {
      "c2jName" : "Record",
      "documentation" : "<p>The unit of data of the Amazon Kinesis stream, which is composed of a sequence number, a partition key, and a data blob.</p>",
      "shapeName" : "Record",
      "deprecated" : false,
      "required" : [ "SequenceNumber", "Data", "PartitionKey" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The unique identifier of the record in the stream.</p>",
        "name" : "SequenceNumber",
        "c2jName" : "SequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The unique identifier of the record in the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SequenceNumber",
          "marshallLocationName" : "SequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The unique identifier of the record in the stream.</p>\n@param sequenceNumber The unique identifier of the record in the stream.*/",
        "getterDocumentation" : "/**<p>The unique identifier of the record in the stream.</p>\n@return The unique identifier of the record in the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The unique identifier of the record in the stream.</p>\n@param sequenceNumber The unique identifier of the record in the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The unique identifier of the record in the stream.</p>\n@param sequenceNumber The unique identifier of the record in the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The approximate time that the record was inserted into the stream.</p>",
        "name" : "ApproximateArrivalTimestamp",
        "c2jName" : "ApproximateArrivalTimestamp",
        "c2jShape" : "ApproximateArrivalTimestamp",
        "variable" : {
          "variableName" : "approximateArrivalTimestamp",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The approximate time that the record was inserted into the stream.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "approximateArrivalTimestamp",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ApproximateArrivalTimestamp",
          "marshallLocationName" : "ApproximateArrivalTimestamp",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The approximate time that the record was inserted into the stream.</p>\n@param approximateArrivalTimestamp The approximate time that the record was inserted into the stream.*/",
        "getterDocumentation" : "/**<p>The approximate time that the record was inserted into the stream.</p>\n@return The approximate time that the record was inserted into the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The approximate time that the record was inserted into the stream.</p>\n@param approximateArrivalTimestamp The approximate time that the record was inserted into the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The approximate time that the record was inserted into the stream.</p>\n@param approximateArrivalTimestamp The approximate time that the record was inserted into the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>",
        "name" : "Data",
        "c2jName" : "Data",
        "c2jShape" : "Data",
        "variable" : {
          "variableName" : "data",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "setterModel" : {
          "variableName" : "data",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Data",
          "marshallLocationName" : "Data",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
        "getterDocumentation" : "/**<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
        "fluentSetterDocumentation" : "/**<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Identifies which shard in the stream the data record is assigned to.</p>",
        "name" : "PartitionKey",
        "c2jName" : "PartitionKey",
        "c2jShape" : "PartitionKey",
        "variable" : {
          "variableName" : "partitionKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Identifies which shard in the stream the data record is assigned to.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "partitionKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "PartitionKey",
          "marshallLocationName" : "PartitionKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Identifies which shard in the stream the data record is assigned to.</p>\n@param partitionKey Identifies which shard in the stream the data record is assigned to.*/",
        "getterDocumentation" : "/**<p>Identifies which shard in the stream the data record is assigned to.</p>\n@return Identifies which shard in the stream the data record is assigned to.*/",
        "fluentSetterDocumentation" : "/**<p>Identifies which shard in the stream the data record is assigned to.</p>\n@param partitionKey Identifies which shard in the stream the data record is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Identifies which shard in the stream the data record is assigned to.</p>\n@param partitionKey Identifies which shard in the stream the data record is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "record",
        "variableType" : "Record",
        "variableDeclarationType" : "Record",
        "documentation" : null,
        "simpleType" : "Record",
        "variableSetterType" : "Record"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Data" : {
          "documentation" : "<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>",
          "name" : "Data",
          "c2jName" : "Data",
          "c2jShape" : "Data",
          "variable" : {
            "variableName" : "data",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "setterModel" : {
            "variableName" : "data",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Data",
            "marshallLocationName" : "Data",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
          "getterDocumentation" : "/**<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
          "fluentSetterDocumentation" : "/**<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob. The data in the blob is both opaque and immutable to the Amazon Kinesis service, which does not inspect, interpret, or change the data in the blob in any way. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ApproximateArrivalTimestamp" : {
          "documentation" : "<p>The approximate time that the record was inserted into the stream.</p>",
          "name" : "ApproximateArrivalTimestamp",
          "c2jName" : "ApproximateArrivalTimestamp",
          "c2jShape" : "ApproximateArrivalTimestamp",
          "variable" : {
            "variableName" : "approximateArrivalTimestamp",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The approximate time that the record was inserted into the stream.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "approximateArrivalTimestamp",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ApproximateArrivalTimestamp",
            "marshallLocationName" : "ApproximateArrivalTimestamp",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The approximate time that the record was inserted into the stream.</p>\n@param approximateArrivalTimestamp The approximate time that the record was inserted into the stream.*/",
          "getterDocumentation" : "/**<p>The approximate time that the record was inserted into the stream.</p>\n@return The approximate time that the record was inserted into the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The approximate time that the record was inserted into the stream.</p>\n@param approximateArrivalTimestamp The approximate time that the record was inserted into the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The approximate time that the record was inserted into the stream.</p>\n@param approximateArrivalTimestamp The approximate time that the record was inserted into the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PartitionKey" : {
          "documentation" : "<p>Identifies which shard in the stream the data record is assigned to.</p>",
          "name" : "PartitionKey",
          "c2jName" : "PartitionKey",
          "c2jShape" : "PartitionKey",
          "variable" : {
            "variableName" : "partitionKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Identifies which shard in the stream the data record is assigned to.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "partitionKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "PartitionKey",
            "marshallLocationName" : "PartitionKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Identifies which shard in the stream the data record is assigned to.</p>\n@param partitionKey Identifies which shard in the stream the data record is assigned to.*/",
          "getterDocumentation" : "/**<p>Identifies which shard in the stream the data record is assigned to.</p>\n@return Identifies which shard in the stream the data record is assigned to.*/",
          "fluentSetterDocumentation" : "/**<p>Identifies which shard in the stream the data record is assigned to.</p>\n@param partitionKey Identifies which shard in the stream the data record is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Identifies which shard in the stream the data record is assigned to.</p>\n@param partitionKey Identifies which shard in the stream the data record is assigned to.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SequenceNumber" : {
          "documentation" : "<p>The unique identifier of the record in the stream.</p>",
          "name" : "SequenceNumber",
          "c2jName" : "SequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The unique identifier of the record in the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SequenceNumber",
            "marshallLocationName" : "SequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The unique identifier of the record in the stream.</p>\n@param sequenceNumber The unique identifier of the record in the stream.*/",
          "getterDocumentation" : "/**<p>The unique identifier of the record in the stream.</p>\n@return The unique identifier of the record in the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The unique identifier of the record in the stream.</p>\n@param sequenceNumber The unique identifier of the record in the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The unique identifier of the record in the stream.</p>\n@param sequenceNumber The unique identifier of the record in the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "documentation" : "<p>The requested resource could not be found. The stream might not be specified correctly, or it might not be in the <code>ACTIVE</code> state if the operation requires it.</p>",
      "shapeName" : "ResourceNotFoundException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "variableDeclarationType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "IncreaseStreamRetentionPeriodRequest" : {
      "c2jName" : "IncreaseStreamRetentionPeriodInput",
      "documentation" : "<p>Represents the input for <a>IncreaseStreamRetentionPeriod</a>.</p>",
      "shapeName" : "IncreaseStreamRetentionPeriodRequest",
      "deprecated" : false,
      "required" : [ "StreamName", "RetentionPeriodHours" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the stream to modify.</p>",
        "name" : "StreamName",
        "c2jName" : "StreamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the stream to modify.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamName",
          "marshallLocationName" : "StreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.*/",
        "getterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@return The name of the stream to modify.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>",
        "name" : "RetentionPeriodHours",
        "c2jName" : "RetentionPeriodHours",
        "c2jShape" : "RetentionPeriodHours",
        "variable" : {
          "variableName" : "retentionPeriodHours",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "retentionPeriodHours",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "RetentionPeriodHours",
          "marshallLocationName" : "RetentionPeriodHours",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be more than the current retention period.*/",
        "getterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n@return The new retention period of the stream, in hours. Must be more than the current retention period.*/",
        "fluentSetterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be more than the current retention period.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be more than the current retention period.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "increaseStreamRetentionPeriodRequest",
        "variableType" : "IncreaseStreamRetentionPeriodRequest",
        "variableDeclarationType" : "IncreaseStreamRetentionPeriodRequest",
        "documentation" : null,
        "simpleType" : "IncreaseStreamRetentionPeriodRequest",
        "variableSetterType" : "IncreaseStreamRetentionPeriodRequest"
      },
      "marshaller" : {
        "action" : "IncreaseStreamRetentionPeriod",
        "verb" : "POST",
        "target" : "Kinesis_20131202.IncreaseStreamRetentionPeriod",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RetentionPeriodHours" : {
          "documentation" : "<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>",
          "name" : "RetentionPeriodHours",
          "c2jName" : "RetentionPeriodHours",
          "c2jShape" : "RetentionPeriodHours",
          "variable" : {
            "variableName" : "retentionPeriodHours",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "retentionPeriodHours",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "RetentionPeriodHours",
            "marshallLocationName" : "RetentionPeriodHours",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be more than the current retention period.*/",
          "getterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n@return The new retention period of the stream, in hours. Must be more than the current retention period.*/",
          "fluentSetterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be more than the current retention period.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n@param retentionPeriodHours The new retention period of the stream, in hours. Must be more than the current retention period.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamName" : {
          "documentation" : "<p>The name of the stream to modify.</p>",
          "name" : "StreamName",
          "c2jName" : "StreamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the stream to modify.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamName",
            "marshallLocationName" : "StreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.*/",
          "getterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@return The name of the stream to modify.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the stream to modify.</p>\n@param streamName The name of the stream to modify.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "PutRecordsRequestEntry" : {
      "c2jName" : "PutRecordsRequestEntry",
      "documentation" : "<p>Represents the output for <code>PutRecords</code>.</p>",
      "shapeName" : "PutRecordsRequestEntry",
      "deprecated" : false,
      "required" : [ "Data", "PartitionKey" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>",
        "name" : "Data",
        "c2jName" : "Data",
        "c2jShape" : "Data",
        "variable" : {
          "variableName" : "data",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "setterModel" : {
          "variableName" : "data",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Data",
          "marshallLocationName" : "Data",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
        "getterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
        "fluentSetterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>",
        "name" : "ExplicitHashKey",
        "c2jName" : "ExplicitHashKey",
        "c2jShape" : "HashKey",
        "variable" : {
          "variableName" : "explicitHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "explicitHashKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ExplicitHashKey",
          "marshallLocationName" : "ExplicitHashKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.*/",
        "getterDocumentation" : "/**<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n@return The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.*/",
        "fluentSetterDocumentation" : "/**<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>",
        "name" : "PartitionKey",
        "c2jName" : "PartitionKey",
        "c2jShape" : "PartitionKey",
        "variable" : {
          "variableName" : "partitionKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "partitionKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "PartitionKey",
          "marshallLocationName" : "PartitionKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.*/",
        "getterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>\n@return Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.*/",
        "fluentSetterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putRecordsRequestEntry",
        "variableType" : "PutRecordsRequestEntry",
        "variableDeclarationType" : "PutRecordsRequestEntry",
        "documentation" : null,
        "simpleType" : "PutRecordsRequestEntry",
        "variableSetterType" : "PutRecordsRequestEntry"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Data" : {
          "documentation" : "<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>",
          "name" : "Data",
          "c2jName" : "Data",
          "c2jShape" : "Data",
          "variable" : {
            "variableName" : "data",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "setterModel" : {
            "variableName" : "data",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Data",
            "marshallLocationName" : "Data",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
          "getterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).*/",
          "fluentSetterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n@param data The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ExplicitHashKey" : {
          "documentation" : "<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>",
          "name" : "ExplicitHashKey",
          "c2jName" : "ExplicitHashKey",
          "c2jShape" : "HashKey",
          "variable" : {
            "variableName" : "explicitHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "explicitHashKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ExplicitHashKey",
            "marshallLocationName" : "ExplicitHashKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.*/",
          "getterDocumentation" : "/**<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n@return The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.*/",
          "fluentSetterDocumentation" : "/**<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n@param explicitHashKey The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PartitionKey" : {
          "documentation" : "<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>",
          "name" : "PartitionKey",
          "c2jName" : "PartitionKey",
          "c2jShape" : "PartitionKey",
          "variable" : {
            "variableName" : "partitionKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "partitionKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "PartitionKey",
            "marshallLocationName" : "PartitionKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.*/",
          "getterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>\n@return Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.*/",
          "fluentSetterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.</p>\n@param partitionKey Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ExpiredIteratorException" : {
      "c2jName" : "ExpiredIteratorException",
      "documentation" : "<p>The provided iterator exceeds the maximum age allowed.</p>",
      "shapeName" : "ExpiredIteratorException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "expiredIteratorException",
        "variableType" : "ExpiredIteratorException",
        "variableDeclarationType" : "ExpiredIteratorException",
        "documentation" : null,
        "simpleType" : "ExpiredIteratorException",
        "variableSetterType" : "ExpiredIteratorException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ExpiredIteratorException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InvalidArgumentException" : {
      "c2jName" : "InvalidArgumentException",
      "documentation" : "<p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>",
      "shapeName" : "InvalidArgumentException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidArgumentException",
        "variableType" : "InvalidArgumentException",
        "variableDeclarationType" : "InvalidArgumentException",
        "documentation" : null,
        "simpleType" : "InvalidArgumentException",
        "variableSetterType" : "InvalidArgumentException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidArgumentException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "StreamStatus" : {
      "c2jName" : "StreamStatus",
      "documentation" : "",
      "shapeName" : "StreamStatus",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "CREATING",
        "value" : "CREATING"
      }, {
        "name" : "DELETING",
        "value" : "DELETING"
      }, {
        "name" : "ACTIVE",
        "value" : "ACTIVE"
      }, {
        "name" : "UPDATING",
        "value" : "UPDATING"
      } ],
      "variable" : {
        "variableName" : "streamStatus",
        "variableType" : "StreamStatus",
        "variableDeclarationType" : "StreamStatus",
        "documentation" : null,
        "simpleType" : "StreamStatus",
        "variableSetterType" : "StreamStatus"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "PutRecordResult" : {
      "c2jName" : "PutRecordOutput",
      "documentation" : "<p>Represents the output for <code>PutRecord</code>.</p>",
      "shapeName" : "PutRecordResult",
      "deprecated" : false,
      "required" : [ "ShardId", "SequenceNumber" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The shard ID of the shard where the data record was placed.</p>",
        "name" : "ShardId",
        "c2jName" : "ShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the shard where the data record was placed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardId",
          "marshallLocationName" : "ShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the shard where the data record was placed.</p>\n@param shardId The shard ID of the shard where the data record was placed.*/",
        "getterDocumentation" : "/**<p>The shard ID of the shard where the data record was placed.</p>\n@return The shard ID of the shard where the data record was placed.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the shard where the data record was placed.</p>\n@param shardId The shard ID of the shard where the data record was placed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the shard where the data record was placed.</p>\n@param shardId The shard ID of the shard where the data record was placed.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>",
        "name" : "SequenceNumber",
        "c2jName" : "SequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SequenceNumber",
          "marshallLocationName" : "SequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n@param sequenceNumber The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.*/",
        "getterDocumentation" : "/**<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n@return The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n@param sequenceNumber The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n@param sequenceNumber The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "putRecordResult",
        "variableType" : "PutRecordResult",
        "variableDeclarationType" : "PutRecordResult",
        "documentation" : null,
        "simpleType" : "PutRecordResult",
        "variableSetterType" : "PutRecordResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ShardId" : {
          "documentation" : "<p>The shard ID of the shard where the data record was placed.</p>",
          "name" : "ShardId",
          "c2jName" : "ShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the shard where the data record was placed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardId",
            "marshallLocationName" : "ShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the shard where the data record was placed.</p>\n@param shardId The shard ID of the shard where the data record was placed.*/",
          "getterDocumentation" : "/**<p>The shard ID of the shard where the data record was placed.</p>\n@return The shard ID of the shard where the data record was placed.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the shard where the data record was placed.</p>\n@param shardId The shard ID of the shard where the data record was placed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the shard where the data record was placed.</p>\n@param shardId The shard ID of the shard where the data record was placed.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SequenceNumber" : {
          "documentation" : "<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>",
          "name" : "SequenceNumber",
          "c2jName" : "SequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SequenceNumber",
            "marshallLocationName" : "SequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n@param sequenceNumber The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.*/",
          "getterDocumentation" : "/**<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n@return The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n@param sequenceNumber The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n@param sequenceNumber The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    }
  },
  "customizationConfig" : {
    "requestMetrics" : null,
    "useAutoConstructList" : true,
    "useAutoConstructMap" : true,
    "serviceClientHoldInputStream" : false,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customClientConfiguration" : null,
    "customResponseMetadataClassName" : null,
    "skipInterfaceAdditions" : false,
    "customServiceNameForRequest" : null,
    "requiredParamValidationEnabled" : false,
    "additionalShapeConstructors" : null,
    "simpleMethods" : {
      "CreateStream" : {
        "methodForms" : [ [ "StreamName", "ShardCount" ] ]
      },
      "DeleteStream" : {
        "methodForms" : [ [ "StreamName" ] ]
      },
      "DescribeStream" : {
        "methodForms" : [ [ "StreamName" ], [ "StreamName", "ExclusiveStartShardId" ], [ "StreamName", "Limit", "ExclusiveStartShardId" ] ]
      },
      "ListStreams" : {
        "methodForms" : [ [ ], [ "ExclusiveStartStreamName" ], [ "Limit", "ExclusiveStartStreamName" ] ]
      },
      "MergeShards" : {
        "methodForms" : [ [ "StreamName", "ShardToMerge", "AdjacentShardToMerge" ] ]
      },
      "SplitShard" : {
        "methodForms" : [ [ "StreamName", "ShardToSplit", "NewStartingHashKey" ] ]
      },
      "PutRecord" : {
        "methodForms" : [ [ "StreamName", "Data", "PartitionKey" ], [ "StreamName", "Data", "PartitionKey", "SequenceNumberForOrdering" ] ]
      },
      "GetShardIterator" : {
        "methodForms" : [ [ "StreamName", "ShardId", "ShardIteratorType" ], [ "StreamName", "ShardId", "ShardIteratorType", "StartingSequenceNumber" ] ]
      }
    },
    "authPolicyActions" : {
      "skip" : true,
      "actionPrefix" : null,
      "fileNamePrefix" : null
    },
    "customCodeTemplates" : null,
    "operationModifiers" : null,
    "shapeSubstitutions" : null,
    "shapeModifiers" : null
  },
  "defaultClientConfiguration" : "com.amazonaws.PredefinedClientConfigurations.defaultConfig()"
}