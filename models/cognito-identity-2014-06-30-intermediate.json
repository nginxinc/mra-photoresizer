{
  "metadata" : {
    "apiVersion" : "2014-06-30",
    "exceptionUnmarshallerImpl" : null,
    "protocol" : "json",
    "checksumFormat" : null,
    "documentation" : "<fullname>Amazon Cognito</fullname> <p>Amazon Cognito is a web service that delivers scoped temporary credentials to mobile devices and other untrusted environments. Amazon Cognito uniquely identifies a device and supplies the user with a consistent identity over the lifetime of an application.</p> <p>Using Amazon Cognito, you can enable authentication with one or more third-party identity providers (Facebook, Google, or Login with Amazon), and you can also choose to support unauthenticated access from your app. Cognito delivers a unique identifier for each user and acts as an OpenID token provider trusted by AWS Security Token Service (STS) to access temporary, limited-privilege AWS credentials.</p> <p>To provide end-user credentials, first make an unsigned call to <a>GetId</a>. If the end user is authenticated with one of the supported identity providers, set the <code>Logins</code> map with the identity provider token. <code>GetId</code> returns a unique identifier for the user.</p> <p>Next, make an unsigned call to <a>GetCredentialsForIdentity</a>. This call expects the same <code>Logins</code> map as the <code>GetId</code> call, as well as the <code>IdentityID</code> originally returned by <code>GetId</code>. Assuming your identity pool has been configured via the <a>SetIdentityPoolRoles</a> operation, <code>GetCredentialsForIdentity</code> will return AWS credentials for your use. If your pool has not been configured with <code>SetIdentityPoolRoles</code>, or if you want to follow legacy flow, make an unsigned call to <a>GetOpenIdToken</a>, which returns the OpenID token necessary to call STS and retrieve AWS credentials. This call expects the same <code>Logins</code> map as the <code>GetId</code> call, as well as the <code>IdentityID</code> originally returned by <code>GetId</code>. The token returned by <code>GetOpenIdToken</code> can be passed to the STS operation <a href=\"http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html\">AssumeRoleWithWebIdentity</a> to retrieve AWS credentials.</p> <p>If you want to use Amazon Cognito in an Android, iOS, or Unity application, you will probably want to make API calls via the AWS Mobile SDK. To learn more, see the <a href=\"http://docs.aws.amazon.com/mobile/index.html\">AWS Mobile SDK Developer Guide</a>.</p>",
    "defaultEndpoint" : "https://cognito-identity.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "cognito-identity.us-east-1.amazonaws.com",
    "syncInterface" : "AmazonCognitoIdentity",
    "syncClient" : "AmazonCognitoIdentityClient",
    "asyncInterface" : "AmazonCognitoIdentityAsync",
    "asyncClient" : "AmazonCognitoIdentityAsyncClient",
    "packageName" : "com.amazonaws.services.cognitoidentity",
    "packagePath" : "com/amazonaws/services/cognitoidentity",
    "serviceAbbreviation" : null,
    "serviceFullName" : "Amazon Cognito Identity",
    "hasApiWithStreamInput" : false,
    "jsonContentVersion" : "application/x-amz-json-1.1",
    "endpointPrefix" : "cognito-identity",
    "signingName" : "cognito-identity",
    "serviceName" : "Amazon Cognito Identity",
    "jsonProtocol" : true,
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "protocolDefaultExceptionUnmarshallerType" : "JsonErrorUnmarshaller"
  },
  "operations" : {
    "CreateIdentityPool" : {
      "documentation" : "<p>Creates a new identity pool. The identity pool is a store of user identity information that is specific to your AWS account. The limit on identity pools is 60 per account. The keys for <code>SupportedLoginProviders</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "CreateIdentityPool",
      "deprecated" : false,
      "input" : {
        "variableName" : "createIdentityPoolRequest",
        "variableType" : "CreateIdentityPoolRequest",
        "variableDeclarationType" : "CreateIdentityPoolRequest",
        "documentation" : "<p>Input to the CreateIdentityPool action.</p>",
        "simpleType" : "CreateIdentityPoolRequest",
        "variableSetterType" : "CreateIdentityPoolRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreateIdentityPoolResult",
        "documentation" : "An object representing a Cognito identity pool."
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "Thrown when the total number of user pools has exceeded a preset limit."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a new identity pool. The identity pool is a store of user identity information that is specific to your AWS account. The limit on identity pools is 60 per account. The keys for <code>SupportedLoginProviders</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> You must use AWS Developer credentials to call this API.</p>\n@param createIdentityPoolRequest Input to the CreateIdentityPool action.\n@return Result of the CreateIdentityPool operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.\n@throws LimitExceededException Thrown when the total number of user pools has exceeded a preset limit.*/",
      "asyncDocumentation" : "/**<p>Creates a new identity pool. The identity pool is a store of user identity information that is specific to your AWS account. The limit on identity pools is 60 per account. The keys for <code>SupportedLoginProviders</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> You must use AWS Developer credentials to call this API.</p>\n@param createIdentityPoolRequest Input to the CreateIdentityPool action.\n@return A Java Future containing the result of the CreateIdentityPool operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a new identity pool. The identity pool is a store of user identity information that is specific to your AWS account. The limit on identity pools is 60 per account. The keys for <code>SupportedLoginProviders</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> You must use AWS Developer credentials to call this API.</p>\n@param createIdentityPoolRequest Input to the CreateIdentityPool action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreateIdentityPool operation returned by the service.*/",
      "syncReturnType" : "CreateIdentityPoolResult",
      "asyncReturnType" : "CreateIdentityPoolResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreateIdentityPoolResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreateIdentityPoolResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateIdentityPoolRequest, CreateIdentityPoolResult>",
      "methodName" : "createIdentityPool"
    },
    "DeleteIdentities" : {
      "documentation" : "<p>Deletes identities from an identity pool. You can specify a list of 1-60 identities that you want to delete.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "DeleteIdentities",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteIdentitiesRequest",
        "variableType" : "DeleteIdentitiesRequest",
        "variableDeclarationType" : "DeleteIdentitiesRequest",
        "documentation" : "<p>Input to the <code>DeleteIdentities</code> action.</p>",
        "simpleType" : "DeleteIdentitiesRequest",
        "variableSetterType" : "DeleteIdentitiesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteIdentitiesResult",
        "documentation" : "<p>Returned in response to a successful <code>DeleteIdentities</code> operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes identities from an identity pool. You can specify a list of 1-60 identities that you want to delete.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param deleteIdentitiesRequest Input to the <code>DeleteIdentities</code> action.\n@return Result of the DeleteIdentities operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Deletes identities from an identity pool. You can specify a list of 1-60 identities that you want to delete.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param deleteIdentitiesRequest Input to the <code>DeleteIdentities</code> action.\n@return A Java Future containing the result of the DeleteIdentities operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes identities from an identity pool. You can specify a list of 1-60 identities that you want to delete.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param deleteIdentitiesRequest Input to the <code>DeleteIdentities</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DeleteIdentities operation returned by the service.*/",
      "syncReturnType" : "DeleteIdentitiesResult",
      "asyncReturnType" : "DeleteIdentitiesResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteIdentitiesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteIdentitiesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteIdentitiesRequest, DeleteIdentitiesResult>",
      "methodName" : "deleteIdentities"
    },
    "DeleteIdentityPool" : {
      "documentation" : "<p>Deletes a user pool. Once a pool is deleted, users will not be able to authenticate with the pool.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "DeleteIdentityPool",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteIdentityPoolRequest",
        "variableType" : "DeleteIdentityPoolRequest",
        "variableDeclarationType" : "DeleteIdentityPoolRequest",
        "documentation" : "<p>Input to the DeleteIdentityPool action.</p>",
        "simpleType" : "DeleteIdentityPoolRequest",
        "variableSetterType" : "DeleteIdentityPoolRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes a user pool. Once a pool is deleted, users will not be able to authenticate with the pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param deleteIdentityPoolRequest Input to the DeleteIdentityPool action.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Deletes a user pool. Once a pool is deleted, users will not be able to authenticate with the pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param deleteIdentityPoolRequest Input to the DeleteIdentityPool action.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes a user pool. Once a pool is deleted, users will not be able to authenticate with the pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param deleteIdentityPoolRequest Input to the DeleteIdentityPool action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteIdentityPoolRequest, Void>",
      "methodName" : "deleteIdentityPool"
    },
    "DescribeIdentity" : {
      "documentation" : "<p>Returns metadata related to the given identity, including when the identity was created and any associated linked logins.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "DescribeIdentity",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeIdentityRequest",
        "variableType" : "DescribeIdentityRequest",
        "variableDeclarationType" : "DescribeIdentityRequest",
        "documentation" : "<p>Input to the <code>DescribeIdentity</code> action.</p>",
        "simpleType" : "DescribeIdentityRequest",
        "variableSetterType" : "DescribeIdentityRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeIdentityResult",
        "documentation" : "A description of the identity."
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Returns metadata related to the given identity, including when the identity was created and any associated linked logins.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param describeIdentityRequest Input to the <code>DescribeIdentity</code> action.\n@return Result of the DescribeIdentity operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Returns metadata related to the given identity, including when the identity was created and any associated linked logins.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param describeIdentityRequest Input to the <code>DescribeIdentity</code> action.\n@return A Java Future containing the result of the DescribeIdentity operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Returns metadata related to the given identity, including when the identity was created and any associated linked logins.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param describeIdentityRequest Input to the <code>DescribeIdentity</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeIdentity operation returned by the service.*/",
      "syncReturnType" : "DescribeIdentityResult",
      "asyncReturnType" : "DescribeIdentityResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeIdentityResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeIdentityResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeIdentityRequest, DescribeIdentityResult>",
      "methodName" : "describeIdentity"
    },
    "DescribeIdentityPool" : {
      "documentation" : "<p>Gets details about a particular identity pool, including the pool name, ID description, creation date, and current number of users.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "DescribeIdentityPool",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeIdentityPoolRequest",
        "variableType" : "DescribeIdentityPoolRequest",
        "variableDeclarationType" : "DescribeIdentityPoolRequest",
        "documentation" : "Input to the DescribeIdentityPool action.",
        "simpleType" : "DescribeIdentityPoolRequest",
        "variableSetterType" : "DescribeIdentityPoolRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeIdentityPoolResult",
        "documentation" : "An object representing a Cognito identity pool."
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets details about a particular identity pool, including the pool name, ID description, creation date, and current number of users.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param describeIdentityPoolRequest Input to the DescribeIdentityPool action.\n@return Result of the DescribeIdentityPool operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Gets details about a particular identity pool, including the pool name, ID description, creation date, and current number of users.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param describeIdentityPoolRequest Input to the DescribeIdentityPool action.\n@return A Java Future containing the result of the DescribeIdentityPool operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets details about a particular identity pool, including the pool name, ID description, creation date, and current number of users.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param describeIdentityPoolRequest Input to the DescribeIdentityPool action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeIdentityPool operation returned by the service.*/",
      "syncReturnType" : "DescribeIdentityPoolResult",
      "asyncReturnType" : "DescribeIdentityPoolResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeIdentityPoolResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeIdentityPoolResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeIdentityPoolRequest, DescribeIdentityPoolResult>",
      "methodName" : "describeIdentityPool"
    },
    "GetCredentialsForIdentity" : {
      "documentation" : "<p>Returns credentials for the provided identity ID. Any provided logins will be validated against supported login providers. If the token is for cognito-identity.amazonaws.com, it will be passed through to AWS Security Token Service with the appropriate role for the token.</p> <p>This is a public API. You do not need any credentials to call this API.</p>",
      "operationName" : "GetCredentialsForIdentity",
      "deprecated" : false,
      "input" : {
        "variableName" : "getCredentialsForIdentityRequest",
        "variableType" : "GetCredentialsForIdentityRequest",
        "variableDeclarationType" : "GetCredentialsForIdentityRequest",
        "documentation" : "<p>Input to the <code>GetCredentialsForIdentity</code> action.</p>",
        "simpleType" : "GetCredentialsForIdentityRequest",
        "variableSetterType" : "GetCredentialsForIdentityRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetCredentialsForIdentityResult",
        "documentation" : "<p>Returned in response to a successful <code>GetCredentialsForIdentity</code> operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InvalidIdentityPoolConfigurationException",
        "documentation" : "<p>Thrown if the identity pool has no role associated for the given auth type (auth/unauth) or if the AssumeRole fails.</p>"
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      }, {
        "exceptionName" : "ExternalServiceException",
        "documentation" : "<p>An exception thrown when a dependent service such as Facebook or Twitter is not responding</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Returns credentials for the provided identity ID. Any provided logins will be validated against supported login providers. If the token is for cognito-identity.amazonaws.com, it will be passed through to AWS Security Token Service with the appropriate role for the token.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getCredentialsForIdentityRequest Input to the <code>GetCredentialsForIdentity</code> action.\n@return Result of the GetCredentialsForIdentity operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InvalidIdentityPoolConfigurationException Thrown if the identity pool has no role associated for the given auth type (auth/unauth) or if the AssumeRole fails.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.\n@throws ExternalServiceException An exception thrown when a dependent service such as Facebook or Twitter is not responding*/",
      "asyncDocumentation" : "/**<p>Returns credentials for the provided identity ID. Any provided logins will be validated against supported login providers. If the token is for cognito-identity.amazonaws.com, it will be passed through to AWS Security Token Service with the appropriate role for the token.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getCredentialsForIdentityRequest Input to the <code>GetCredentialsForIdentity</code> action.\n@return A Java Future containing the result of the GetCredentialsForIdentity operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Returns credentials for the provided identity ID. Any provided logins will be validated against supported login providers. If the token is for cognito-identity.amazonaws.com, it will be passed through to AWS Security Token Service with the appropriate role for the token.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getCredentialsForIdentityRequest Input to the <code>GetCredentialsForIdentity</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetCredentialsForIdentity operation returned by the service.*/",
      "syncReturnType" : "GetCredentialsForIdentityResult",
      "asyncReturnType" : "GetCredentialsForIdentityResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetCredentialsForIdentityResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetCredentialsForIdentityResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetCredentialsForIdentityRequest, GetCredentialsForIdentityResult>",
      "methodName" : "getCredentialsForIdentity"
    },
    "GetId" : {
      "documentation" : "<p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit linked account.</p> <p>This is a public API. You do not need any credentials to call this API.</p>",
      "operationName" : "GetId",
      "deprecated" : false,
      "input" : {
        "variableName" : "getIdRequest",
        "variableType" : "GetIdRequest",
        "variableDeclarationType" : "GetIdRequest",
        "documentation" : "Input to the GetId action.",
        "simpleType" : "GetIdRequest",
        "variableSetterType" : "GetIdRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetIdResult",
        "documentation" : "Returned in response to a GetId request."
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "Thrown when the total number of user pools has exceeded a preset limit."
      }, {
        "exceptionName" : "ExternalServiceException",
        "documentation" : "<p>An exception thrown when a dependent service such as Facebook or Twitter is not responding</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit linked account.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getIdRequest Input to the GetId action.\n@return Result of the GetId operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.\n@throws LimitExceededException Thrown when the total number of user pools has exceeded a preset limit.\n@throws ExternalServiceException An exception thrown when a dependent service such as Facebook or Twitter is not responding*/",
      "asyncDocumentation" : "/**<p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit linked account.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getIdRequest Input to the GetId action.\n@return A Java Future containing the result of the GetId operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Generates (or retrieves) a Cognito ID. Supplying multiple logins will create an implicit linked account.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getIdRequest Input to the GetId action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetId operation returned by the service.*/",
      "syncReturnType" : "GetIdResult",
      "asyncReturnType" : "GetIdResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetIdResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetIdResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetIdRequest, GetIdResult>",
      "methodName" : "getId"
    },
    "GetIdentityPoolRoles" : {
      "documentation" : "<p>Gets the roles for an identity pool.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "GetIdentityPoolRoles",
      "deprecated" : false,
      "input" : {
        "variableName" : "getIdentityPoolRolesRequest",
        "variableType" : "GetIdentityPoolRolesRequest",
        "variableDeclarationType" : "GetIdentityPoolRolesRequest",
        "documentation" : "<p>Input to the <code>GetIdentityPoolRoles</code> action.</p>",
        "simpleType" : "GetIdentityPoolRolesRequest",
        "variableSetterType" : "GetIdentityPoolRolesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetIdentityPoolRolesResult",
        "documentation" : "<p>Returned in response to a successful <code>GetIdentityPoolRoles</code> operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets the roles for an identity pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param getIdentityPoolRolesRequest Input to the <code>GetIdentityPoolRoles</code> action.\n@return Result of the GetIdentityPoolRoles operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Gets the roles for an identity pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param getIdentityPoolRolesRequest Input to the <code>GetIdentityPoolRoles</code> action.\n@return A Java Future containing the result of the GetIdentityPoolRoles operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets the roles for an identity pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param getIdentityPoolRolesRequest Input to the <code>GetIdentityPoolRoles</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetIdentityPoolRoles operation returned by the service.*/",
      "syncReturnType" : "GetIdentityPoolRolesResult",
      "asyncReturnType" : "GetIdentityPoolRolesResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetIdentityPoolRolesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetIdentityPoolRolesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetIdentityPoolRolesRequest, GetIdentityPoolRolesResult>",
      "methodName" : "getIdentityPoolRoles"
    },
    "GetOpenIdToken" : {
      "documentation" : "<p>Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned by <a>GetId</a>. You can optionally add additional logins for the identity. Supplying multiple logins creates an implicit link.</p> <p>The OpenId token is valid for 15 minutes.</p> <p>This is a public API. You do not need any credentials to call this API.</p>",
      "operationName" : "GetOpenIdToken",
      "deprecated" : false,
      "input" : {
        "variableName" : "getOpenIdTokenRequest",
        "variableType" : "GetOpenIdTokenRequest",
        "variableDeclarationType" : "GetOpenIdTokenRequest",
        "documentation" : "Input to the GetOpenIdToken action.",
        "simpleType" : "GetOpenIdTokenRequest",
        "variableSetterType" : "GetOpenIdTokenRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetOpenIdTokenResult",
        "documentation" : "Returned in response to a successful GetOpenIdToken request."
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      }, {
        "exceptionName" : "ExternalServiceException",
        "documentation" : "<p>An exception thrown when a dependent service such as Facebook or Twitter is not responding</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned by <a>GetId</a>. You can optionally add additional logins for the identity. Supplying multiple logins creates an implicit link.</p> <p>The OpenId token is valid for 15 minutes.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getOpenIdTokenRequest Input to the GetOpenIdToken action.\n@return Result of the GetOpenIdToken operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.\n@throws ExternalServiceException An exception thrown when a dependent service such as Facebook or Twitter is not responding*/",
      "asyncDocumentation" : "/**<p>Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned by <a>GetId</a>. You can optionally add additional logins for the identity. Supplying multiple logins creates an implicit link.</p> <p>The OpenId token is valid for 15 minutes.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getOpenIdTokenRequest Input to the GetOpenIdToken action.\n@return A Java Future containing the result of the GetOpenIdToken operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets an OpenID token, using a known Cognito ID. This known Cognito ID is returned by <a>GetId</a>. You can optionally add additional logins for the identity. Supplying multiple logins creates an implicit link.</p> <p>The OpenId token is valid for 15 minutes.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param getOpenIdTokenRequest Input to the GetOpenIdToken action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetOpenIdToken operation returned by the service.*/",
      "syncReturnType" : "GetOpenIdTokenResult",
      "asyncReturnType" : "GetOpenIdTokenResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetOpenIdTokenResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetOpenIdTokenResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetOpenIdTokenRequest, GetOpenIdTokenResult>",
      "methodName" : "getOpenIdToken"
    },
    "GetOpenIdTokenForDeveloperIdentity" : {
      "documentation" : "<p>Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID Connect token for a user authenticated by your backend authentication process. Supplying multiple logins will create an implicit linked account. You can only specify one developer provider as part of the <code>Logins</code> map, which is linked to the identity pool. The developer provider is the \"domain\" by which Cognito will refer to your users.</p> <p>You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a new identity and to link new logins (that is, user credentials issued by a public provider or developer provider) to an existing identity. When you want to create a new identity, the <code>IdentityId</code> should be null. When you want to associate a new login with an existing authenticated/unauthenticated identity, you can do so by providing the existing <code>IdentityId</code>. This API will create the identity in the specified <code>IdentityPoolId</code>.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "GetOpenIdTokenForDeveloperIdentity",
      "deprecated" : false,
      "input" : {
        "variableName" : "getOpenIdTokenForDeveloperIdentityRequest",
        "variableType" : "GetOpenIdTokenForDeveloperIdentityRequest",
        "variableDeclarationType" : "GetOpenIdTokenForDeveloperIdentityRequest",
        "documentation" : "<p>Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.</p>",
        "simpleType" : "GetOpenIdTokenForDeveloperIdentityRequest",
        "variableSetterType" : "GetOpenIdTokenForDeveloperIdentityRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetOpenIdTokenForDeveloperIdentityResult",
        "documentation" : "<p>Returned in response to a successful <code>GetOpenIdTokenForDeveloperIdentity</code> request.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      }, {
        "exceptionName" : "DeveloperUserAlreadyRegisteredException",
        "documentation" : "<p>The provided developer user identifier is already registered with Cognito under a different identity ID.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID Connect token for a user authenticated by your backend authentication process. Supplying multiple logins will create an implicit linked account. You can only specify one developer provider as part of the <code>Logins</code> map, which is linked to the identity pool. The developer provider is the \"domain\" by which Cognito will refer to your users.</p> <p>You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a new identity and to link new logins (that is, user credentials issued by a public provider or developer provider) to an existing identity. When you want to create a new identity, the <code>IdentityId</code> should be null. When you want to associate a new login with an existing authenticated/unauthenticated identity, you can do so by providing the existing <code>IdentityId</code>. This API will create the identity in the specified <code>IdentityPoolId</code>.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param getOpenIdTokenForDeveloperIdentityRequest Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.\n@return Result of the GetOpenIdTokenForDeveloperIdentity operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.\n@throws DeveloperUserAlreadyRegisteredException The provided developer user identifier is already registered with Cognito under a different identity ID.*/",
      "asyncDocumentation" : "/**<p>Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID Connect token for a user authenticated by your backend authentication process. Supplying multiple logins will create an implicit linked account. You can only specify one developer provider as part of the <code>Logins</code> map, which is linked to the identity pool. The developer provider is the \"domain\" by which Cognito will refer to your users.</p> <p>You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a new identity and to link new logins (that is, user credentials issued by a public provider or developer provider) to an existing identity. When you want to create a new identity, the <code>IdentityId</code> should be null. When you want to associate a new login with an existing authenticated/unauthenticated identity, you can do so by providing the existing <code>IdentityId</code>. This API will create the identity in the specified <code>IdentityPoolId</code>.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param getOpenIdTokenForDeveloperIdentityRequest Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.\n@return A Java Future containing the result of the GetOpenIdTokenForDeveloperIdentity operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Registers (or retrieves) a Cognito <code>IdentityId</code> and an OpenID Connect token for a user authenticated by your backend authentication process. Supplying multiple logins will create an implicit linked account. You can only specify one developer provider as part of the <code>Logins</code> map, which is linked to the identity pool. The developer provider is the \"domain\" by which Cognito will refer to your users.</p> <p>You can use <code>GetOpenIdTokenForDeveloperIdentity</code> to create a new identity and to link new logins (that is, user credentials issued by a public provider or developer provider) to an existing identity. When you want to create a new identity, the <code>IdentityId</code> should be null. When you want to associate a new login with an existing authenticated/unauthenticated identity, you can do so by providing the existing <code>IdentityId</code>. This API will create the identity in the specified <code>IdentityPoolId</code>.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param getOpenIdTokenForDeveloperIdentityRequest Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetOpenIdTokenForDeveloperIdentity operation returned by the service.*/",
      "syncReturnType" : "GetOpenIdTokenForDeveloperIdentityResult",
      "asyncReturnType" : "GetOpenIdTokenForDeveloperIdentityResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetOpenIdTokenForDeveloperIdentityResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetOpenIdTokenForDeveloperIdentityResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetOpenIdTokenForDeveloperIdentityRequest, GetOpenIdTokenForDeveloperIdentityResult>",
      "methodName" : "getOpenIdTokenForDeveloperIdentity"
    },
    "ListIdentities" : {
      "documentation" : "<p>Lists the identities in a pool.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "ListIdentities",
      "deprecated" : false,
      "input" : {
        "variableName" : "listIdentitiesRequest",
        "variableType" : "ListIdentitiesRequest",
        "variableDeclarationType" : "ListIdentitiesRequest",
        "documentation" : "Input to the ListIdentities action.",
        "simpleType" : "ListIdentitiesRequest",
        "variableSetterType" : "ListIdentitiesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListIdentitiesResult",
        "documentation" : "The response to a ListIdentities request."
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists the identities in a pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param listIdentitiesRequest Input to the ListIdentities action.\n@return Result of the ListIdentities operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Lists the identities in a pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param listIdentitiesRequest Input to the ListIdentities action.\n@return A Java Future containing the result of the ListIdentities operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists the identities in a pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param listIdentitiesRequest Input to the ListIdentities action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListIdentities operation returned by the service.*/",
      "syncReturnType" : "ListIdentitiesResult",
      "asyncReturnType" : "ListIdentitiesResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListIdentitiesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListIdentitiesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListIdentitiesRequest, ListIdentitiesResult>",
      "methodName" : "listIdentities"
    },
    "ListIdentityPools" : {
      "documentation" : "<p>Lists all of the Cognito identity pools registered for your account.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "ListIdentityPools",
      "deprecated" : false,
      "input" : {
        "variableName" : "listIdentityPoolsRequest",
        "variableType" : "ListIdentityPoolsRequest",
        "variableDeclarationType" : "ListIdentityPoolsRequest",
        "documentation" : "Input to the ListIdentityPools action.",
        "simpleType" : "ListIdentityPoolsRequest",
        "variableSetterType" : "ListIdentityPoolsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListIdentityPoolsResult",
        "documentation" : "The result of a successful ListIdentityPools action."
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists all of the Cognito identity pools registered for your account.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param listIdentityPoolsRequest Input to the ListIdentityPools action.\n@return Result of the ListIdentityPools operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Lists all of the Cognito identity pools registered for your account.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param listIdentityPoolsRequest Input to the ListIdentityPools action.\n@return A Java Future containing the result of the ListIdentityPools operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists all of the Cognito identity pools registered for your account.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param listIdentityPoolsRequest Input to the ListIdentityPools action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListIdentityPools operation returned by the service.*/",
      "syncReturnType" : "ListIdentityPoolsResult",
      "asyncReturnType" : "ListIdentityPoolsResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListIdentityPoolsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListIdentityPoolsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListIdentityPoolsRequest, ListIdentityPoolsResult>",
      "methodName" : "listIdentityPools"
    },
    "LookupDeveloperIdentity" : {
      "documentation" : "<p>Retrieves the <code>IdentityID</code> associated with a <code>DeveloperUserIdentifier</code> or the list of <code>DeveloperUserIdentifier</code>s associated with an <code>IdentityId</code> for an existing identity. Either <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be null. If you supply only one of these values, the other value will be searched in the database and returned as a part of the response. If you supply both, <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>. If the values are verified against the database, the response returns both values and is the same as the request. Otherwise a <code>ResourceConflictException</code> is thrown.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "LookupDeveloperIdentity",
      "deprecated" : false,
      "input" : {
        "variableName" : "lookupDeveloperIdentityRequest",
        "variableType" : "LookupDeveloperIdentityRequest",
        "variableDeclarationType" : "LookupDeveloperIdentityRequest",
        "documentation" : "<p>Input to the <code>LookupDeveloperIdentityInput</code> action.</p>",
        "simpleType" : "LookupDeveloperIdentityRequest",
        "variableSetterType" : "LookupDeveloperIdentityRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "LookupDeveloperIdentityResult",
        "documentation" : "<p>Returned in response to a successful <code>LookupDeveloperIdentity</code> action.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Retrieves the <code>IdentityID</code> associated with a <code>DeveloperUserIdentifier</code> or the list of <code>DeveloperUserIdentifier</code>s associated with an <code>IdentityId</code> for an existing identity. Either <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be null. If you supply only one of these values, the other value will be searched in the database and returned as a part of the response. If you supply both, <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>. If the values are verified against the database, the response returns both values and is the same as the request. Otherwise a <code>ResourceConflictException</code> is thrown.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param lookupDeveloperIdentityRequest Input to the <code>LookupDeveloperIdentityInput</code> action.\n@return Result of the LookupDeveloperIdentity operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Retrieves the <code>IdentityID</code> associated with a <code>DeveloperUserIdentifier</code> or the list of <code>DeveloperUserIdentifier</code>s associated with an <code>IdentityId</code> for an existing identity. Either <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be null. If you supply only one of these values, the other value will be searched in the database and returned as a part of the response. If you supply both, <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>. If the values are verified against the database, the response returns both values and is the same as the request. Otherwise a <code>ResourceConflictException</code> is thrown.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param lookupDeveloperIdentityRequest Input to the <code>LookupDeveloperIdentityInput</code> action.\n@return A Java Future containing the result of the LookupDeveloperIdentity operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Retrieves the <code>IdentityID</code> associated with a <code>DeveloperUserIdentifier</code> or the list of <code>DeveloperUserIdentifier</code>s associated with an <code>IdentityId</code> for an existing identity. Either <code>IdentityID</code> or <code>DeveloperUserIdentifier</code> must not be null. If you supply only one of these values, the other value will be searched in the database and returned as a part of the response. If you supply both, <code>DeveloperUserIdentifier</code> will be matched against <code>IdentityID</code>. If the values are verified against the database, the response returns both values and is the same as the request. Otherwise a <code>ResourceConflictException</code> is thrown.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param lookupDeveloperIdentityRequest Input to the <code>LookupDeveloperIdentityInput</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the LookupDeveloperIdentity operation returned by the service.*/",
      "syncReturnType" : "LookupDeveloperIdentityResult",
      "asyncReturnType" : "LookupDeveloperIdentityResult",
      "asyncFutureType" : "java.util.concurrent.Future<LookupDeveloperIdentityResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<LookupDeveloperIdentityResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<LookupDeveloperIdentityRequest, LookupDeveloperIdentityResult>",
      "methodName" : "lookupDeveloperIdentity"
    },
    "MergeDeveloperIdentities" : {
      "documentation" : "<p>Merges two users having different <code>IdentityId</code>s, existing in the same identity pool, and identified by the same developer provider. You can use this action to request that discrete users be merged and identified as a single user in the Cognito environment. Cognito associates the given source user (<code>SourceUserIdentifier</code>) with the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>. Only developer-authenticated users can be merged. If the users to be merged are associated with the same public provider, but as two different users, an exception will be thrown.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "MergeDeveloperIdentities",
      "deprecated" : false,
      "input" : {
        "variableName" : "mergeDeveloperIdentitiesRequest",
        "variableType" : "MergeDeveloperIdentitiesRequest",
        "variableDeclarationType" : "MergeDeveloperIdentitiesRequest",
        "documentation" : "<p>Input to the <code>MergeDeveloperIdentities</code> action.</p>",
        "simpleType" : "MergeDeveloperIdentitiesRequest",
        "variableSetterType" : "MergeDeveloperIdentitiesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "MergeDeveloperIdentitiesResult",
        "documentation" : "<p>Returned in response to a successful <code>MergeDeveloperIdentities</code> action.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Merges two users having different <code>IdentityId</code>s, existing in the same identity pool, and identified by the same developer provider. You can use this action to request that discrete users be merged and identified as a single user in the Cognito environment. Cognito associates the given source user (<code>SourceUserIdentifier</code>) with the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>. Only developer-authenticated users can be merged. If the users to be merged are associated with the same public provider, but as two different users, an exception will be thrown.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param mergeDeveloperIdentitiesRequest Input to the <code>MergeDeveloperIdentities</code> action.\n@return Result of the MergeDeveloperIdentities operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Merges two users having different <code>IdentityId</code>s, existing in the same identity pool, and identified by the same developer provider. You can use this action to request that discrete users be merged and identified as a single user in the Cognito environment. Cognito associates the given source user (<code>SourceUserIdentifier</code>) with the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>. Only developer-authenticated users can be merged. If the users to be merged are associated with the same public provider, but as two different users, an exception will be thrown.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param mergeDeveloperIdentitiesRequest Input to the <code>MergeDeveloperIdentities</code> action.\n@return A Java Future containing the result of the MergeDeveloperIdentities operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Merges two users having different <code>IdentityId</code>s, existing in the same identity pool, and identified by the same developer provider. You can use this action to request that discrete users be merged and identified as a single user in the Cognito environment. Cognito associates the given source user (<code>SourceUserIdentifier</code>) with the <code>IdentityId</code> of the <code>DestinationUserIdentifier</code>. Only developer-authenticated users can be merged. If the users to be merged are associated with the same public provider, but as two different users, an exception will be thrown.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param mergeDeveloperIdentitiesRequest Input to the <code>MergeDeveloperIdentities</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the MergeDeveloperIdentities operation returned by the service.*/",
      "syncReturnType" : "MergeDeveloperIdentitiesResult",
      "asyncReturnType" : "MergeDeveloperIdentitiesResult",
      "asyncFutureType" : "java.util.concurrent.Future<MergeDeveloperIdentitiesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<MergeDeveloperIdentitiesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<MergeDeveloperIdentitiesRequest, MergeDeveloperIdentitiesResult>",
      "methodName" : "mergeDeveloperIdentities"
    },
    "SetIdentityPoolRoles" : {
      "documentation" : "<p>Sets the roles for an identity pool. These roles are used when making calls to <code>GetCredentialsForIdentity</code> action.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "SetIdentityPoolRoles",
      "deprecated" : false,
      "input" : {
        "variableName" : "setIdentityPoolRolesRequest",
        "variableType" : "SetIdentityPoolRolesRequest",
        "variableDeclarationType" : "SetIdentityPoolRolesRequest",
        "documentation" : "<p>Input to the <code>SetIdentityPoolRoles</code> action.</p>",
        "simpleType" : "SetIdentityPoolRolesRequest",
        "variableSetterType" : "SetIdentityPoolRolesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      }, {
        "exceptionName" : "ConcurrentModificationException",
        "documentation" : "<p>Thrown if there are parallel requests to modify a resource.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Sets the roles for an identity pool. These roles are used when making calls to <code>GetCredentialsForIdentity</code> action.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param setIdentityPoolRolesRequest Input to the <code>SetIdentityPoolRoles</code> action.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.\n@throws ConcurrentModificationException Thrown if there are parallel requests to modify a resource.*/",
      "asyncDocumentation" : "/**<p>Sets the roles for an identity pool. These roles are used when making calls to <code>GetCredentialsForIdentity</code> action.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param setIdentityPoolRolesRequest Input to the <code>SetIdentityPoolRoles</code> action.*/",
      "asyncDocumentationWithHandler" : "/**<p>Sets the roles for an identity pool. These roles are used when making calls to <code>GetCredentialsForIdentity</code> action.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param setIdentityPoolRolesRequest Input to the <code>SetIdentityPoolRoles</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SetIdentityPoolRolesRequest, Void>",
      "methodName" : "setIdentityPoolRoles"
    },
    "UnlinkDeveloperIdentity" : {
      "documentation" : "<p>Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity. Unlinked developer users will be considered new identities next time they are seen. If, for a given Cognito identity, you remove all federated identities as well as the developer user identifier, the Cognito identity becomes inaccessible.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "UnlinkDeveloperIdentity",
      "deprecated" : false,
      "input" : {
        "variableName" : "unlinkDeveloperIdentityRequest",
        "variableType" : "UnlinkDeveloperIdentityRequest",
        "variableDeclarationType" : "UnlinkDeveloperIdentityRequest",
        "documentation" : "<p>Input to the <code>UnlinkDeveloperIdentity</code> action.</p>",
        "simpleType" : "UnlinkDeveloperIdentityRequest",
        "variableSetterType" : "UnlinkDeveloperIdentityRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity. Unlinked developer users will be considered new identities next time they are seen. If, for a given Cognito identity, you remove all federated identities as well as the developer user identifier, the Cognito identity becomes inaccessible.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param unlinkDeveloperIdentityRequest Input to the <code>UnlinkDeveloperIdentity</code> action.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.*/",
      "asyncDocumentation" : "/**<p>Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity. Unlinked developer users will be considered new identities next time they are seen. If, for a given Cognito identity, you remove all federated identities as well as the developer user identifier, the Cognito identity becomes inaccessible.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param unlinkDeveloperIdentityRequest Input to the <code>UnlinkDeveloperIdentity</code> action.*/",
      "asyncDocumentationWithHandler" : "/**<p>Unlinks a <code>DeveloperUserIdentifier</code> from an existing identity. Unlinked developer users will be considered new identities next time they are seen. If, for a given Cognito identity, you remove all federated identities as well as the developer user identifier, the Cognito identity becomes inaccessible.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param unlinkDeveloperIdentityRequest Input to the <code>UnlinkDeveloperIdentity</code> action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UnlinkDeveloperIdentityRequest, Void>",
      "methodName" : "unlinkDeveloperIdentity"
    },
    "UnlinkIdentity" : {
      "documentation" : "<p>Unlinks a federated identity from an existing account. Unlinked logins will be considered new identities next time they are seen. Removing the last linked login will make this identity inaccessible.</p> <p>This is a public API. You do not need any credentials to call this API.</p>",
      "operationName" : "UnlinkIdentity",
      "deprecated" : false,
      "input" : {
        "variableName" : "unlinkIdentityRequest",
        "variableType" : "UnlinkIdentityRequest",
        "variableDeclarationType" : "UnlinkIdentityRequest",
        "documentation" : "Input to the UnlinkIdentity action.",
        "simpleType" : "UnlinkIdentityRequest",
        "variableSetterType" : "UnlinkIdentityRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      }, {
        "exceptionName" : "ExternalServiceException",
        "documentation" : "<p>An exception thrown when a dependent service such as Facebook or Twitter is not responding</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Unlinks a federated identity from an existing account. Unlinked logins will be considered new identities next time they are seen. Removing the last linked login will make this identity inaccessible.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param unlinkIdentityRequest Input to the UnlinkIdentity action.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.\n@throws ExternalServiceException An exception thrown when a dependent service such as Facebook or Twitter is not responding*/",
      "asyncDocumentation" : "/**<p>Unlinks a federated identity from an existing account. Unlinked logins will be considered new identities next time they are seen. Removing the last linked login will make this identity inaccessible.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param unlinkIdentityRequest Input to the UnlinkIdentity action.*/",
      "asyncDocumentationWithHandler" : "/**<p>Unlinks a federated identity from an existing account. Unlinked logins will be considered new identities next time they are seen. Removing the last linked login will make this identity inaccessible.</p> <p>This is a public API. You do not need any credentials to call this API.</p>\n@param unlinkIdentityRequest Input to the UnlinkIdentity action.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UnlinkIdentityRequest, Void>",
      "methodName" : "unlinkIdentity"
    },
    "UpdateIdentityPool" : {
      "documentation" : "<p>Updates a user pool.</p> <p>You must use AWS Developer credentials to call this API.</p>",
      "operationName" : "UpdateIdentityPool",
      "deprecated" : false,
      "input" : {
        "variableName" : "updateIdentityPoolRequest",
        "variableType" : "UpdateIdentityPoolRequest",
        "variableDeclarationType" : "UpdateIdentityPoolRequest",
        "documentation" : "An object representing a Cognito identity pool.",
        "simpleType" : "UpdateIdentityPoolRequest",
        "variableSetterType" : "UpdateIdentityPoolRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "UpdateIdentityPoolResult",
        "documentation" : "An object representing a Cognito identity pool."
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidParameterException",
        "documentation" : "Thrown for missing or bad input parameter(s)."
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist."
      }, {
        "exceptionName" : "NotAuthorizedException",
        "documentation" : "Thrown when a user is not authorized to access the requested resource."
      }, {
        "exceptionName" : "ResourceConflictException",
        "documentation" : "Thrown when a user tries to use a login which is already linked to another account."
      }, {
        "exceptionName" : "TooManyRequestsException",
        "documentation" : "Thrown when a request is throttled."
      }, {
        "exceptionName" : "InternalErrorException",
        "documentation" : "Thrown when the service encounters an error during processing the request."
      }, {
        "exceptionName" : "ConcurrentModificationException",
        "documentation" : "<p>Thrown if there are parallel requests to modify a resource.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Updates a user pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param updateIdentityPoolRequest An object representing a Cognito identity pool.\n@return Result of the UpdateIdentityPool operation returned by the service.\n@throws InvalidParameterException Thrown for missing or bad input parameter(s).\n@throws ResourceNotFoundException Thrown when the requested resource (for example, a dataset or record) does not exist.\n@throws NotAuthorizedException Thrown when a user is not authorized to access the requested resource.\n@throws ResourceConflictException Thrown when a user tries to use a login which is already linked to another account.\n@throws TooManyRequestsException Thrown when a request is throttled.\n@throws InternalErrorException Thrown when the service encounters an error during processing the request.\n@throws ConcurrentModificationException Thrown if there are parallel requests to modify a resource.*/",
      "asyncDocumentation" : "/**<p>Updates a user pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param updateIdentityPoolRequest An object representing a Cognito identity pool.\n@return A Java Future containing the result of the UpdateIdentityPool operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Updates a user pool.</p> <p>You must use AWS Developer credentials to call this API.</p>\n@param updateIdentityPoolRequest An object representing a Cognito identity pool.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the UpdateIdentityPool operation returned by the service.*/",
      "syncReturnType" : "UpdateIdentityPoolResult",
      "asyncReturnType" : "UpdateIdentityPoolResult",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateIdentityPoolResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateIdentityPoolResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateIdentityPoolRequest, UpdateIdentityPoolResult>",
      "methodName" : "updateIdentityPool"
    }
  },
  "shapes" : {
    "GetIdRequest" : {
      "c2jName" : "GetIdInput",
      "documentation" : "Input to the GetId action.",
      "shapeName" : "GetIdRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "A standard AWS account ID (9+ digits).",
        "name" : "AccountId",
        "c2jName" : "AccountId",
        "c2jShape" : "AccountId",
        "variable" : {
          "variableName" : "accountId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A standard AWS account ID (9+ digits).",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "accountId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AccountId",
          "marshallLocationName" : "AccountId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A standard AWS account ID (9+ digits).\n@param accountId A standard AWS account ID (9+ digits).*/",
        "getterDocumentation" : "/**A standard AWS account ID (9+ digits).\n@return A standard AWS account ID (9+ digits).*/",
        "fluentSetterDocumentation" : "/**A standard AWS account ID (9+ digits).\n@param accountId A standard AWS account ID (9+ digits).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A standard AWS account ID (9+ digits).\n@param accountId A standard AWS account ID (9+ digits).\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>",
        "name" : "Logins",
        "c2jName" : "Logins",
        "c2jShape" : "LoginsMap",
        "variable" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Logins",
          "marshallLocationName" : "Logins",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul>*/",
        "getterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>\n@return A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul>*/",
        "fluentSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul>\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getIdRequest",
        "variableType" : "GetIdRequest",
        "variableDeclarationType" : "GetIdRequest",
        "documentation" : null,
        "simpleType" : "GetIdRequest",
        "variableSetterType" : "GetIdRequest"
      },
      "marshaller" : {
        "action" : "GetId",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.GetId",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AccountId" : {
          "documentation" : "A standard AWS account ID (9+ digits).",
          "name" : "AccountId",
          "c2jName" : "AccountId",
          "c2jShape" : "AccountId",
          "variable" : {
            "variableName" : "accountId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A standard AWS account ID (9+ digits).",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "accountId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AccountId",
            "marshallLocationName" : "AccountId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A standard AWS account ID (9+ digits).\n@param accountId A standard AWS account ID (9+ digits).*/",
          "getterDocumentation" : "/**A standard AWS account ID (9+ digits).\n@return A standard AWS account ID (9+ digits).*/",
          "fluentSetterDocumentation" : "/**A standard AWS account ID (9+ digits).\n@param accountId A standard AWS account ID (9+ digits).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A standard AWS account ID (9+ digits).\n@param accountId A standard AWS account ID (9+ digits).\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Logins" : {
          "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>",
          "name" : "Logins",
          "c2jName" : "Logins",
          "c2jShape" : "LoginsMap",
          "variable" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Logins",
            "marshallLocationName" : "Logins",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul>*/",
          "getterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>\n@return A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul>*/",
          "fluentSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul> </p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.</p> <p>The available provider names for <code>Logins</code> are as follows: <ul> <li>Facebook: <code>graph.facebook.com</code> </li> <li>Google: <code>accounts.google.com</code> </li> <li>Amazon: <code>www.amazon.com</code> </li> <li>Twitter: <code>api.twitter.com</code> </li> <li>Digits: <code>www.digits.com</code> </li> </ul>\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ConcurrentModificationException" : {
      "c2jName" : "ConcurrentModificationException",
      "documentation" : "<p>Thrown if there are parallel requests to modify a resource.</p>",
      "shapeName" : "ConcurrentModificationException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "concurrentModificationException",
        "variableType" : "ConcurrentModificationException",
        "variableDeclarationType" : "ConcurrentModificationException",
        "documentation" : null,
        "simpleType" : "ConcurrentModificationException",
        "variableSetterType" : "ConcurrentModificationException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ConcurrentModificationException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "IdentityPoolShortDescription" : {
      "c2jName" : "IdentityPoolShortDescription",
      "documentation" : "A description of the identity pool.",
      "shapeName" : "IdentityPoolShortDescription",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A string that you provide.",
        "name" : "IdentityPoolName",
        "c2jName" : "IdentityPoolName",
        "c2jShape" : "IdentityPoolName",
        "variable" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A string that you provide.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolName",
          "marshallLocationName" : "IdentityPoolName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A string that you provide.\n@param identityPoolName A string that you provide.*/",
        "getterDocumentation" : "/**A string that you provide.\n@return A string that you provide.*/",
        "fluentSetterDocumentation" : "/**A string that you provide.\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A string that you provide.\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "identityPoolShortDescription",
        "variableType" : "IdentityPoolShortDescription",
        "variableDeclarationType" : "IdentityPoolShortDescription",
        "documentation" : null,
        "simpleType" : "IdentityPoolShortDescription",
        "variableSetterType" : "IdentityPoolShortDescription"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolName" : {
          "documentation" : "A string that you provide.",
          "name" : "IdentityPoolName",
          "c2jName" : "IdentityPoolName",
          "c2jShape" : "IdentityPoolName",
          "variable" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A string that you provide.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolName",
            "marshallLocationName" : "IdentityPoolName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A string that you provide.\n@param identityPoolName A string that you provide.*/",
          "getterDocumentation" : "/**A string that you provide.\n@return A string that you provide.*/",
          "fluentSetterDocumentation" : "/**A string that you provide.\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A string that you provide.\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "MergeDeveloperIdentitiesResult" : {
      "c2jName" : "MergeDeveloperIdentitiesResponse",
      "documentation" : "<p>Returned in response to a successful <code>MergeDeveloperIdentities</code> action.</p>",
      "shapeName" : "MergeDeveloperIdentitiesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "mergeDeveloperIdentitiesResult",
        "variableType" : "MergeDeveloperIdentitiesResult",
        "variableDeclarationType" : "MergeDeveloperIdentitiesResult",
        "documentation" : null,
        "simpleType" : "MergeDeveloperIdentitiesResult",
        "variableSetterType" : "MergeDeveloperIdentitiesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "MergeDeveloperIdentitiesRequest" : {
      "c2jName" : "MergeDeveloperIdentitiesInput",
      "documentation" : "<p>Input to the <code>MergeDeveloperIdentities</code> action.</p>",
      "shapeName" : "MergeDeveloperIdentitiesRequest",
      "deprecated" : false,
      "required" : [ "SourceUserIdentifier", "DestinationUserIdentifier", "DeveloperProviderName", "IdentityPoolId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>",
        "name" : "SourceUserIdentifier",
        "c2jName" : "SourceUserIdentifier",
        "c2jShape" : "DeveloperUserIdentifier",
        "variable" : {
          "variableName" : "sourceUserIdentifier",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sourceUserIdentifier",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SourceUserIdentifier",
          "marshallLocationName" : "SourceUserIdentifier",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param sourceUserIdentifier User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.*/",
        "getterDocumentation" : "/**<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@return User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.*/",
        "fluentSetterDocumentation" : "/**<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param sourceUserIdentifier User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param sourceUserIdentifier User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>",
        "name" : "DestinationUserIdentifier",
        "c2jName" : "DestinationUserIdentifier",
        "c2jShape" : "DeveloperUserIdentifier",
        "variable" : {
          "variableName" : "destinationUserIdentifier",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "destinationUserIdentifier",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DestinationUserIdentifier",
          "marshallLocationName" : "DestinationUserIdentifier",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param destinationUserIdentifier User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.*/",
        "getterDocumentation" : "/**<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@return User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.*/",
        "fluentSetterDocumentation" : "/**<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param destinationUserIdentifier User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param destinationUserIdentifier User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>",
        "name" : "DeveloperProviderName",
        "c2jName" : "DeveloperProviderName",
        "c2jShape" : "DeveloperProviderName",
        "variable" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperProviderName",
          "marshallLocationName" : "DeveloperProviderName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).*/",
        "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>\n@return The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).*/",
        "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "mergeDeveloperIdentitiesRequest",
        "variableType" : "MergeDeveloperIdentitiesRequest",
        "variableDeclarationType" : "MergeDeveloperIdentitiesRequest",
        "documentation" : null,
        "simpleType" : "MergeDeveloperIdentitiesRequest",
        "variableSetterType" : "MergeDeveloperIdentitiesRequest"
      },
      "marshaller" : {
        "action" : "MergeDeveloperIdentities",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.MergeDeveloperIdentities",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DeveloperProviderName" : {
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>",
          "name" : "DeveloperProviderName",
          "c2jName" : "DeveloperProviderName",
          "c2jShape" : "DeveloperProviderName",
          "variable" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperProviderName",
            "marshallLocationName" : "DeveloperProviderName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).*/",
          "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>\n@return The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).*/",
          "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain name that you provide while creating an identity pool. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (.), underscore (_), and dash (-).\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DestinationUserIdentifier" : {
          "documentation" : "<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>",
          "name" : "DestinationUserIdentifier",
          "c2jName" : "DestinationUserIdentifier",
          "c2jShape" : "DeveloperUserIdentifier",
          "variable" : {
            "variableName" : "destinationUserIdentifier",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "destinationUserIdentifier",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DestinationUserIdentifier",
            "marshallLocationName" : "DestinationUserIdentifier",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param destinationUserIdentifier User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.*/",
          "getterDocumentation" : "/**<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@return User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.*/",
          "fluentSetterDocumentation" : "/**<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param destinationUserIdentifier User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param destinationUserIdentifier User identifier for the destination user. The value should be a <code>DeveloperUserIdentifier</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SourceUserIdentifier" : {
          "documentation" : "<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>",
          "name" : "SourceUserIdentifier",
          "c2jName" : "SourceUserIdentifier",
          "c2jShape" : "DeveloperUserIdentifier",
          "variable" : {
            "variableName" : "sourceUserIdentifier",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sourceUserIdentifier",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SourceUserIdentifier",
            "marshallLocationName" : "SourceUserIdentifier",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param sourceUserIdentifier User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.*/",
          "getterDocumentation" : "/**<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@return User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.*/",
          "fluentSetterDocumentation" : "/**<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param sourceUserIdentifier User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.</p>\n@param sourceUserIdentifier User identifier for the source user. The value should be a <code>DeveloperUserIdentifier</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetOpenIdTokenRequest" : {
      "c2jName" : "GetOpenIdTokenInput",
      "documentation" : "Input to the GetOpenIdToken action.",
      "shapeName" : "GetOpenIdTokenRequest",
      "deprecated" : false,
      "required" : [ "IdentityId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "A unique identifier in the format REGION:GUID.",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.",
        "name" : "Logins",
        "c2jName" : "Logins",
        "c2jShape" : "LoginsMap",
        "variable" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Logins",
          "marshallLocationName" : "Logins",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@param logins A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.*/",
        "getterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@return A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.*/",
        "fluentSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@param logins A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@param logins A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getOpenIdTokenRequest",
        "variableType" : "GetOpenIdTokenRequest",
        "variableDeclarationType" : "GetOpenIdTokenRequest",
        "documentation" : null,
        "simpleType" : "GetOpenIdTokenRequest",
        "variableSetterType" : "GetOpenIdTokenRequest"
      },
      "marshaller" : {
        "action" : "GetOpenIdToken",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.GetOpenIdToken",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A unique identifier in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Logins" : {
          "documentation" : "A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.",
          "name" : "Logins",
          "c2jName" : "Logins",
          "c2jShape" : "LoginsMap",
          "variable" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Logins",
            "marshallLocationName" : "Logins",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@param logins A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.*/",
          "getterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@return A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.*/",
          "fluentSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@param logins A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@param logins A set of optional name-value pairs that map provider names to provider tokens. When using graph.facebook.com and www.amazon.com, supply the access_token returned from the provider's authflow. For accounts.google.com or any other OpenId Connect provider, always include the id_token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteIdentitiesResult" : {
      "c2jName" : "DeleteIdentitiesResponse",
      "documentation" : "<p>Returned in response to a successful <code>DeleteIdentities</code> operation.</p>",
      "shapeName" : "DeleteIdentitiesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>",
        "name" : "UnprocessedIdentityIds",
        "c2jName" : "UnprocessedIdentityIds",
        "c2jShape" : "UnprocessedIdentityIdList",
        "variable" : {
          "variableName" : "unprocessedIdentityIds",
          "variableType" : "java.util.List<UnprocessedIdentityId>",
          "variableDeclarationType" : "java.util.List<UnprocessedIdentityId>",
          "documentation" : "<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>",
          "simpleType" : "List<UnprocessedIdentityId>",
          "variableSetterType" : "java.util.Collection<UnprocessedIdentityId>"
        },
        "setterModel" : {
          "variableName" : "unprocessedIdentityIds",
          "variableType" : "java.util.List<UnprocessedIdentityId>",
          "variableDeclarationType" : "java.util.List<UnprocessedIdentityId>",
          "documentation" : "",
          "simpleType" : "List<UnprocessedIdentityId>",
          "variableSetterType" : "java.util.Collection<UnprocessedIdentityId>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<UnprocessedIdentityId>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "UnprocessedIdentityIds",
          "marshallLocationName" : "UnprocessedIdentityIds",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "UnprocessedIdentityId",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "UnprocessedIdentityId",
            "variable" : {
              "variableName" : "member",
              "variableType" : "UnprocessedIdentityId",
              "variableDeclarationType" : "UnprocessedIdentityId",
              "documentation" : "",
              "simpleType" : "UnprocessedIdentityId",
              "variableSetterType" : "UnprocessedIdentityId"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "UnprocessedIdentityId",
              "variableDeclarationType" : "UnprocessedIdentityId",
              "documentation" : "",
              "simpleType" : "UnprocessedIdentityId",
              "variableSetterType" : "UnprocessedIdentityId"
            },
            "getterModel" : {
              "returnType" : "UnprocessedIdentityId",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "UnprocessedIdentityId",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<UnprocessedIdentityId>",
          "templateImplType" : "java.util.ArrayList<UnprocessedIdentityId>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>\n@param unprocessedIdentityIds An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.*/",
        "getterDocumentation" : "/**<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>\n@return An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.*/",
        "fluentSetterDocumentation" : "/**<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>\n@param unprocessedIdentityIds An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUnprocessedIdentityIds(java.util.Collection)} or {@link #withUnprocessedIdentityIds(java.util.Collection)} if you want to override the existing values.</p>\n@param unprocessedIdentityIds An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteIdentitiesResult",
        "variableType" : "DeleteIdentitiesResult",
        "variableDeclarationType" : "DeleteIdentitiesResult",
        "documentation" : null,
        "simpleType" : "DeleteIdentitiesResult",
        "variableSetterType" : "DeleteIdentitiesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "UnprocessedIdentityIds" : {
          "documentation" : "<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>",
          "name" : "UnprocessedIdentityIds",
          "c2jName" : "UnprocessedIdentityIds",
          "c2jShape" : "UnprocessedIdentityIdList",
          "variable" : {
            "variableName" : "unprocessedIdentityIds",
            "variableType" : "java.util.List<UnprocessedIdentityId>",
            "variableDeclarationType" : "java.util.List<UnprocessedIdentityId>",
            "documentation" : "<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>",
            "simpleType" : "List<UnprocessedIdentityId>",
            "variableSetterType" : "java.util.Collection<UnprocessedIdentityId>"
          },
          "setterModel" : {
            "variableName" : "unprocessedIdentityIds",
            "variableType" : "java.util.List<UnprocessedIdentityId>",
            "variableDeclarationType" : "java.util.List<UnprocessedIdentityId>",
            "documentation" : "",
            "simpleType" : "List<UnprocessedIdentityId>",
            "variableSetterType" : "java.util.Collection<UnprocessedIdentityId>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<UnprocessedIdentityId>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "UnprocessedIdentityIds",
            "marshallLocationName" : "UnprocessedIdentityIds",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "UnprocessedIdentityId",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "UnprocessedIdentityId",
              "variable" : {
                "variableName" : "member",
                "variableType" : "UnprocessedIdentityId",
                "variableDeclarationType" : "UnprocessedIdentityId",
                "documentation" : "",
                "simpleType" : "UnprocessedIdentityId",
                "variableSetterType" : "UnprocessedIdentityId"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "UnprocessedIdentityId",
                "variableDeclarationType" : "UnprocessedIdentityId",
                "documentation" : "",
                "simpleType" : "UnprocessedIdentityId",
                "variableSetterType" : "UnprocessedIdentityId"
              },
              "getterModel" : {
                "returnType" : "UnprocessedIdentityId",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "UnprocessedIdentityId",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<UnprocessedIdentityId>",
            "templateImplType" : "java.util.ArrayList<UnprocessedIdentityId>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>\n@param unprocessedIdentityIds An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.*/",
          "getterDocumentation" : "/**<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>\n@return An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.*/",
          "fluentSetterDocumentation" : "/**<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>\n@param unprocessedIdentityIds An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setUnprocessedIdentityIds(java.util.Collection)} or {@link #withUnprocessedIdentityIds(java.util.Collection)} if you want to override the existing values.</p>\n@param unprocessedIdentityIds An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NotAuthorizedException" : {
      "c2jName" : "NotAuthorizedException",
      "documentation" : "Thrown when a user is not authorized to access the requested resource.",
      "shapeName" : "NotAuthorizedException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "notAuthorizedException",
        "variableType" : "NotAuthorizedException",
        "variableDeclarationType" : "NotAuthorizedException",
        "documentation" : null,
        "simpleType" : "NotAuthorizedException",
        "variableSetterType" : "NotAuthorizedException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "NotAuthorizedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "SetIdentityPoolRolesRequest" : {
      "c2jName" : "SetIdentityPoolRolesInput",
      "documentation" : "<p>Input to the <code>SetIdentityPoolRoles</code> action.</p>",
      "shapeName" : "SetIdentityPoolRolesRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId", "Roles" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>",
        "name" : "Roles",
        "c2jName" : "Roles",
        "c2jShape" : "RolesMap",
        "variable" : {
          "variableName" : "roles",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "roles",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Roles",
          "marshallLocationName" : "Roles",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n@param roles The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.*/",
        "getterDocumentation" : "/**<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n@return The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.*/",
        "fluentSetterDocumentation" : "/**<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n@param roles The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n@param roles The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "setIdentityPoolRolesRequest",
        "variableType" : "SetIdentityPoolRolesRequest",
        "variableDeclarationType" : "SetIdentityPoolRolesRequest",
        "documentation" : null,
        "simpleType" : "SetIdentityPoolRolesRequest",
        "variableSetterType" : "SetIdentityPoolRolesRequest"
      },
      "marshaller" : {
        "action" : "SetIdentityPoolRoles",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.SetIdentityPoolRoles",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolId" : {
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Roles" : {
          "documentation" : "<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>",
          "name" : "Roles",
          "c2jName" : "Roles",
          "c2jShape" : "RolesMap",
          "variable" : {
            "variableName" : "roles",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "roles",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Roles",
            "marshallLocationName" : "Roles",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n@param roles The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.*/",
          "getterDocumentation" : "/**<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n@return The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.*/",
          "fluentSetterDocumentation" : "/**<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n@param roles The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n@param roles The map of roles associated with this pool. For a given role, the key will be either \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Credentials" : {
      "c2jName" : "Credentials",
      "documentation" : "<p>Credentials for the provided identity ID.</p>",
      "shapeName" : "Credentials",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The Access Key portion of the credentials.</p>",
        "name" : "AccessKeyId",
        "c2jName" : "AccessKeyId",
        "c2jShape" : "AccessKeyString",
        "variable" : {
          "variableName" : "accessKeyId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Access Key portion of the credentials.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "accessKeyId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AccessKeyId",
          "marshallLocationName" : "AccessKeyId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Access Key portion of the credentials.</p>\n@param accessKeyId The Access Key portion of the credentials.*/",
        "getterDocumentation" : "/**<p>The Access Key portion of the credentials.</p>\n@return The Access Key portion of the credentials.*/",
        "fluentSetterDocumentation" : "/**<p>The Access Key portion of the credentials.</p>\n@param accessKeyId The Access Key portion of the credentials.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Access Key portion of the credentials.</p>\n@param accessKeyId The Access Key portion of the credentials.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The Secret Access Key portion of the credentials</p>",
        "name" : "SecretKey",
        "c2jName" : "SecretKey",
        "c2jShape" : "SecretKeyString",
        "variable" : {
          "variableName" : "secretKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Secret Access Key portion of the credentials</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "secretKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SecretKey",
          "marshallLocationName" : "SecretKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Secret Access Key portion of the credentials</p>\n@param secretKey The Secret Access Key portion of the credentials*/",
        "getterDocumentation" : "/**<p>The Secret Access Key portion of the credentials</p>\n@return The Secret Access Key portion of the credentials*/",
        "fluentSetterDocumentation" : "/**<p>The Secret Access Key portion of the credentials</p>\n@param secretKey The Secret Access Key portion of the credentials\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Secret Access Key portion of the credentials</p>\n@param secretKey The Secret Access Key portion of the credentials\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The Session Token portion of the credentials</p>",
        "name" : "SessionToken",
        "c2jName" : "SessionToken",
        "c2jShape" : "SessionTokenString",
        "variable" : {
          "variableName" : "sessionToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Session Token portion of the credentials</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sessionToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SessionToken",
          "marshallLocationName" : "SessionToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Session Token portion of the credentials</p>\n@param sessionToken The Session Token portion of the credentials*/",
        "getterDocumentation" : "/**<p>The Session Token portion of the credentials</p>\n@return The Session Token portion of the credentials*/",
        "fluentSetterDocumentation" : "/**<p>The Session Token portion of the credentials</p>\n@param sessionToken The Session Token portion of the credentials\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Session Token portion of the credentials</p>\n@param sessionToken The Session Token portion of the credentials\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The date at which these credentials will expire.</p>",
        "name" : "Expiration",
        "c2jName" : "Expiration",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "expiration",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The date at which these credentials will expire.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "expiration",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Expiration",
          "marshallLocationName" : "Expiration",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The date at which these credentials will expire.</p>\n@param expiration The date at which these credentials will expire.*/",
        "getterDocumentation" : "/**<p>The date at which these credentials will expire.</p>\n@return The date at which these credentials will expire.*/",
        "fluentSetterDocumentation" : "/**<p>The date at which these credentials will expire.</p>\n@param expiration The date at which these credentials will expire.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The date at which these credentials will expire.</p>\n@param expiration The date at which these credentials will expire.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "credentials",
        "variableType" : "Credentials",
        "variableDeclarationType" : "Credentials",
        "documentation" : null,
        "simpleType" : "Credentials",
        "variableSetterType" : "Credentials"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AccessKeyId" : {
          "documentation" : "<p>The Access Key portion of the credentials.</p>",
          "name" : "AccessKeyId",
          "c2jName" : "AccessKeyId",
          "c2jShape" : "AccessKeyString",
          "variable" : {
            "variableName" : "accessKeyId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Access Key portion of the credentials.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "accessKeyId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AccessKeyId",
            "marshallLocationName" : "AccessKeyId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Access Key portion of the credentials.</p>\n@param accessKeyId The Access Key portion of the credentials.*/",
          "getterDocumentation" : "/**<p>The Access Key portion of the credentials.</p>\n@return The Access Key portion of the credentials.*/",
          "fluentSetterDocumentation" : "/**<p>The Access Key portion of the credentials.</p>\n@param accessKeyId The Access Key portion of the credentials.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Access Key portion of the credentials.</p>\n@param accessKeyId The Access Key portion of the credentials.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Expiration" : {
          "documentation" : "<p>The date at which these credentials will expire.</p>",
          "name" : "Expiration",
          "c2jName" : "Expiration",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "expiration",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The date at which these credentials will expire.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "expiration",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Expiration",
            "marshallLocationName" : "Expiration",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The date at which these credentials will expire.</p>\n@param expiration The date at which these credentials will expire.*/",
          "getterDocumentation" : "/**<p>The date at which these credentials will expire.</p>\n@return The date at which these credentials will expire.*/",
          "fluentSetterDocumentation" : "/**<p>The date at which these credentials will expire.</p>\n@param expiration The date at which these credentials will expire.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The date at which these credentials will expire.</p>\n@param expiration The date at which these credentials will expire.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SessionToken" : {
          "documentation" : "<p>The Session Token portion of the credentials</p>",
          "name" : "SessionToken",
          "c2jName" : "SessionToken",
          "c2jShape" : "SessionTokenString",
          "variable" : {
            "variableName" : "sessionToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Session Token portion of the credentials</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sessionToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SessionToken",
            "marshallLocationName" : "SessionToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Session Token portion of the credentials</p>\n@param sessionToken The Session Token portion of the credentials*/",
          "getterDocumentation" : "/**<p>The Session Token portion of the credentials</p>\n@return The Session Token portion of the credentials*/",
          "fluentSetterDocumentation" : "/**<p>The Session Token portion of the credentials</p>\n@param sessionToken The Session Token portion of the credentials\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Session Token portion of the credentials</p>\n@param sessionToken The Session Token portion of the credentials\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SecretKey" : {
          "documentation" : "<p>The Secret Access Key portion of the credentials</p>",
          "name" : "SecretKey",
          "c2jName" : "SecretKey",
          "c2jShape" : "SecretKeyString",
          "variable" : {
            "variableName" : "secretKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Secret Access Key portion of the credentials</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "secretKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SecretKey",
            "marshallLocationName" : "SecretKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Secret Access Key portion of the credentials</p>\n@param secretKey The Secret Access Key portion of the credentials*/",
          "getterDocumentation" : "/**<p>The Secret Access Key portion of the credentials</p>\n@return The Secret Access Key portion of the credentials*/",
          "fluentSetterDocumentation" : "/**<p>The Secret Access Key portion of the credentials</p>\n@param secretKey The Secret Access Key portion of the credentials\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Secret Access Key portion of the credentials</p>\n@param secretKey The Secret Access Key portion of the credentials\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateIdentityPoolResult" : {
      "c2jName" : "IdentityPool",
      "documentation" : "An object representing a Cognito identity pool.",
      "shapeName" : "CreateIdentityPoolResult",
      "deprecated" : false,
      "required" : [ "IdentityPoolId", "IdentityPoolName", "AllowUnauthenticatedIdentities" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A string that you provide.</p>",
        "name" : "IdentityPoolName",
        "c2jName" : "IdentityPoolName",
        "c2jShape" : "IdentityPoolName",
        "variable" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A string that you provide.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolName",
          "marshallLocationName" : "IdentityPoolName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
        "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
        "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
        "name" : "AllowUnauthenticatedIdentities",
        "c2jName" : "AllowUnauthenticatedIdentities",
        "c2jShape" : "IdentityPoolUnauthenticated",
        "variable" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
          "marshallLocationName" : "AllowUnauthenticatedIdentities",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
        "getterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@return TRUE if the identity pool supports unauthenticated logins.*/",
        "fluentSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
        "name" : "SupportedLoginProviders",
        "c2jName" : "SupportedLoginProviders",
        "c2jShape" : "IdentityProviders",
        "variable" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SupportedLoginProviders",
          "marshallLocationName" : "SupportedLoginProviders",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
        "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
        "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
        "name" : "DeveloperProviderName",
        "c2jName" : "DeveloperProviderName",
        "c2jShape" : "DeveloperProviderName",
        "variable" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperProviderName",
          "marshallLocationName" : "DeveloperProviderName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
        "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
        "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
        "name" : "OpenIdConnectProviderARNs",
        "c2jName" : "OpenIdConnectProviderARNs",
        "c2jShape" : "OIDCProviderList",
        "variable" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "OpenIdConnectProviderARNs",
          "marshallLocationName" : "OpenIdConnectProviderARNs",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
        "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
        "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createIdentityPoolResult",
        "variableType" : "CreateIdentityPoolResult",
        "variableDeclarationType" : "CreateIdentityPoolResult",
        "documentation" : null,
        "simpleType" : "CreateIdentityPoolResult",
        "variableSetterType" : "CreateIdentityPoolResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolName" : {
          "documentation" : "<p>A string that you provide.</p>",
          "name" : "IdentityPoolName",
          "c2jName" : "IdentityPoolName",
          "c2jShape" : "IdentityPoolName",
          "variable" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A string that you provide.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolName",
            "marshallLocationName" : "IdentityPoolName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
          "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
          "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DeveloperProviderName" : {
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "name" : "DeveloperProviderName",
          "c2jName" : "DeveloperProviderName",
          "c2jShape" : "DeveloperProviderName",
          "variable" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperProviderName",
            "marshallLocationName" : "DeveloperProviderName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
          "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
          "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AllowUnauthenticatedIdentities" : {
          "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
          "name" : "AllowUnauthenticatedIdentities",
          "c2jName" : "AllowUnauthenticatedIdentities",
          "c2jShape" : "IdentityPoolUnauthenticated",
          "variable" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
            "marshallLocationName" : "AllowUnauthenticatedIdentities",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
          "getterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@return TRUE if the identity pool supports unauthenticated logins.*/",
          "fluentSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OpenIdConnectProviderARNs" : {
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "name" : "OpenIdConnectProviderARNs",
          "c2jName" : "OpenIdConnectProviderARNs",
          "c2jShape" : "OIDCProviderList",
          "variable" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "OpenIdConnectProviderARNs",
            "marshallLocationName" : "OpenIdConnectProviderARNs",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
          "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
          "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SupportedLoginProviders" : {
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "name" : "SupportedLoginProviders",
          "c2jName" : "SupportedLoginProviders",
          "c2jShape" : "IdentityProviders",
          "variable" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SupportedLoginProviders",
            "marshallLocationName" : "SupportedLoginProviders",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
          "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
          "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InvalidIdentityPoolConfigurationException" : {
      "c2jName" : "InvalidIdentityPoolConfigurationException",
      "documentation" : "<p>Thrown if the identity pool has no role associated for the given auth type (auth/unauth) or if the AssumeRole fails.</p>",
      "shapeName" : "InvalidIdentityPoolConfigurationException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidIdentityPoolConfigurationException",
        "variableType" : "InvalidIdentityPoolConfigurationException",
        "variableDeclarationType" : "InvalidIdentityPoolConfigurationException",
        "documentation" : null,
        "simpleType" : "InvalidIdentityPoolConfigurationException",
        "variableSetterType" : "InvalidIdentityPoolConfigurationException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidIdentityPoolConfigurationException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DeleteIdentitiesRequest" : {
      "c2jName" : "DeleteIdentitiesInput",
      "documentation" : "<p>Input to the <code>DeleteIdentities</code> action.</p>",
      "shapeName" : "DeleteIdentitiesRequest",
      "deprecated" : false,
      "required" : [ "IdentityIdsToDelete" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A list of 1-60 identities that you want to delete.</p>",
        "name" : "IdentityIdsToDelete",
        "c2jName" : "IdentityIdsToDelete",
        "c2jShape" : "IdentityIdList",
        "variable" : {
          "variableName" : "identityIdsToDelete",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A list of 1-60 identities that you want to delete.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "identityIdsToDelete",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityIdsToDelete",
          "marshallLocationName" : "IdentityIdsToDelete",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of 1-60 identities that you want to delete.</p>\n@param identityIdsToDelete A list of 1-60 identities that you want to delete.*/",
        "getterDocumentation" : "/**<p>A list of 1-60 identities that you want to delete.</p>\n@return A list of 1-60 identities that you want to delete.*/",
        "fluentSetterDocumentation" : "/**<p>A list of 1-60 identities that you want to delete.</p>\n@param identityIdsToDelete A list of 1-60 identities that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of 1-60 identities that you want to delete.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIdentityIdsToDelete(java.util.Collection)} or {@link #withIdentityIdsToDelete(java.util.Collection)} if you want to override the existing values.</p>\n@param identityIdsToDelete A list of 1-60 identities that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteIdentitiesRequest",
        "variableType" : "DeleteIdentitiesRequest",
        "variableDeclarationType" : "DeleteIdentitiesRequest",
        "documentation" : null,
        "simpleType" : "DeleteIdentitiesRequest",
        "variableSetterType" : "DeleteIdentitiesRequest"
      },
      "marshaller" : {
        "action" : "DeleteIdentities",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.DeleteIdentities",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityIdsToDelete" : {
          "documentation" : "<p>A list of 1-60 identities that you want to delete.</p>",
          "name" : "IdentityIdsToDelete",
          "c2jName" : "IdentityIdsToDelete",
          "c2jShape" : "IdentityIdList",
          "variable" : {
            "variableName" : "identityIdsToDelete",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A list of 1-60 identities that you want to delete.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "identityIdsToDelete",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityIdsToDelete",
            "marshallLocationName" : "IdentityIdsToDelete",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of 1-60 identities that you want to delete.</p>\n@param identityIdsToDelete A list of 1-60 identities that you want to delete.*/",
          "getterDocumentation" : "/**<p>A list of 1-60 identities that you want to delete.</p>\n@return A list of 1-60 identities that you want to delete.*/",
          "fluentSetterDocumentation" : "/**<p>A list of 1-60 identities that you want to delete.</p>\n@param identityIdsToDelete A list of 1-60 identities that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of 1-60 identities that you want to delete.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIdentityIdsToDelete(java.util.Collection)} or {@link #withIdentityIdsToDelete(java.util.Collection)} if you want to override the existing values.</p>\n@param identityIdsToDelete A list of 1-60 identities that you want to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "documentation" : "Thrown when the total number of user pools has exceeded a preset limit.",
      "shapeName" : "LimitExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "variableDeclarationType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DescribeIdentityPoolResult" : {
      "c2jName" : "IdentityPool",
      "documentation" : "An object representing a Cognito identity pool.",
      "shapeName" : "DescribeIdentityPoolResult",
      "deprecated" : false,
      "required" : [ "IdentityPoolId", "IdentityPoolName", "AllowUnauthenticatedIdentities" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A string that you provide.</p>",
        "name" : "IdentityPoolName",
        "c2jName" : "IdentityPoolName",
        "c2jShape" : "IdentityPoolName",
        "variable" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A string that you provide.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolName",
          "marshallLocationName" : "IdentityPoolName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
        "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
        "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
        "name" : "AllowUnauthenticatedIdentities",
        "c2jName" : "AllowUnauthenticatedIdentities",
        "c2jShape" : "IdentityPoolUnauthenticated",
        "variable" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
          "marshallLocationName" : "AllowUnauthenticatedIdentities",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
        "getterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@return TRUE if the identity pool supports unauthenticated logins.*/",
        "fluentSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
        "name" : "SupportedLoginProviders",
        "c2jName" : "SupportedLoginProviders",
        "c2jShape" : "IdentityProviders",
        "variable" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SupportedLoginProviders",
          "marshallLocationName" : "SupportedLoginProviders",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
        "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
        "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
        "name" : "DeveloperProviderName",
        "c2jName" : "DeveloperProviderName",
        "c2jShape" : "DeveloperProviderName",
        "variable" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperProviderName",
          "marshallLocationName" : "DeveloperProviderName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
        "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
        "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
        "name" : "OpenIdConnectProviderARNs",
        "c2jName" : "OpenIdConnectProviderARNs",
        "c2jShape" : "OIDCProviderList",
        "variable" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "OpenIdConnectProviderARNs",
          "marshallLocationName" : "OpenIdConnectProviderARNs",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
        "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
        "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeIdentityPoolResult",
        "variableType" : "DescribeIdentityPoolResult",
        "variableDeclarationType" : "DescribeIdentityPoolResult",
        "documentation" : null,
        "simpleType" : "DescribeIdentityPoolResult",
        "variableSetterType" : "DescribeIdentityPoolResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolName" : {
          "documentation" : "<p>A string that you provide.</p>",
          "name" : "IdentityPoolName",
          "c2jName" : "IdentityPoolName",
          "c2jShape" : "IdentityPoolName",
          "variable" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A string that you provide.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolName",
            "marshallLocationName" : "IdentityPoolName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
          "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
          "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DeveloperProviderName" : {
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "name" : "DeveloperProviderName",
          "c2jName" : "DeveloperProviderName",
          "c2jShape" : "DeveloperProviderName",
          "variable" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperProviderName",
            "marshallLocationName" : "DeveloperProviderName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
          "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
          "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AllowUnauthenticatedIdentities" : {
          "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
          "name" : "AllowUnauthenticatedIdentities",
          "c2jName" : "AllowUnauthenticatedIdentities",
          "c2jShape" : "IdentityPoolUnauthenticated",
          "variable" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
            "marshallLocationName" : "AllowUnauthenticatedIdentities",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
          "getterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@return TRUE if the identity pool supports unauthenticated logins.*/",
          "fluentSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OpenIdConnectProviderARNs" : {
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "name" : "OpenIdConnectProviderARNs",
          "c2jName" : "OpenIdConnectProviderARNs",
          "c2jShape" : "OIDCProviderList",
          "variable" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "OpenIdConnectProviderARNs",
            "marshallLocationName" : "OpenIdConnectProviderARNs",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
          "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
          "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SupportedLoginProviders" : {
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "name" : "SupportedLoginProviders",
          "c2jName" : "SupportedLoginProviders",
          "c2jShape" : "IdentityProviders",
          "variable" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SupportedLoginProviders",
            "marshallLocationName" : "SupportedLoginProviders",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
          "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
          "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "LookupDeveloperIdentityResult" : {
      "c2jName" : "LookupDeveloperIdentityResponse",
      "documentation" : "<p>Returned in response to a successful <code>LookupDeveloperIdentity</code> action.</p>",
      "shapeName" : "LookupDeveloperIdentityResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>",
        "name" : "DeveloperUserIdentifierList",
        "c2jName" : "DeveloperUserIdentifierList",
        "c2jShape" : "DeveloperUserIdentifierList",
        "variable" : {
          "variableName" : "developerUserIdentifierList",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "developerUserIdentifierList",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperUserIdentifierList",
          "marshallLocationName" : "DeveloperUserIdentifierList",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>\n@param developerUserIdentifierList This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.*/",
        "getterDocumentation" : "/**<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>\n@return This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.*/",
        "fluentSetterDocumentation" : "/**<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>\n@param developerUserIdentifierList This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDeveloperUserIdentifierList(java.util.Collection)} or {@link #withDeveloperUserIdentifierList(java.util.Collection)} if you want to override the existing values.</p>\n@param developerUserIdentifierList This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationKey",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.*/",
        "getterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@return A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.*/",
        "fluentSetterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "lookupDeveloperIdentityResult",
        "variableType" : "LookupDeveloperIdentityResult",
        "variableDeclarationType" : "LookupDeveloperIdentityResult",
        "documentation" : null,
        "simpleType" : "LookupDeveloperIdentityResult",
        "variableSetterType" : "LookupDeveloperIdentityResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationKey",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.*/",
          "getterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@return A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.*/",
          "fluentSetterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DeveloperUserIdentifierList" : {
          "documentation" : "<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>",
          "name" : "DeveloperUserIdentifierList",
          "c2jName" : "DeveloperUserIdentifierList",
          "c2jShape" : "DeveloperUserIdentifierList",
          "variable" : {
            "variableName" : "developerUserIdentifierList",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "developerUserIdentifierList",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperUserIdentifierList",
            "marshallLocationName" : "DeveloperUserIdentifierList",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>\n@param developerUserIdentifierList This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.*/",
          "getterDocumentation" : "/**<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>\n@return This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.*/",
          "fluentSetterDocumentation" : "/**<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>\n@param developerUserIdentifierList This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDeveloperUserIdentifierList(java.util.Collection)} or {@link #withDeveloperUserIdentifierList(java.util.Collection)} if you want to override the existing values.</p>\n@param developerUserIdentifierList This is the list of developer user identifiers associated with an identity ID. Cognito supports the association of multiple developer user identifiers with an identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "IdentityDescription" : {
      "c2jName" : "IdentityDescription",
      "documentation" : "A description of the identity.",
      "shapeName" : "IdentityDescription",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "A unique identifier in the format REGION:GUID.",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
        "name" : "Logins",
        "c2jName" : "Logins",
        "c2jShape" : "LoginsList",
        "variable" : {
          "variableName" : "logins",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "logins",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Logins",
          "marshallLocationName" : "Logins",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.*/",
        "getterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@return A set of optional name-value pairs that map provider names to provider tokens.*/",
        "fluentSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLogins(java.util.Collection)} or {@link #withLogins(java.util.Collection)} if you want to override the existing values.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Date on which the identity was created.</p>",
        "name" : "CreationDate",
        "c2jName" : "CreationDate",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>Date on which the identity was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "CreationDate",
          "marshallLocationName" : "CreationDate",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.*/",
        "getterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@return Date on which the identity was created.*/",
        "fluentSetterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Date on which the identity was last modified.</p>",
        "name" : "LastModifiedDate",
        "c2jName" : "LastModifiedDate",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>Date on which the identity was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "LastModifiedDate",
          "marshallLocationName" : "LastModifiedDate",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.*/",
        "getterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@return Date on which the identity was last modified.*/",
        "fluentSetterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "identityDescription",
        "variableType" : "IdentityDescription",
        "variableDeclarationType" : "IdentityDescription",
        "documentation" : null,
        "simpleType" : "IdentityDescription",
        "variableSetterType" : "IdentityDescription"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A unique identifier in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "LastModifiedDate" : {
          "documentation" : "<p>Date on which the identity was last modified.</p>",
          "name" : "LastModifiedDate",
          "c2jName" : "LastModifiedDate",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>Date on which the identity was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "LastModifiedDate",
            "marshallLocationName" : "LastModifiedDate",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.*/",
          "getterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@return Date on which the identity was last modified.*/",
          "fluentSetterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CreationDate" : {
          "documentation" : "<p>Date on which the identity was created.</p>",
          "name" : "CreationDate",
          "c2jName" : "CreationDate",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>Date on which the identity was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "CreationDate",
            "marshallLocationName" : "CreationDate",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.*/",
          "getterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@return Date on which the identity was created.*/",
          "fluentSetterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Logins" : {
          "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
          "name" : "Logins",
          "c2jName" : "Logins",
          "c2jShape" : "LoginsList",
          "variable" : {
            "variableName" : "logins",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "logins",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Logins",
            "marshallLocationName" : "Logins",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.*/",
          "getterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@return A set of optional name-value pairs that map provider names to provider tokens.*/",
          "fluentSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLogins(java.util.Collection)} or {@link #withLogins(java.util.Collection)} if you want to override the existing values.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetIdentityPoolRolesResult" : {
      "c2jName" : "GetIdentityPoolRolesResponse",
      "documentation" : "<p>Returned in response to a successful <code>GetIdentityPoolRoles</code> operation.</p>",
      "shapeName" : "GetIdentityPoolRolesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>",
        "name" : "Roles",
        "c2jName" : "Roles",
        "c2jShape" : "RolesMap",
        "variable" : {
          "variableName" : "roles",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "roles",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Roles",
          "marshallLocationName" : "Roles",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>\n@param roles The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.*/",
        "getterDocumentation" : "/**<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>\n@return The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.*/",
        "fluentSetterDocumentation" : "/**<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>\n@param roles The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>\n@param roles The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getIdentityPoolRolesResult",
        "variableType" : "GetIdentityPoolRolesResult",
        "variableDeclarationType" : "GetIdentityPoolRolesResult",
        "documentation" : null,
        "simpleType" : "GetIdentityPoolRolesResult",
        "variableSetterType" : "GetIdentityPoolRolesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolId" : {
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Roles" : {
          "documentation" : "<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>",
          "name" : "Roles",
          "c2jName" : "Roles",
          "c2jShape" : "RolesMap",
          "variable" : {
            "variableName" : "roles",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "roles",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Roles",
            "marshallLocationName" : "Roles",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>\n@param roles The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.*/",
          "getterDocumentation" : "/**<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>\n@return The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.*/",
          "fluentSetterDocumentation" : "/**<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>\n@param roles The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.</p>\n@param roles The map of roles associated with this pool. Currently only authenticated and unauthenticated roles are supported.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ResourceConflictException" : {
      "c2jName" : "ResourceConflictException",
      "documentation" : "Thrown when a user tries to use a login which is already linked to another account.",
      "shapeName" : "ResourceConflictException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "resourceConflictException",
        "variableType" : "ResourceConflictException",
        "variableDeclarationType" : "ResourceConflictException",
        "documentation" : null,
        "simpleType" : "ResourceConflictException",
        "variableSetterType" : "ResourceConflictException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ResourceConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ListIdentityPoolsRequest" : {
      "c2jName" : "ListIdentityPoolsInput",
      "documentation" : "Input to the ListIdentityPools action.",
      "shapeName" : "ListIdentityPoolsRequest",
      "deprecated" : false,
      "required" : [ "MaxResults" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "The maximum number of identities to return.",
        "name" : "MaxResults",
        "c2jName" : "MaxResults",
        "c2jShape" : "QueryLimit",
        "variable" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "The maximum number of identities to return.",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "MaxResults",
          "marshallLocationName" : "MaxResults",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.*/",
        "getterDocumentation" : "/**The maximum number of identities to return.\n@return The maximum number of identities to return.*/",
        "fluentSetterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A pagination token.",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationKey",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A pagination token.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.*/",
        "getterDocumentation" : "/**A pagination token.\n@return A pagination token.*/",
        "fluentSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listIdentityPoolsRequest",
        "variableType" : "ListIdentityPoolsRequest",
        "variableDeclarationType" : "ListIdentityPoolsRequest",
        "documentation" : null,
        "simpleType" : "ListIdentityPoolsRequest",
        "variableSetterType" : "ListIdentityPoolsRequest"
      },
      "marshaller" : {
        "action" : "ListIdentityPools",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.ListIdentityPools",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "A pagination token.",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationKey",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A pagination token.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.*/",
          "getterDocumentation" : "/**A pagination token.\n@return A pagination token.*/",
          "fluentSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "MaxResults" : {
          "documentation" : "The maximum number of identities to return.",
          "name" : "MaxResults",
          "c2jName" : "MaxResults",
          "c2jShape" : "QueryLimit",
          "variable" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "The maximum number of identities to return.",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "MaxResults",
            "marshallLocationName" : "MaxResults",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.*/",
          "getterDocumentation" : "/**The maximum number of identities to return.\n@return The maximum number of identities to return.*/",
          "fluentSetterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeIdentityResult" : {
      "c2jName" : "IdentityDescription",
      "documentation" : "A description of the identity.",
      "shapeName" : "DescribeIdentityResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "A unique identifier in the format REGION:GUID.",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
        "name" : "Logins",
        "c2jName" : "Logins",
        "c2jShape" : "LoginsList",
        "variable" : {
          "variableName" : "logins",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "logins",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Logins",
          "marshallLocationName" : "Logins",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.*/",
        "getterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@return A set of optional name-value pairs that map provider names to provider tokens.*/",
        "fluentSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLogins(java.util.Collection)} or {@link #withLogins(java.util.Collection)} if you want to override the existing values.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Date on which the identity was created.</p>",
        "name" : "CreationDate",
        "c2jName" : "CreationDate",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>Date on which the identity was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "CreationDate",
          "marshallLocationName" : "CreationDate",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.*/",
        "getterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@return Date on which the identity was created.*/",
        "fluentSetterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Date on which the identity was last modified.</p>",
        "name" : "LastModifiedDate",
        "c2jName" : "LastModifiedDate",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>Date on which the identity was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "LastModifiedDate",
          "marshallLocationName" : "LastModifiedDate",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.*/",
        "getterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@return Date on which the identity was last modified.*/",
        "fluentSetterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeIdentityResult",
        "variableType" : "DescribeIdentityResult",
        "variableDeclarationType" : "DescribeIdentityResult",
        "documentation" : null,
        "simpleType" : "DescribeIdentityResult",
        "variableSetterType" : "DescribeIdentityResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A unique identifier in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "LastModifiedDate" : {
          "documentation" : "<p>Date on which the identity was last modified.</p>",
          "name" : "LastModifiedDate",
          "c2jName" : "LastModifiedDate",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>Date on which the identity was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "LastModifiedDate",
            "marshallLocationName" : "LastModifiedDate",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.*/",
          "getterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@return Date on which the identity was last modified.*/",
          "fluentSetterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Date on which the identity was last modified.</p>\n@param lastModifiedDate Date on which the identity was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CreationDate" : {
          "documentation" : "<p>Date on which the identity was created.</p>",
          "name" : "CreationDate",
          "c2jName" : "CreationDate",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>Date on which the identity was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "CreationDate",
            "marshallLocationName" : "CreationDate",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.*/",
          "getterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@return Date on which the identity was created.*/",
          "fluentSetterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Date on which the identity was created.</p>\n@param creationDate Date on which the identity was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Logins" : {
          "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
          "name" : "Logins",
          "c2jName" : "Logins",
          "c2jShape" : "LoginsList",
          "variable" : {
            "variableName" : "logins",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "logins",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Logins",
            "marshallLocationName" : "Logins",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.*/",
          "getterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@return A set of optional name-value pairs that map provider names to provider tokens.*/",
          "fluentSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLogins(java.util.Collection)} or {@link #withLogins(java.util.Collection)} if you want to override the existing values.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetIdResult" : {
      "c2jName" : "GetIdResponse",
      "documentation" : "Returned in response to a GetId request.",
      "shapeName" : "GetIdResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "A unique identifier in the format REGION:GUID.",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getIdResult",
        "variableType" : "GetIdResult",
        "variableDeclarationType" : "GetIdResult",
        "documentation" : null,
        "simpleType" : "GetIdResult",
        "variableSetterType" : "GetIdResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A unique identifier in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UpdateIdentityPoolRequest" : {
      "c2jName" : "IdentityPool",
      "documentation" : "An object representing a Cognito identity pool.",
      "shapeName" : "UpdateIdentityPoolRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId", "IdentityPoolName", "AllowUnauthenticatedIdentities" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A string that you provide.</p>",
        "name" : "IdentityPoolName",
        "c2jName" : "IdentityPoolName",
        "c2jShape" : "IdentityPoolName",
        "variable" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A string that you provide.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolName",
          "marshallLocationName" : "IdentityPoolName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
        "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
        "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
        "name" : "AllowUnauthenticatedIdentities",
        "c2jName" : "AllowUnauthenticatedIdentities",
        "c2jShape" : "IdentityPoolUnauthenticated",
        "variable" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
          "marshallLocationName" : "AllowUnauthenticatedIdentities",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
        "getterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@return TRUE if the identity pool supports unauthenticated logins.*/",
        "fluentSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
        "name" : "SupportedLoginProviders",
        "c2jName" : "SupportedLoginProviders",
        "c2jShape" : "IdentityProviders",
        "variable" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SupportedLoginProviders",
          "marshallLocationName" : "SupportedLoginProviders",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
        "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
        "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
        "name" : "DeveloperProviderName",
        "c2jName" : "DeveloperProviderName",
        "c2jShape" : "DeveloperProviderName",
        "variable" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperProviderName",
          "marshallLocationName" : "DeveloperProviderName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
        "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
        "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
        "name" : "OpenIdConnectProviderARNs",
        "c2jName" : "OpenIdConnectProviderARNs",
        "c2jShape" : "OIDCProviderList",
        "variable" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "OpenIdConnectProviderARNs",
          "marshallLocationName" : "OpenIdConnectProviderARNs",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
        "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
        "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "updateIdentityPoolRequest",
        "variableType" : "UpdateIdentityPoolRequest",
        "variableDeclarationType" : "UpdateIdentityPoolRequest",
        "documentation" : null,
        "simpleType" : "UpdateIdentityPoolRequest",
        "variableSetterType" : "UpdateIdentityPoolRequest"
      },
      "marshaller" : {
        "action" : "UpdateIdentityPool",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.UpdateIdentityPool",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolName" : {
          "documentation" : "<p>A string that you provide.</p>",
          "name" : "IdentityPoolName",
          "c2jName" : "IdentityPoolName",
          "c2jShape" : "IdentityPoolName",
          "variable" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A string that you provide.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolName",
            "marshallLocationName" : "IdentityPoolName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
          "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
          "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DeveloperProviderName" : {
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "name" : "DeveloperProviderName",
          "c2jName" : "DeveloperProviderName",
          "c2jShape" : "DeveloperProviderName",
          "variable" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperProviderName",
            "marshallLocationName" : "DeveloperProviderName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
          "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
          "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AllowUnauthenticatedIdentities" : {
          "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
          "name" : "AllowUnauthenticatedIdentities",
          "c2jName" : "AllowUnauthenticatedIdentities",
          "c2jShape" : "IdentityPoolUnauthenticated",
          "variable" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
            "marshallLocationName" : "AllowUnauthenticatedIdentities",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
          "getterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@return TRUE if the identity pool supports unauthenticated logins.*/",
          "fluentSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OpenIdConnectProviderARNs" : {
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "name" : "OpenIdConnectProviderARNs",
          "c2jName" : "OpenIdConnectProviderARNs",
          "c2jShape" : "OIDCProviderList",
          "variable" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "OpenIdConnectProviderARNs",
            "marshallLocationName" : "OpenIdConnectProviderARNs",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
          "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
          "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SupportedLoginProviders" : {
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "name" : "SupportedLoginProviders",
          "c2jName" : "SupportedLoginProviders",
          "c2jShape" : "IdentityProviders",
          "variable" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SupportedLoginProviders",
            "marshallLocationName" : "SupportedLoginProviders",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
          "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
          "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeIdentityPoolRequest" : {
      "c2jName" : "DescribeIdentityPoolInput",
      "documentation" : "Input to the DescribeIdentityPool action.",
      "shapeName" : "DescribeIdentityPoolRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeIdentityPoolRequest",
        "variableType" : "DescribeIdentityPoolRequest",
        "variableDeclarationType" : "DescribeIdentityPoolRequest",
        "documentation" : null,
        "simpleType" : "DescribeIdentityPoolRequest",
        "variableSetterType" : "DescribeIdentityPoolRequest"
      },
      "marshaller" : {
        "action" : "DescribeIdentityPool",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.DescribeIdentityPool",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ExternalServiceException" : {
      "c2jName" : "ExternalServiceException",
      "documentation" : "<p>An exception thrown when a dependent service such as Facebook or Twitter is not responding</p>",
      "shapeName" : "ExternalServiceException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "externalServiceException",
        "variableType" : "ExternalServiceException",
        "variableDeclarationType" : "ExternalServiceException",
        "documentation" : null,
        "simpleType" : "ExternalServiceException",
        "variableSetterType" : "ExternalServiceException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ExternalServiceException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InvalidParameterException" : {
      "c2jName" : "InvalidParameterException",
      "documentation" : "Thrown for missing or bad input parameter(s).",
      "shapeName" : "InvalidParameterException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidParameterException",
        "variableType" : "InvalidParameterException",
        "variableDeclarationType" : "InvalidParameterException",
        "documentation" : null,
        "simpleType" : "InvalidParameterException",
        "variableSetterType" : "InvalidParameterException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidParameterException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DeveloperUserAlreadyRegisteredException" : {
      "c2jName" : "DeveloperUserAlreadyRegisteredException",
      "documentation" : "<p>The provided developer user identifier is already registered with Cognito under a different identity ID.</p>",
      "shapeName" : "DeveloperUserAlreadyRegisteredException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "developerUserAlreadyRegisteredException",
        "variableType" : "DeveloperUserAlreadyRegisteredException",
        "variableDeclarationType" : "DeveloperUserAlreadyRegisteredException",
        "documentation" : null,
        "simpleType" : "DeveloperUserAlreadyRegisteredException",
        "variableSetterType" : "DeveloperUserAlreadyRegisteredException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "DeveloperUserAlreadyRegisteredException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ListIdentityPoolsResult" : {
      "c2jName" : "ListIdentityPoolsResponse",
      "documentation" : "The result of a successful ListIdentityPools action.",
      "shapeName" : "ListIdentityPoolsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "The identity pools returned by the ListIdentityPools action.",
        "name" : "IdentityPools",
        "c2jName" : "IdentityPools",
        "c2jShape" : "IdentityPoolsList",
        "variable" : {
          "variableName" : "identityPools",
          "variableType" : "java.util.List<IdentityPoolShortDescription>",
          "variableDeclarationType" : "java.util.List<IdentityPoolShortDescription>",
          "documentation" : "The identity pools returned by the ListIdentityPools action.",
          "simpleType" : "List<IdentityPoolShortDescription>",
          "variableSetterType" : "java.util.Collection<IdentityPoolShortDescription>"
        },
        "setterModel" : {
          "variableName" : "identityPools",
          "variableType" : "java.util.List<IdentityPoolShortDescription>",
          "variableDeclarationType" : "java.util.List<IdentityPoolShortDescription>",
          "documentation" : "",
          "simpleType" : "List<IdentityPoolShortDescription>",
          "variableSetterType" : "java.util.Collection<IdentityPoolShortDescription>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<IdentityPoolShortDescription>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPools",
          "marshallLocationName" : "IdentityPools",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "IdentityPoolShortDescription",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "IdentityPoolShortDescription",
            "variable" : {
              "variableName" : "member",
              "variableType" : "IdentityPoolShortDescription",
              "variableDeclarationType" : "IdentityPoolShortDescription",
              "documentation" : "",
              "simpleType" : "IdentityPoolShortDescription",
              "variableSetterType" : "IdentityPoolShortDescription"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "IdentityPoolShortDescription",
              "variableDeclarationType" : "IdentityPoolShortDescription",
              "documentation" : "",
              "simpleType" : "IdentityPoolShortDescription",
              "variableSetterType" : "IdentityPoolShortDescription"
            },
            "getterModel" : {
              "returnType" : "IdentityPoolShortDescription",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "IdentityPoolShortDescription",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<IdentityPoolShortDescription>",
          "templateImplType" : "java.util.ArrayList<IdentityPoolShortDescription>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**The identity pools returned by the ListIdentityPools action.\n@param identityPools The identity pools returned by the ListIdentityPools action.*/",
        "getterDocumentation" : "/**The identity pools returned by the ListIdentityPools action.\n@return The identity pools returned by the ListIdentityPools action.*/",
        "fluentSetterDocumentation" : "/**The identity pools returned by the ListIdentityPools action.\n@param identityPools The identity pools returned by the ListIdentityPools action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The identity pools returned by the ListIdentityPools action.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIdentityPools(java.util.Collection)} or {@link #withIdentityPools(java.util.Collection)} if you want to override the existing values.</p>\n@param identityPools The identity pools returned by the ListIdentityPools action.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A pagination token.",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationKey",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A pagination token.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.*/",
        "getterDocumentation" : "/**A pagination token.\n@return A pagination token.*/",
        "fluentSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listIdentityPoolsResult",
        "variableType" : "ListIdentityPoolsResult",
        "variableDeclarationType" : "ListIdentityPoolsResult",
        "documentation" : null,
        "simpleType" : "ListIdentityPoolsResult",
        "variableSetterType" : "ListIdentityPoolsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "A pagination token.",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationKey",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A pagination token.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.*/",
          "getterDocumentation" : "/**A pagination token.\n@return A pagination token.*/",
          "fluentSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPools" : {
          "documentation" : "The identity pools returned by the ListIdentityPools action.",
          "name" : "IdentityPools",
          "c2jName" : "IdentityPools",
          "c2jShape" : "IdentityPoolsList",
          "variable" : {
            "variableName" : "identityPools",
            "variableType" : "java.util.List<IdentityPoolShortDescription>",
            "variableDeclarationType" : "java.util.List<IdentityPoolShortDescription>",
            "documentation" : "The identity pools returned by the ListIdentityPools action.",
            "simpleType" : "List<IdentityPoolShortDescription>",
            "variableSetterType" : "java.util.Collection<IdentityPoolShortDescription>"
          },
          "setterModel" : {
            "variableName" : "identityPools",
            "variableType" : "java.util.List<IdentityPoolShortDescription>",
            "variableDeclarationType" : "java.util.List<IdentityPoolShortDescription>",
            "documentation" : "",
            "simpleType" : "List<IdentityPoolShortDescription>",
            "variableSetterType" : "java.util.Collection<IdentityPoolShortDescription>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<IdentityPoolShortDescription>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPools",
            "marshallLocationName" : "IdentityPools",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "IdentityPoolShortDescription",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "IdentityPoolShortDescription",
              "variable" : {
                "variableName" : "member",
                "variableType" : "IdentityPoolShortDescription",
                "variableDeclarationType" : "IdentityPoolShortDescription",
                "documentation" : "",
                "simpleType" : "IdentityPoolShortDescription",
                "variableSetterType" : "IdentityPoolShortDescription"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "IdentityPoolShortDescription",
                "variableDeclarationType" : "IdentityPoolShortDescription",
                "documentation" : "",
                "simpleType" : "IdentityPoolShortDescription",
                "variableSetterType" : "IdentityPoolShortDescription"
              },
              "getterModel" : {
                "returnType" : "IdentityPoolShortDescription",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "IdentityPoolShortDescription",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<IdentityPoolShortDescription>",
            "templateImplType" : "java.util.ArrayList<IdentityPoolShortDescription>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**The identity pools returned by the ListIdentityPools action.\n@param identityPools The identity pools returned by the ListIdentityPools action.*/",
          "getterDocumentation" : "/**The identity pools returned by the ListIdentityPools action.\n@return The identity pools returned by the ListIdentityPools action.*/",
          "fluentSetterDocumentation" : "/**The identity pools returned by the ListIdentityPools action.\n@param identityPools The identity pools returned by the ListIdentityPools action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The identity pools returned by the ListIdentityPools action.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIdentityPools(java.util.Collection)} or {@link #withIdentityPools(java.util.Collection)} if you want to override the existing values.</p>\n@param identityPools The identity pools returned by the ListIdentityPools action.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetIdentityPoolRolesRequest" : {
      "c2jName" : "GetIdentityPoolRolesInput",
      "documentation" : "<p>Input to the <code>GetIdentityPoolRoles</code> action.</p>",
      "shapeName" : "GetIdentityPoolRolesRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getIdentityPoolRolesRequest",
        "variableType" : "GetIdentityPoolRolesRequest",
        "variableDeclarationType" : "GetIdentityPoolRolesRequest",
        "documentation" : null,
        "simpleType" : "GetIdentityPoolRolesRequest",
        "variableSetterType" : "GetIdentityPoolRolesRequest"
      },
      "marshaller" : {
        "action" : "GetIdentityPoolRoles",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.GetIdentityPoolRoles",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolId" : {
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetOpenIdTokenForDeveloperIdentityRequest" : {
      "c2jName" : "GetOpenIdTokenForDeveloperIdentityInput",
      "documentation" : "<p>Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.</p>",
      "shapeName" : "GetOpenIdTokenForDeveloperIdentityRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId", "Logins" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>",
        "name" : "Logins",
        "c2jName" : "Logins",
        "c2jShape" : "LoginsMap",
        "variable" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Logins",
          "marshallLocationName" : "Logins",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.*/",
        "getterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>\n@return A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.*/",
        "fluentSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>",
        "name" : "TokenDuration",
        "c2jName" : "TokenDuration",
        "c2jShape" : "TokenDuration",
        "variable" : {
          "variableName" : "tokenDuration",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "tokenDuration",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "TokenDuration",
          "marshallLocationName" : "TokenDuration",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>\n@param tokenDuration The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.*/",
        "getterDocumentation" : "/**<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>\n@return The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.*/",
        "fluentSetterDocumentation" : "/**<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>\n@param tokenDuration The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>\n@param tokenDuration The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getOpenIdTokenForDeveloperIdentityRequest",
        "variableType" : "GetOpenIdTokenForDeveloperIdentityRequest",
        "variableDeclarationType" : "GetOpenIdTokenForDeveloperIdentityRequest",
        "documentation" : null,
        "simpleType" : "GetOpenIdTokenForDeveloperIdentityRequest",
        "variableSetterType" : "GetOpenIdTokenForDeveloperIdentityRequest"
      },
      "marshaller" : {
        "action" : "GetOpenIdTokenForDeveloperIdentity",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "TokenDuration" : {
          "documentation" : "<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>",
          "name" : "TokenDuration",
          "c2jName" : "TokenDuration",
          "c2jShape" : "TokenDuration",
          "variable" : {
            "variableName" : "tokenDuration",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "tokenDuration",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "TokenDuration",
            "marshallLocationName" : "TokenDuration",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>\n@param tokenDuration The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.*/",
          "getterDocumentation" : "/**<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>\n@return The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.*/",
          "fluentSetterDocumentation" : "/**<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>\n@param tokenDuration The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.</p>\n@param tokenDuration The expiration time of the token, in seconds. You can specify a custom expiration time for the token so that you can cache it. If you don't provide an expiration time, the token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS credentials, which are valid for a maximum of one hour. The maximum token duration you can set is 24 hours. You should take care in setting the expiration time for a token, as there are significant security implications: an attacker could use a leaked token to access your AWS resources for the token's duration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Logins" : {
          "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>",
          "name" : "Logins",
          "c2jName" : "Logins",
          "c2jShape" : "LoginsMap",
          "variable" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Logins",
            "marshallLocationName" : "Logins",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.*/",
          "getterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>\n@return A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.*/",
          "fluentSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens. Each name-value pair represents a user from a public provider or developer provider. If the user is from a developer provider, the name-value pair will follow the syntax <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer provider is the \"domain\" by which Cognito will refer to your users; you provided this domain while creating/updating the identity pool. The developer user identifier is an identifier from your backend that uniquely identifies a user. When you create an identity pool, you can specify the supported logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteIdentityPoolRequest" : {
      "c2jName" : "DeleteIdentityPoolInput",
      "documentation" : "<p>Input to the DeleteIdentityPool action.</p>",
      "shapeName" : "DeleteIdentityPoolRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteIdentityPoolRequest",
        "variableType" : "DeleteIdentityPoolRequest",
        "variableDeclarationType" : "DeleteIdentityPoolRequest",
        "documentation" : null,
        "simpleType" : "DeleteIdentityPoolRequest",
        "variableSetterType" : "DeleteIdentityPoolRequest"
      },
      "marshaller" : {
        "action" : "DeleteIdentityPool",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.DeleteIdentityPool",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "LookupDeveloperIdentityRequest" : {
      "c2jName" : "LookupDeveloperIdentityInput",
      "documentation" : "<p>Input to the <code>LookupDeveloperIdentityInput</code> action.</p>",
      "shapeName" : "LookupDeveloperIdentityRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>",
        "name" : "DeveloperUserIdentifier",
        "c2jName" : "DeveloperUserIdentifier",
        "c2jShape" : "DeveloperUserIdentifier",
        "variable" : {
          "variableName" : "developerUserIdentifier",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerUserIdentifier",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperUserIdentifier",
          "marshallLocationName" : "DeveloperUserIdentifier",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.*/",
        "getterDocumentation" : "/**<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>\n@return A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.*/",
        "fluentSetterDocumentation" : "/**<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The maximum number of identities to return.</p>",
        "name" : "MaxResults",
        "c2jName" : "MaxResults",
        "c2jShape" : "QueryLimit",
        "variable" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of identities to return.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "MaxResults",
          "marshallLocationName" : "MaxResults",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of identities to return.</p>\n@param maxResults The maximum number of identities to return.*/",
        "getterDocumentation" : "/**<p>The maximum number of identities to return.</p>\n@return The maximum number of identities to return.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of identities to return.</p>\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of identities to return.</p>\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationKey",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.*/",
        "getterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@return A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.*/",
        "fluentSetterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "lookupDeveloperIdentityRequest",
        "variableType" : "LookupDeveloperIdentityRequest",
        "variableDeclarationType" : "LookupDeveloperIdentityRequest",
        "documentation" : null,
        "simpleType" : "LookupDeveloperIdentityRequest",
        "variableSetterType" : "LookupDeveloperIdentityRequest"
      },
      "marshaller" : {
        "action" : "LookupDeveloperIdentity",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.LookupDeveloperIdentity",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DeveloperUserIdentifier" : {
          "documentation" : "<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>",
          "name" : "DeveloperUserIdentifier",
          "c2jName" : "DeveloperUserIdentifier",
          "c2jShape" : "DeveloperUserIdentifier",
          "variable" : {
            "variableName" : "developerUserIdentifier",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerUserIdentifier",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperUserIdentifier",
            "marshallLocationName" : "DeveloperUserIdentifier",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.*/",
          "getterDocumentation" : "/**<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>\n@return A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.*/",
          "fluentSetterDocumentation" : "/**<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.</p>\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user. Typically, a developer identity provider would issue many developer user identifiers, in keeping with the number of users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NextToken" : {
          "documentation" : "<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationKey",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.*/",
          "getterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@return A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.*/",
          "fluentSetterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.</p>\n@param nextToken A pagination token. The first call you make will have <code>NextToken</code> set to null. After that the service will return <code>NextToken</code> values as needed. For example, let's say you make a request with <code>MaxResults</code> set to 10, and there are 20 matches in the database. The service will return a pagination token as a part of the response. This token can be used to call the API again and get results starting from the 11th match.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "MaxResults" : {
          "documentation" : "<p>The maximum number of identities to return.</p>",
          "name" : "MaxResults",
          "c2jName" : "MaxResults",
          "c2jShape" : "QueryLimit",
          "variable" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of identities to return.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "MaxResults",
            "marshallLocationName" : "MaxResults",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of identities to return.</p>\n@param maxResults The maximum number of identities to return.*/",
          "getterDocumentation" : "/**<p>The maximum number of identities to return.</p>\n@return The maximum number of identities to return.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of identities to return.</p>\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of identities to return.</p>\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetCredentialsForIdentityResult" : {
      "c2jName" : "GetCredentialsForIdentityResponse",
      "documentation" : "<p>Returned in response to a successful <code>GetCredentialsForIdentity</code> operation.</p>",
      "shapeName" : "GetCredentialsForIdentityResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Credentials for the provided identity ID.</p>",
        "name" : "Credentials",
        "c2jName" : "Credentials",
        "c2jShape" : "Credentials",
        "variable" : {
          "variableName" : "credentials",
          "variableType" : "Credentials",
          "variableDeclarationType" : "Credentials",
          "documentation" : "<p>Credentials for the provided identity ID.</p>",
          "simpleType" : "Credentials",
          "variableSetterType" : "Credentials"
        },
        "setterModel" : {
          "variableName" : "credentials",
          "variableType" : "Credentials",
          "variableDeclarationType" : "Credentials",
          "documentation" : "",
          "simpleType" : "Credentials",
          "variableSetterType" : "Credentials"
        },
        "getterModel" : {
          "returnType" : "Credentials",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Credentials",
          "marshallLocationName" : "Credentials",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Credentials for the provided identity ID.</p>\n@param credentials Credentials for the provided identity ID.*/",
        "getterDocumentation" : "/**<p>Credentials for the provided identity ID.</p>\n@return Credentials for the provided identity ID.*/",
        "fluentSetterDocumentation" : "/**<p>Credentials for the provided identity ID.</p>\n@param credentials Credentials for the provided identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Credentials for the provided identity ID.</p>\n@param credentials Credentials for the provided identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getCredentialsForIdentityResult",
        "variableType" : "GetCredentialsForIdentityResult",
        "variableDeclarationType" : "GetCredentialsForIdentityResult",
        "documentation" : null,
        "simpleType" : "GetCredentialsForIdentityResult",
        "variableSetterType" : "GetCredentialsForIdentityResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Credentials" : {
          "documentation" : "<p>Credentials for the provided identity ID.</p>",
          "name" : "Credentials",
          "c2jName" : "Credentials",
          "c2jShape" : "Credentials",
          "variable" : {
            "variableName" : "credentials",
            "variableType" : "Credentials",
            "variableDeclarationType" : "Credentials",
            "documentation" : "<p>Credentials for the provided identity ID.</p>",
            "simpleType" : "Credentials",
            "variableSetterType" : "Credentials"
          },
          "setterModel" : {
            "variableName" : "credentials",
            "variableType" : "Credentials",
            "variableDeclarationType" : "Credentials",
            "documentation" : "",
            "simpleType" : "Credentials",
            "variableSetterType" : "Credentials"
          },
          "getterModel" : {
            "returnType" : "Credentials",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Credentials",
            "marshallLocationName" : "Credentials",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Credentials for the provided identity ID.</p>\n@param credentials Credentials for the provided identity ID.*/",
          "getterDocumentation" : "/**<p>Credentials for the provided identity ID.</p>\n@return Credentials for the provided identity ID.*/",
          "fluentSetterDocumentation" : "/**<p>Credentials for the provided identity ID.</p>\n@param credentials Credentials for the provided identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Credentials for the provided identity ID.</p>\n@param credentials Credentials for the provided identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetCredentialsForIdentityRequest" : {
      "c2jName" : "GetCredentialsForIdentityInput",
      "documentation" : "<p>Input to the <code>GetCredentialsForIdentity</code> action.</p>",
      "shapeName" : "GetCredentialsForIdentityRequest",
      "deprecated" : false,
      "required" : [ "IdentityId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens.</p>",
        "name" : "Logins",
        "c2jName" : "Logins",
        "c2jShape" : "LoginsMap",
        "variable" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Logins",
          "marshallLocationName" : "Logins",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.*/",
        "getterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p>\n@return A set of optional name-value pairs that map provider names to provider tokens.*/",
        "fluentSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getCredentialsForIdentityRequest",
        "variableType" : "GetCredentialsForIdentityRequest",
        "variableDeclarationType" : "GetCredentialsForIdentityRequest",
        "documentation" : null,
        "simpleType" : "GetCredentialsForIdentityRequest",
        "variableSetterType" : "GetCredentialsForIdentityRequest"
      },
      "marshaller" : {
        "action" : "GetCredentialsForIdentity",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.GetCredentialsForIdentity",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Logins" : {
          "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens.</p>",
          "name" : "Logins",
          "c2jName" : "Logins",
          "c2jShape" : "LoginsMap",
          "variable" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>A set of optional name-value pairs that map provider names to provider tokens.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Logins",
            "marshallLocationName" : "Logins",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.*/",
          "getterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p>\n@return A set of optional name-value pairs that map provider names to provider tokens.*/",
          "fluentSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A set of optional name-value pairs that map provider names to provider tokens.</p>\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UpdateIdentityPoolResult" : {
      "c2jName" : "IdentityPool",
      "documentation" : "An object representing a Cognito identity pool.",
      "shapeName" : "UpdateIdentityPoolResult",
      "deprecated" : false,
      "required" : [ "IdentityPoolId", "IdentityPoolName", "AllowUnauthenticatedIdentities" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A string that you provide.</p>",
        "name" : "IdentityPoolName",
        "c2jName" : "IdentityPoolName",
        "c2jShape" : "IdentityPoolName",
        "variable" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A string that you provide.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolName",
          "marshallLocationName" : "IdentityPoolName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
        "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
        "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
        "name" : "AllowUnauthenticatedIdentities",
        "c2jName" : "AllowUnauthenticatedIdentities",
        "c2jShape" : "IdentityPoolUnauthenticated",
        "variable" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
          "marshallLocationName" : "AllowUnauthenticatedIdentities",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
        "getterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@return TRUE if the identity pool supports unauthenticated logins.*/",
        "fluentSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
        "name" : "SupportedLoginProviders",
        "c2jName" : "SupportedLoginProviders",
        "c2jShape" : "IdentityProviders",
        "variable" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SupportedLoginProviders",
          "marshallLocationName" : "SupportedLoginProviders",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
        "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
        "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
        "name" : "DeveloperProviderName",
        "c2jName" : "DeveloperProviderName",
        "c2jShape" : "DeveloperProviderName",
        "variable" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperProviderName",
          "marshallLocationName" : "DeveloperProviderName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
        "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
        "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
        "name" : "OpenIdConnectProviderARNs",
        "c2jName" : "OpenIdConnectProviderARNs",
        "c2jShape" : "OIDCProviderList",
        "variable" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "OpenIdConnectProviderARNs",
          "marshallLocationName" : "OpenIdConnectProviderARNs",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
        "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
        "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "updateIdentityPoolResult",
        "variableType" : "UpdateIdentityPoolResult",
        "variableDeclarationType" : "UpdateIdentityPoolResult",
        "documentation" : null,
        "simpleType" : "UpdateIdentityPoolResult",
        "variableSetterType" : "UpdateIdentityPoolResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolName" : {
          "documentation" : "<p>A string that you provide.</p>",
          "name" : "IdentityPoolName",
          "c2jName" : "IdentityPoolName",
          "c2jShape" : "IdentityPoolName",
          "variable" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A string that you provide.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolName",
            "marshallLocationName" : "IdentityPoolName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
          "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
          "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DeveloperProviderName" : {
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "name" : "DeveloperProviderName",
          "c2jName" : "DeveloperProviderName",
          "c2jShape" : "DeveloperProviderName",
          "variable" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperProviderName",
            "marshallLocationName" : "DeveloperProviderName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
          "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
          "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AllowUnauthenticatedIdentities" : {
          "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
          "name" : "AllowUnauthenticatedIdentities",
          "c2jName" : "AllowUnauthenticatedIdentities",
          "c2jShape" : "IdentityPoolUnauthenticated",
          "variable" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "TRUE if the identity pool supports unauthenticated logins.",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
            "marshallLocationName" : "AllowUnauthenticatedIdentities",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
          "getterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@return TRUE if the identity pool supports unauthenticated logins.*/",
          "fluentSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**TRUE if the identity pool supports unauthenticated logins.\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OpenIdConnectProviderARNs" : {
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "name" : "OpenIdConnectProviderARNs",
          "c2jName" : "OpenIdConnectProviderARNs",
          "c2jShape" : "OIDCProviderList",
          "variable" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "OpenIdConnectProviderARNs",
            "marshallLocationName" : "OpenIdConnectProviderARNs",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
          "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
          "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SupportedLoginProviders" : {
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "name" : "SupportedLoginProviders",
          "c2jName" : "SupportedLoginProviders",
          "c2jShape" : "IdentityProviders",
          "variable" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SupportedLoginProviders",
            "marshallLocationName" : "SupportedLoginProviders",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
          "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
          "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListIdentitiesRequest" : {
      "c2jName" : "ListIdentitiesInput",
      "documentation" : "Input to the ListIdentities action.",
      "shapeName" : "ListIdentitiesRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolId", "MaxResults" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "The maximum number of identities to return.",
        "name" : "MaxResults",
        "c2jName" : "MaxResults",
        "c2jShape" : "QueryLimit",
        "variable" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "The maximum number of identities to return.",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "MaxResults",
          "marshallLocationName" : "MaxResults",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.*/",
        "getterDocumentation" : "/**The maximum number of identities to return.\n@return The maximum number of identities to return.*/",
        "fluentSetterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A pagination token.",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationKey",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A pagination token.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.*/",
        "getterDocumentation" : "/**A pagination token.\n@return A pagination token.*/",
        "fluentSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>",
        "name" : "HideDisabled",
        "c2jName" : "HideDisabled",
        "c2jShape" : "HideDisabled",
        "variable" : {
          "variableName" : "hideDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "hideDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "HideDisabled",
          "marshallLocationName" : "HideDisabled",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>\n@param hideDisabled An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.*/",
        "getterDocumentation" : "/**<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>\n@return An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.*/",
        "fluentSetterDocumentation" : "/**<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>\n@param hideDisabled An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>\n@param hideDisabled An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listIdentitiesRequest",
        "variableType" : "ListIdentitiesRequest",
        "variableDeclarationType" : "ListIdentitiesRequest",
        "documentation" : null,
        "simpleType" : "ListIdentitiesRequest",
        "variableSetterType" : "ListIdentitiesRequest"
      },
      "marshaller" : {
        "action" : "ListIdentities",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.ListIdentities",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "A pagination token.",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationKey",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A pagination token.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.*/",
          "getterDocumentation" : "/**A pagination token.\n@return A pagination token.*/",
          "fluentSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "MaxResults" : {
          "documentation" : "The maximum number of identities to return.",
          "name" : "MaxResults",
          "c2jName" : "MaxResults",
          "c2jShape" : "QueryLimit",
          "variable" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "The maximum number of identities to return.",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "MaxResults",
            "marshallLocationName" : "MaxResults",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.*/",
          "getterDocumentation" : "/**The maximum number of identities to return.\n@return The maximum number of identities to return.*/",
          "fluentSetterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**The maximum number of identities to return.\n@param maxResults The maximum number of identities to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "HideDisabled" : {
          "documentation" : "<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>",
          "name" : "HideDisabled",
          "c2jName" : "HideDisabled",
          "c2jShape" : "HideDisabled",
          "variable" : {
            "variableName" : "hideDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "hideDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "HideDisabled",
            "marshallLocationName" : "HideDisabled",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>\n@param hideDisabled An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.*/",
          "getterDocumentation" : "/**<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>\n@return An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.*/",
          "fluentSetterDocumentation" : "/**<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>\n@param hideDisabled An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.</p>\n@param hideDisabled An optional boolean parameter that allows you to hide disabled identities. If omitted, the ListIdentities API will include disabled identities in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetOpenIdTokenForDeveloperIdentityResult" : {
      "c2jName" : "GetOpenIdTokenForDeveloperIdentityResponse",
      "documentation" : "<p>Returned in response to a successful <code>GetOpenIdTokenForDeveloperIdentity</code> request.</p>",
      "shapeName" : "GetOpenIdTokenForDeveloperIdentityResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>An OpenID token.</p>",
        "name" : "Token",
        "c2jName" : "Token",
        "c2jShape" : "OIDCToken",
        "variable" : {
          "variableName" : "token",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An OpenID token.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "token",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Token",
          "marshallLocationName" : "Token",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An OpenID token.</p>\n@param token An OpenID token.*/",
        "getterDocumentation" : "/**<p>An OpenID token.</p>\n@return An OpenID token.*/",
        "fluentSetterDocumentation" : "/**<p>An OpenID token.</p>\n@param token An OpenID token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An OpenID token.</p>\n@param token An OpenID token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getOpenIdTokenForDeveloperIdentityResult",
        "variableType" : "GetOpenIdTokenForDeveloperIdentityResult",
        "variableDeclarationType" : "GetOpenIdTokenForDeveloperIdentityResult",
        "documentation" : null,
        "simpleType" : "GetOpenIdTokenForDeveloperIdentityResult",
        "variableSetterType" : "GetOpenIdTokenForDeveloperIdentityResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Token" : {
          "documentation" : "<p>An OpenID token.</p>",
          "name" : "Token",
          "c2jName" : "Token",
          "c2jShape" : "OIDCToken",
          "variable" : {
            "variableName" : "token",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An OpenID token.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "token",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Token",
            "marshallLocationName" : "Token",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An OpenID token.</p>\n@param token An OpenID token.*/",
          "getterDocumentation" : "/**<p>An OpenID token.</p>\n@return An OpenID token.*/",
          "fluentSetterDocumentation" : "/**<p>An OpenID token.</p>\n@param token An OpenID token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An OpenID token.</p>\n@param token An OpenID token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UnlinkDeveloperIdentityRequest" : {
      "c2jName" : "UnlinkDeveloperIdentityInput",
      "documentation" : "<p>Input to the <code>UnlinkDeveloperIdentity</code> action.</p>",
      "shapeName" : "UnlinkDeveloperIdentityRequest",
      "deprecated" : false,
      "required" : [ "IdentityId", "IdentityPoolId", "DeveloperProviderName", "DeveloperUserIdentifier" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
        "name" : "DeveloperProviderName",
        "c2jName" : "DeveloperProviderName",
        "c2jShape" : "DeveloperProviderName",
        "variable" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperProviderName",
          "marshallLocationName" : "DeveloperProviderName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
        "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
        "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A unique ID used by your backend authentication process to identify a user.",
        "name" : "DeveloperUserIdentifier",
        "c2jName" : "DeveloperUserIdentifier",
        "c2jShape" : "DeveloperUserIdentifier",
        "variable" : {
          "variableName" : "developerUserIdentifier",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A unique ID used by your backend authentication process to identify a user.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerUserIdentifier",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperUserIdentifier",
          "marshallLocationName" : "DeveloperUserIdentifier",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A unique ID used by your backend authentication process to identify a user.\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user.*/",
        "getterDocumentation" : "/**A unique ID used by your backend authentication process to identify a user.\n@return A unique ID used by your backend authentication process to identify a user.*/",
        "fluentSetterDocumentation" : "/**A unique ID used by your backend authentication process to identify a user.\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A unique ID used by your backend authentication process to identify a user.\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "unlinkDeveloperIdentityRequest",
        "variableType" : "UnlinkDeveloperIdentityRequest",
        "variableDeclarationType" : "UnlinkDeveloperIdentityRequest",
        "documentation" : null,
        "simpleType" : "UnlinkDeveloperIdentityRequest",
        "variableSetterType" : "UnlinkDeveloperIdentityRequest"
      },
      "marshaller" : {
        "action" : "UnlinkDeveloperIdentity",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.UnlinkDeveloperIdentity",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DeveloperUserIdentifier" : {
          "documentation" : "A unique ID used by your backend authentication process to identify a user.",
          "name" : "DeveloperUserIdentifier",
          "c2jName" : "DeveloperUserIdentifier",
          "c2jShape" : "DeveloperUserIdentifier",
          "variable" : {
            "variableName" : "developerUserIdentifier",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A unique ID used by your backend authentication process to identify a user.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerUserIdentifier",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperUserIdentifier",
            "marshallLocationName" : "DeveloperUserIdentifier",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A unique ID used by your backend authentication process to identify a user.\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user.*/",
          "getterDocumentation" : "/**A unique ID used by your backend authentication process to identify a user.\n@return A unique ID used by your backend authentication process to identify a user.*/",
          "fluentSetterDocumentation" : "/**A unique ID used by your backend authentication process to identify a user.\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A unique ID used by your backend authentication process to identify a user.\n@param developerUserIdentifier A unique ID used by your backend authentication process to identify a user.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DeveloperProviderName" : {
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
          "name" : "DeveloperProviderName",
          "c2jName" : "DeveloperProviderName",
          "c2jShape" : "DeveloperProviderName",
          "variable" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The \"domain\" by which Cognito will refer to your users.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperProviderName",
            "marshallLocationName" : "DeveloperProviderName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.*/",
          "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@return The \"domain\" by which Cognito will refer to your users.*/",
          "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>An identity pool ID in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>An identity pool ID in the format REGION:GUID.</p>\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetOpenIdTokenResult" : {
      "c2jName" : "GetOpenIdTokenResponse",
      "documentation" : "Returned in response to a successful GetOpenIdToken request.",
      "shapeName" : "GetOpenIdTokenResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@param identityId A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.*/",
        "getterDocumentation" : "/**A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@return A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.*/",
        "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@param identityId A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@param identityId A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "An OpenID token, valid for 15 minutes.",
        "name" : "Token",
        "c2jName" : "Token",
        "c2jShape" : "OIDCToken",
        "variable" : {
          "variableName" : "token",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An OpenID token, valid for 15 minutes.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "token",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Token",
          "marshallLocationName" : "Token",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An OpenID token, valid for 15 minutes.\n@param token An OpenID token, valid for 15 minutes.*/",
        "getterDocumentation" : "/**An OpenID token, valid for 15 minutes.\n@return An OpenID token, valid for 15 minutes.*/",
        "fluentSetterDocumentation" : "/**An OpenID token, valid for 15 minutes.\n@param token An OpenID token, valid for 15 minutes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An OpenID token, valid for 15 minutes.\n@param token An OpenID token, valid for 15 minutes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getOpenIdTokenResult",
        "variableType" : "GetOpenIdTokenResult",
        "variableDeclarationType" : "GetOpenIdTokenResult",
        "documentation" : null,
        "simpleType" : "GetOpenIdTokenResult",
        "variableSetterType" : "GetOpenIdTokenResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@param identityId A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.*/",
          "getterDocumentation" : "/**A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@return A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.*/",
          "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@param identityId A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@param identityId A unique identifier in the format REGION:GUID. Note that the IdentityId returned may not match the one passed on input.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Token" : {
          "documentation" : "An OpenID token, valid for 15 minutes.",
          "name" : "Token",
          "c2jName" : "Token",
          "c2jShape" : "OIDCToken",
          "variable" : {
            "variableName" : "token",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An OpenID token, valid for 15 minutes.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "token",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Token",
            "marshallLocationName" : "Token",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An OpenID token, valid for 15 minutes.\n@param token An OpenID token, valid for 15 minutes.*/",
          "getterDocumentation" : "/**An OpenID token, valid for 15 minutes.\n@return An OpenID token, valid for 15 minutes.*/",
          "fluentSetterDocumentation" : "/**An OpenID token, valid for 15 minutes.\n@param token An OpenID token, valid for 15 minutes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An OpenID token, valid for 15 minutes.\n@param token An OpenID token, valid for 15 minutes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateIdentityPoolRequest" : {
      "c2jName" : "CreateIdentityPoolInput",
      "documentation" : "<p>Input to the CreateIdentityPool action.</p>",
      "shapeName" : "CreateIdentityPoolRequest",
      "deprecated" : false,
      "required" : [ "IdentityPoolName", "AllowUnauthenticatedIdentities" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A string that you provide.</p>",
        "name" : "IdentityPoolName",
        "c2jName" : "IdentityPoolName",
        "c2jShape" : "IdentityPoolName",
        "variable" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A string that you provide.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolName",
          "marshallLocationName" : "IdentityPoolName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
        "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
        "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>TRUE if the identity pool supports unauthenticated logins.</p>",
        "name" : "AllowUnauthenticatedIdentities",
        "c2jName" : "AllowUnauthenticatedIdentities",
        "c2jShape" : "IdentityPoolUnauthenticated",
        "variable" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>TRUE if the identity pool supports unauthenticated logins.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "allowUnauthenticatedIdentities",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
          "marshallLocationName" : "AllowUnauthenticatedIdentities",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>TRUE if the identity pool supports unauthenticated logins.</p>\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
        "getterDocumentation" : "/**<p>TRUE if the identity pool supports unauthenticated logins.</p>\n@return TRUE if the identity pool supports unauthenticated logins.*/",
        "fluentSetterDocumentation" : "/**<p>TRUE if the identity pool supports unauthenticated logins.</p>\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>TRUE if the identity pool supports unauthenticated logins.</p>\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
        "name" : "SupportedLoginProviders",
        "c2jName" : "SupportedLoginProviders",
        "c2jShape" : "IdentityProviders",
        "variable" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "supportedLoginProviders",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SupportedLoginProviders",
          "marshallLocationName" : "SupportedLoginProviders",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
        "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
        "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>",
        "name" : "DeveloperProviderName",
        "c2jName" : "DeveloperProviderName",
        "c2jShape" : "DeveloperProviderName",
        "variable" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "developerProviderName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "DeveloperProviderName",
          "marshallLocationName" : "DeveloperProviderName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.*/",
        "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>\n@return The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.*/",
        "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
        "name" : "OpenIdConnectProviderARNs",
        "c2jName" : "OpenIdConnectProviderARNs",
        "c2jShape" : "OIDCProviderList",
        "variable" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "openIdConnectProviderARNs",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "OpenIdConnectProviderARNs",
          "marshallLocationName" : "OpenIdConnectProviderARNs",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
        "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
        "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createIdentityPoolRequest",
        "variableType" : "CreateIdentityPoolRequest",
        "variableDeclarationType" : "CreateIdentityPoolRequest",
        "documentation" : null,
        "simpleType" : "CreateIdentityPoolRequest",
        "variableSetterType" : "CreateIdentityPoolRequest"
      },
      "marshaller" : {
        "action" : "CreateIdentityPool",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.CreateIdentityPool",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityPoolName" : {
          "documentation" : "<p>A string that you provide.</p>",
          "name" : "IdentityPoolName",
          "c2jName" : "IdentityPoolName",
          "c2jShape" : "IdentityPoolName",
          "variable" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A string that you provide.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolName",
            "marshallLocationName" : "IdentityPoolName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.*/",
          "getterDocumentation" : "/**<p>A string that you provide.</p>\n@return A string that you provide.*/",
          "fluentSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A string that you provide.</p>\n@param identityPoolName A string that you provide.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DeveloperProviderName" : {
          "documentation" : "<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>",
          "name" : "DeveloperProviderName",
          "c2jName" : "DeveloperProviderName",
          "c2jShape" : "DeveloperProviderName",
          "variable" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "developerProviderName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "DeveloperProviderName",
            "marshallLocationName" : "DeveloperProviderName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.*/",
          "getterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>\n@return The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.*/",
          "fluentSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.</p>\n@param developerProviderName The \"domain\" by which Cognito will refer to your users. This name acts as a placeholder that allows your backend and the Cognito service to communicate about the developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well as period (<code>.</code>), underscore (<code>_</code>), and dash (<code>-</code>).</p> <p>Once you have set a developer provider name, you cannot change it. Please take care in setting this parameter.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AllowUnauthenticatedIdentities" : {
          "documentation" : "<p>TRUE if the identity pool supports unauthenticated logins.</p>",
          "name" : "AllowUnauthenticatedIdentities",
          "c2jName" : "AllowUnauthenticatedIdentities",
          "c2jShape" : "IdentityPoolUnauthenticated",
          "variable" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>TRUE if the identity pool supports unauthenticated logins.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "allowUnauthenticatedIdentities",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AllowUnauthenticatedIdentities",
            "marshallLocationName" : "AllowUnauthenticatedIdentities",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>TRUE if the identity pool supports unauthenticated logins.</p>\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.*/",
          "getterDocumentation" : "/**<p>TRUE if the identity pool supports unauthenticated logins.</p>\n@return TRUE if the identity pool supports unauthenticated logins.*/",
          "fluentSetterDocumentation" : "/**<p>TRUE if the identity pool supports unauthenticated logins.</p>\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>TRUE if the identity pool supports unauthenticated logins.</p>\n@param allowUnauthenticatedIdentities TRUE if the identity pool supports unauthenticated logins.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OpenIdConnectProviderARNs" : {
          "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
          "name" : "OpenIdConnectProviderARNs",
          "c2jName" : "OpenIdConnectProviderARNs",
          "c2jShape" : "OIDCProviderList",
          "variable" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A list of OpendID Connect provider ARNs.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "openIdConnectProviderARNs",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "OpenIdConnectProviderARNs",
            "marshallLocationName" : "OpenIdConnectProviderARNs",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.*/",
          "getterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@return A list of OpendID Connect provider ARNs.*/",
          "fluentSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of OpendID Connect provider ARNs.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setOpenIdConnectProviderARNs(java.util.Collection)} or {@link #withOpenIdConnectProviderARNs(java.util.Collection)} if you want to override the existing values.</p>\n@param openIdConnectProviderARNs A list of OpendID Connect provider ARNs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SupportedLoginProviders" : {
          "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
          "name" : "SupportedLoginProviders",
          "c2jName" : "SupportedLoginProviders",
          "c2jShape" : "IdentityProviders",
          "variable" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>Optional key:value pairs mapping provider names to provider app IDs.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "supportedLoginProviders",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SupportedLoginProviders",
            "marshallLocationName" : "SupportedLoginProviders",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.*/",
          "getterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@return Optional key:value pairs mapping provider names to provider app IDs.*/",
          "fluentSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n@param supportedLoginProviders Optional key:value pairs mapping provider names to provider app IDs.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListIdentitiesResult" : {
      "c2jName" : "ListIdentitiesResponse",
      "documentation" : "The response to a ListIdentities request.",
      "shapeName" : "ListIdentitiesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "An identity pool ID in the format REGION:GUID.",
        "name" : "IdentityPoolId",
        "c2jName" : "IdentityPoolId",
        "c2jShape" : "IdentityPoolId",
        "variable" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityPoolId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityPoolId",
          "marshallLocationName" : "IdentityPoolId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
        "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "An object containing a set of identities and associated mappings.",
        "name" : "Identities",
        "c2jName" : "Identities",
        "c2jShape" : "IdentitiesList",
        "variable" : {
          "variableName" : "identities",
          "variableType" : "java.util.List<IdentityDescription>",
          "variableDeclarationType" : "java.util.List<IdentityDescription>",
          "documentation" : "An object containing a set of identities and associated mappings.",
          "simpleType" : "List<IdentityDescription>",
          "variableSetterType" : "java.util.Collection<IdentityDescription>"
        },
        "setterModel" : {
          "variableName" : "identities",
          "variableType" : "java.util.List<IdentityDescription>",
          "variableDeclarationType" : "java.util.List<IdentityDescription>",
          "documentation" : "",
          "simpleType" : "List<IdentityDescription>",
          "variableSetterType" : "java.util.Collection<IdentityDescription>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<IdentityDescription>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Identities",
          "marshallLocationName" : "Identities",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "IdentityDescription",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "IdentityDescription",
            "variable" : {
              "variableName" : "member",
              "variableType" : "IdentityDescription",
              "variableDeclarationType" : "IdentityDescription",
              "documentation" : "",
              "simpleType" : "IdentityDescription",
              "variableSetterType" : "IdentityDescription"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "IdentityDescription",
              "variableDeclarationType" : "IdentityDescription",
              "documentation" : "",
              "simpleType" : "IdentityDescription",
              "variableSetterType" : "IdentityDescription"
            },
            "getterModel" : {
              "returnType" : "IdentityDescription",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "IdentityDescription",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<IdentityDescription>",
          "templateImplType" : "java.util.ArrayList<IdentityDescription>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**An object containing a set of identities and associated mappings.\n@param identities An object containing a set of identities and associated mappings.*/",
        "getterDocumentation" : "/**An object containing a set of identities and associated mappings.\n@return An object containing a set of identities and associated mappings.*/",
        "fluentSetterDocumentation" : "/**An object containing a set of identities and associated mappings.\n@param identities An object containing a set of identities and associated mappings.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**An object containing a set of identities and associated mappings.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIdentities(java.util.Collection)} or {@link #withIdentities(java.util.Collection)} if you want to override the existing values.</p>\n@param identities An object containing a set of identities and associated mappings.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A pagination token.",
        "name" : "NextToken",
        "c2jName" : "NextToken",
        "c2jShape" : "PaginationKey",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A pagination token.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextToken",
          "marshallLocationName" : "NextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.*/",
        "getterDocumentation" : "/**A pagination token.\n@return A pagination token.*/",
        "fluentSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listIdentitiesResult",
        "variableType" : "ListIdentitiesResult",
        "variableDeclarationType" : "ListIdentitiesResult",
        "documentation" : null,
        "simpleType" : "ListIdentitiesResult",
        "variableSetterType" : "ListIdentitiesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "A pagination token.",
          "name" : "NextToken",
          "c2jName" : "NextToken",
          "c2jShape" : "PaginationKey",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A pagination token.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextToken",
            "marshallLocationName" : "NextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.*/",
          "getterDocumentation" : "/**A pagination token.\n@return A pagination token.*/",
          "fluentSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A pagination token.\n@param nextToken A pagination token.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "IdentityPoolId" : {
          "documentation" : "An identity pool ID in the format REGION:GUID.",
          "name" : "IdentityPoolId",
          "c2jName" : "IdentityPoolId",
          "c2jShape" : "IdentityPoolId",
          "variable" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "An identity pool ID in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityPoolId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityPoolId",
            "marshallLocationName" : "IdentityPoolId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.*/",
          "getterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@return An identity pool ID in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An identity pool ID in the format REGION:GUID.\n@param identityPoolId An identity pool ID in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Identities" : {
          "documentation" : "An object containing a set of identities and associated mappings.",
          "name" : "Identities",
          "c2jName" : "Identities",
          "c2jShape" : "IdentitiesList",
          "variable" : {
            "variableName" : "identities",
            "variableType" : "java.util.List<IdentityDescription>",
            "variableDeclarationType" : "java.util.List<IdentityDescription>",
            "documentation" : "An object containing a set of identities and associated mappings.",
            "simpleType" : "List<IdentityDescription>",
            "variableSetterType" : "java.util.Collection<IdentityDescription>"
          },
          "setterModel" : {
            "variableName" : "identities",
            "variableType" : "java.util.List<IdentityDescription>",
            "variableDeclarationType" : "java.util.List<IdentityDescription>",
            "documentation" : "",
            "simpleType" : "List<IdentityDescription>",
            "variableSetterType" : "java.util.Collection<IdentityDescription>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<IdentityDescription>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Identities",
            "marshallLocationName" : "Identities",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "IdentityDescription",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "IdentityDescription",
              "variable" : {
                "variableName" : "member",
                "variableType" : "IdentityDescription",
                "variableDeclarationType" : "IdentityDescription",
                "documentation" : "",
                "simpleType" : "IdentityDescription",
                "variableSetterType" : "IdentityDescription"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "IdentityDescription",
                "variableDeclarationType" : "IdentityDescription",
                "documentation" : "",
                "simpleType" : "IdentityDescription",
                "variableSetterType" : "IdentityDescription"
              },
              "getterModel" : {
                "returnType" : "IdentityDescription",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "IdentityDescription",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<IdentityDescription>",
            "templateImplType" : "java.util.ArrayList<IdentityDescription>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**An object containing a set of identities and associated mappings.\n@param identities An object containing a set of identities and associated mappings.*/",
          "getterDocumentation" : "/**An object containing a set of identities and associated mappings.\n@return An object containing a set of identities and associated mappings.*/",
          "fluentSetterDocumentation" : "/**An object containing a set of identities and associated mappings.\n@param identities An object containing a set of identities and associated mappings.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**An object containing a set of identities and associated mappings.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setIdentities(java.util.Collection)} or {@link #withIdentities(java.util.Collection)} if you want to override the existing values.</p>\n@param identities An object containing a set of identities and associated mappings.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UnlinkIdentityRequest" : {
      "c2jName" : "UnlinkIdentityInput",
      "documentation" : "Input to the UnlinkIdentity action.",
      "shapeName" : "UnlinkIdentityRequest",
      "deprecated" : false,
      "required" : [ "IdentityId", "Logins", "LoginsToRemove" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "A unique identifier in the format REGION:GUID.",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
        "name" : "Logins",
        "c2jName" : "Logins",
        "c2jShape" : "LoginsMap",
        "variable" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "logins",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Logins",
          "marshallLocationName" : "Logins",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.*/",
        "getterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@return A set of optional name-value pairs that map provider names to provider tokens.*/",
        "fluentSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "Provider names to unlink from this identity.",
        "name" : "LoginsToRemove",
        "c2jName" : "LoginsToRemove",
        "c2jShape" : "LoginsList",
        "variable" : {
          "variableName" : "loginsToRemove",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "Provider names to unlink from this identity.",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "loginsToRemove",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "LoginsToRemove",
          "marshallLocationName" : "LoginsToRemove",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**Provider names to unlink from this identity.\n@param loginsToRemove Provider names to unlink from this identity.*/",
        "getterDocumentation" : "/**Provider names to unlink from this identity.\n@return Provider names to unlink from this identity.*/",
        "fluentSetterDocumentation" : "/**Provider names to unlink from this identity.\n@param loginsToRemove Provider names to unlink from this identity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**Provider names to unlink from this identity.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLoginsToRemove(java.util.Collection)} or {@link #withLoginsToRemove(java.util.Collection)} if you want to override the existing values.</p>\n@param loginsToRemove Provider names to unlink from this identity.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "unlinkIdentityRequest",
        "variableType" : "UnlinkIdentityRequest",
        "variableDeclarationType" : "UnlinkIdentityRequest",
        "documentation" : null,
        "simpleType" : "UnlinkIdentityRequest",
        "variableSetterType" : "UnlinkIdentityRequest"
      },
      "marshaller" : {
        "action" : "UnlinkIdentity",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.UnlinkIdentity",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "A unique identifier in the format REGION:GUID.",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "A unique identifier in the format REGION:GUID.",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A unique identifier in the format REGION:GUID.\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "LoginsToRemove" : {
          "documentation" : "Provider names to unlink from this identity.",
          "name" : "LoginsToRemove",
          "c2jName" : "LoginsToRemove",
          "c2jShape" : "LoginsList",
          "variable" : {
            "variableName" : "loginsToRemove",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "Provider names to unlink from this identity.",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "loginsToRemove",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "LoginsToRemove",
            "marshallLocationName" : "LoginsToRemove",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**Provider names to unlink from this identity.\n@param loginsToRemove Provider names to unlink from this identity.*/",
          "getterDocumentation" : "/**Provider names to unlink from this identity.\n@return Provider names to unlink from this identity.*/",
          "fluentSetterDocumentation" : "/**Provider names to unlink from this identity.\n@param loginsToRemove Provider names to unlink from this identity.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**Provider names to unlink from this identity.\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLoginsToRemove(java.util.Collection)} or {@link #withLoginsToRemove(java.util.Collection)} if you want to override the existing values.</p>\n@param loginsToRemove Provider names to unlink from this identity.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Logins" : {
          "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
          "name" : "Logins",
          "c2jName" : "Logins",
          "c2jShape" : "LoginsMap",
          "variable" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "A set of optional name-value pairs that map provider names to provider tokens.",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "logins",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Logins",
            "marshallLocationName" : "Logins",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.*/",
          "getterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@return A set of optional name-value pairs that map provider names to provider tokens.*/",
          "fluentSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**A set of optional name-value pairs that map provider names to provider tokens.\n@param logins A set of optional name-value pairs that map provider names to provider tokens.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "documentation" : "Thrown when the requested resource (for example, a dataset or record) does not exist.",
      "shapeName" : "ResourceNotFoundException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "variableDeclarationType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DescribeIdentityRequest" : {
      "c2jName" : "DescribeIdentityInput",
      "documentation" : "<p>Input to the <code>DescribeIdentity</code> action.</p>",
      "shapeName" : "DescribeIdentityRequest",
      "deprecated" : false,
      "required" : [ "IdentityId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeIdentityRequest",
        "variableType" : "DescribeIdentityRequest",
        "variableDeclarationType" : "DescribeIdentityRequest",
        "documentation" : null,
        "simpleType" : "DescribeIdentityRequest",
        "variableSetterType" : "DescribeIdentityRequest"
      },
      "marshaller" : {
        "action" : "DescribeIdentity",
        "verb" : "POST",
        "target" : "AWSCognitoIdentityService.DescribeIdentity",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UnprocessedIdentityId" : {
      "c2jName" : "UnprocessedIdentityId",
      "documentation" : "<p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and IdentityId.</p>",
      "shapeName" : "UnprocessedIdentityId",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
        "name" : "IdentityId",
        "c2jName" : "IdentityId",
        "c2jShape" : "IdentityId",
        "variable" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "identityId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "IdentityId",
          "marshallLocationName" : "IdentityId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
        "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
        "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The error code indicating the type of error that occurred.</p>",
        "name" : "ErrorCode",
        "c2jName" : "ErrorCode",
        "c2jShape" : "ErrorCode",
        "variable" : {
          "variableName" : "errorCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The error code indicating the type of error that occurred.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "errorCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ErrorCode",
          "marshallLocationName" : "ErrorCode",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ErrorCode",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The error code indicating the type of error that occurred.</p>\n@param errorCode The error code indicating the type of error that occurred.\n@see ErrorCode*/",
        "getterDocumentation" : "/**<p>The error code indicating the type of error that occurred.</p>\n@return The error code indicating the type of error that occurred.\n@see ErrorCode*/",
        "fluentSetterDocumentation" : "/**<p>The error code indicating the type of error that occurred.</p>\n@param errorCode The error code indicating the type of error that occurred.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ErrorCode*/",
        "varargSetterDocumentation" : "/**<p>The error code indicating the type of error that occurred.</p>\n@param errorCode The error code indicating the type of error that occurred.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ErrorCode*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "unprocessedIdentityId",
        "variableType" : "UnprocessedIdentityId",
        "variableDeclarationType" : "UnprocessedIdentityId",
        "documentation" : null,
        "simpleType" : "UnprocessedIdentityId",
        "variableSetterType" : "UnprocessedIdentityId"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IdentityId" : {
          "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
          "name" : "IdentityId",
          "c2jName" : "IdentityId",
          "c2jShape" : "IdentityId",
          "variable" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A unique identifier in the format REGION:GUID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "identityId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "IdentityId",
            "marshallLocationName" : "IdentityId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.*/",
          "getterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@return A unique identifier in the format REGION:GUID.*/",
          "fluentSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A unique identifier in the format REGION:GUID.</p>\n@param identityId A unique identifier in the format REGION:GUID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ErrorCode" : {
          "documentation" : "<p>The error code indicating the type of error that occurred.</p>",
          "name" : "ErrorCode",
          "c2jName" : "ErrorCode",
          "c2jShape" : "ErrorCode",
          "variable" : {
            "variableName" : "errorCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The error code indicating the type of error that occurred.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "errorCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ErrorCode",
            "marshallLocationName" : "ErrorCode",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ErrorCode",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The error code indicating the type of error that occurred.</p>\n@param errorCode The error code indicating the type of error that occurred.\n@see ErrorCode*/",
          "getterDocumentation" : "/**<p>The error code indicating the type of error that occurred.</p>\n@return The error code indicating the type of error that occurred.\n@see ErrorCode*/",
          "fluentSetterDocumentation" : "/**<p>The error code indicating the type of error that occurred.</p>\n@param errorCode The error code indicating the type of error that occurred.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ErrorCode*/",
          "varargSetterDocumentation" : "/**<p>The error code indicating the type of error that occurred.</p>\n@param errorCode The error code indicating the type of error that occurred.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ErrorCode*/"
        }
      }
    },
    "ErrorCode" : {
      "c2jName" : "ErrorCode",
      "documentation" : "",
      "shapeName" : "ErrorCode",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "AccessDenied",
        "value" : "AccessDenied"
      }, {
        "name" : "InternalServerError",
        "value" : "InternalServerError"
      } ],
      "variable" : {
        "variableName" : "errorCode",
        "variableType" : "ErrorCode",
        "variableDeclarationType" : "ErrorCode",
        "documentation" : null,
        "simpleType" : "ErrorCode",
        "variableSetterType" : "ErrorCode"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "TooManyRequestsException" : {
      "c2jName" : "TooManyRequestsException",
      "documentation" : "Thrown when a request is throttled.",
      "shapeName" : "TooManyRequestsException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "tooManyRequestsException",
        "variableType" : "TooManyRequestsException",
        "variableDeclarationType" : "TooManyRequestsException",
        "documentation" : null,
        "simpleType" : "TooManyRequestsException",
        "variableSetterType" : "TooManyRequestsException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "TooManyRequestsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InternalErrorException" : {
      "c2jName" : "InternalErrorException",
      "documentation" : "Thrown when the service encounters an error during processing the request.",
      "shapeName" : "InternalErrorException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "internalErrorException",
        "variableType" : "InternalErrorException",
        "variableDeclarationType" : "InternalErrorException",
        "documentation" : null,
        "simpleType" : "InternalErrorException",
        "variableSetterType" : "InternalErrorException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InternalErrorException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    }
  },
  "customizationConfig" : {
    "requestMetrics" : null,
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "serviceClientHoldInputStream" : false,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customClientConfiguration" : null,
    "customResponseMetadataClassName" : null,
    "skipInterfaceAdditions" : false,
    "customServiceNameForRequest" : null,
    "requiredParamValidationEnabled" : false,
    "additionalShapeConstructors" : null,
    "simpleMethods" : null,
    "authPolicyActions" : {
      "skip" : true,
      "actionPrefix" : null,
      "fileNamePrefix" : null
    },
    "customCodeTemplates" : null,
    "operationModifiers" : null,
    "shapeSubstitutions" : null,
    "shapeModifiers" : null
  },
  "defaultClientConfiguration" : "com.amazonaws.PredefinedClientConfigurations.defaultConfig()"
}