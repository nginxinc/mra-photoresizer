{
  "metadata" : {
    "apiVersion" : "2015-05-28",
    "exceptionUnmarshallerImpl" : null,
    "protocol" : "rest-json",
    "checksumFormat" : null,
    "documentation" : "<fullname>AWS IoT (Beta)</fullname> <p><b>AWS IoT is in beta and is subject to change</b></p> <p>AWS IoT provides secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each thing (Thing Registry), configure logging, and create and manage policies and credentials to authenticate things.</p> <p>For more information about how AWS IoT works, see the <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html\">Developer Guide</a>.</p>",
    "defaultEndpoint" : "https://iot.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "iot.us-east-1.amazonaws.com",
    "syncInterface" : "AWSIot",
    "syncClient" : "AWSIotClient",
    "asyncInterface" : "AWSIotAsync",
    "asyncClient" : "AWSIotAsyncClient",
    "packageName" : "com.amazonaws.services.iot",
    "packagePath" : "com/amazonaws/services/iot",
    "serviceAbbreviation" : null,
    "serviceFullName" : "AWS IoT",
    "hasApiWithStreamInput" : false,
    "jsonContentVersion" : null,
    "endpointPrefix" : "iot",
    "signingName" : "execute-api",
    "serviceName" : "AWS IoT",
    "jsonProtocol" : true,
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "protocolDefaultExceptionUnmarshallerType" : "JsonErrorUnmarshaller"
  },
  "operations" : {
    "AcceptCertificateTransfer" : {
      "documentation" : "<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p>",
      "operationName" : "AcceptCertificateTransfer",
      "deprecated" : false,
      "input" : {
        "variableName" : "acceptCertificateTransferRequest",
        "variableType" : "AcceptCertificateTransferRequest",
        "variableDeclarationType" : "AcceptCertificateTransferRequest",
        "documentation" : "<p>The input for the AcceptCertificateTransfer operation.</p>",
        "simpleType" : "AcceptCertificateTransferRequest",
        "variableSetterType" : "AcceptCertificateTransferRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "TransferAlreadyCompletedException",
        "documentation" : "<p>You can't revert the certificate transfer because it has already completed.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p>\n@param acceptCertificateTransferRequest The input for the AcceptCertificateTransfer operation.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws TransferAlreadyCompletedException You can't revert the certificate transfer because it has already completed.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p>\n@param acceptCertificateTransferRequest The input for the AcceptCertificateTransfer operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p>\n@param acceptCertificateTransferRequest The input for the AcceptCertificateTransfer operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AcceptCertificateTransferRequest, Void>",
      "methodName" : "acceptCertificateTransfer"
    },
    "AttachPrincipalPolicy" : {
      "documentation" : "<p>Attaches the specified policy to the specified principal (certificate or other credential).</p>",
      "operationName" : "AttachPrincipalPolicy",
      "deprecated" : false,
      "input" : {
        "variableName" : "attachPrincipalPolicyRequest",
        "variableType" : "AttachPrincipalPolicyRequest",
        "variableDeclarationType" : "AttachPrincipalPolicyRequest",
        "documentation" : "<p>The input for the AttachPrincipalPolicy operation.</p>",
        "simpleType" : "AttachPrincipalPolicyRequest",
        "variableSetterType" : "AttachPrincipalPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>The number of attached entities exceeds the limit.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Attaches the specified policy to the specified principal (certificate or other credential).</p>\n@param attachPrincipalPolicyRequest The input for the AttachPrincipalPolicy operation.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.\n@throws LimitExceededException The number of attached entities exceeds the limit.*/",
      "asyncDocumentation" : "/**<p>Attaches the specified policy to the specified principal (certificate or other credential).</p>\n@param attachPrincipalPolicyRequest The input for the AttachPrincipalPolicy operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Attaches the specified policy to the specified principal (certificate or other credential).</p>\n@param attachPrincipalPolicyRequest The input for the AttachPrincipalPolicy operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AttachPrincipalPolicyRequest, Void>",
      "methodName" : "attachPrincipalPolicy"
    },
    "AttachThingPrincipal" : {
      "documentation" : "<p>Attaches the specified principal to the specified thing.</p>",
      "operationName" : "AttachThingPrincipal",
      "deprecated" : false,
      "input" : {
        "variableName" : "attachThingPrincipalRequest",
        "variableType" : "AttachThingPrincipalRequest",
        "variableDeclarationType" : "AttachThingPrincipalRequest",
        "documentation" : "<p>The input for the AttachThingPrincipal operation.</p>",
        "simpleType" : "AttachThingPrincipalRequest",
        "variableSetterType" : "AttachThingPrincipalRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "AttachThingPrincipalResult",
        "documentation" : "<p>The output from the AttachThingPrincipal operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Attaches the specified principal to the specified thing.</p>\n@param attachThingPrincipalRequest The input for the AttachThingPrincipal operation.\n@return Result of the AttachThingPrincipal operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Attaches the specified principal to the specified thing.</p>\n@param attachThingPrincipalRequest The input for the AttachThingPrincipal operation.\n@return A Java Future containing the result of the AttachThingPrincipal operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Attaches the specified principal to the specified thing.</p>\n@param attachThingPrincipalRequest The input for the AttachThingPrincipal operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the AttachThingPrincipal operation returned by the service.*/",
      "syncReturnType" : "AttachThingPrincipalResult",
      "asyncReturnType" : "AttachThingPrincipalResult",
      "asyncFutureType" : "java.util.concurrent.Future<AttachThingPrincipalResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<AttachThingPrincipalResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AttachThingPrincipalRequest, AttachThingPrincipalResult>",
      "methodName" : "attachThingPrincipal"
    },
    "CancelCertificateTransfer" : {
      "documentation" : "<p>Cancels a pending transfer for the specified certificate.</p> <p><b>Note</b> Only the transfer source account can use this operation to cancel a transfer (transfer destinations can use <a>RejectCertificateTransfer</a> instead). After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. Once the destination account has accepted the transfer, the transfer may no longer be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p>",
      "operationName" : "CancelCertificateTransfer",
      "deprecated" : false,
      "input" : {
        "variableName" : "cancelCertificateTransferRequest",
        "variableType" : "CancelCertificateTransferRequest",
        "variableDeclarationType" : "CancelCertificateTransferRequest",
        "documentation" : "<p>The input for the CancelCertificateTransfer operation.</p>",
        "simpleType" : "CancelCertificateTransferRequest",
        "variableSetterType" : "CancelCertificateTransferRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "TransferAlreadyCompletedException",
        "documentation" : "<p>You can't revert the certificate transfer because it has already completed.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Cancels a pending transfer for the specified certificate.</p> <p><b>Note</b> Only the transfer source account can use this operation to cancel a transfer (transfer destinations can use <a>RejectCertificateTransfer</a> instead). After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. Once the destination account has accepted the transfer, the transfer may no longer be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p>\n@param cancelCertificateTransferRequest The input for the CancelCertificateTransfer operation.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws TransferAlreadyCompletedException You can't revert the certificate transfer because it has already completed.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Cancels a pending transfer for the specified certificate.</p> <p><b>Note</b> Only the transfer source account can use this operation to cancel a transfer (transfer destinations can use <a>RejectCertificateTransfer</a> instead). After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. Once the destination account has accepted the transfer, the transfer may no longer be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p>\n@param cancelCertificateTransferRequest The input for the CancelCertificateTransfer operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Cancels a pending transfer for the specified certificate.</p> <p><b>Note</b> Only the transfer source account can use this operation to cancel a transfer (transfer destinations can use <a>RejectCertificateTransfer</a> instead). After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. Once the destination account has accepted the transfer, the transfer may no longer be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p>\n@param cancelCertificateTransferRequest The input for the CancelCertificateTransfer operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CancelCertificateTransferRequest, Void>",
      "methodName" : "cancelCertificateTransfer"
    },
    "CreateCertificateFromCsr" : {
      "documentation" : "<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p><b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p>",
      "operationName" : "CreateCertificateFromCsr",
      "deprecated" : false,
      "input" : {
        "variableName" : "createCertificateFromCsrRequest",
        "variableType" : "CreateCertificateFromCsrRequest",
        "variableDeclarationType" : "CreateCertificateFromCsrRequest",
        "documentation" : "<p>The input for the CreateCertificateFromCsr operation.</p>",
        "simpleType" : "CreateCertificateFromCsrRequest",
        "variableSetterType" : "CreateCertificateFromCsrRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreateCertificateFromCsrResult",
        "documentation" : "<p>The output from the CreateCertificateFromCsr operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p><b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p>\n@param createCertificateFromCsrRequest The input for the CreateCertificateFromCsr operation.\n@return Result of the CreateCertificateFromCsr operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p><b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p>\n@param createCertificateFromCsrRequest The input for the CreateCertificateFromCsr operation.\n@return A Java Future containing the result of the CreateCertificateFromCsr operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p><b>Note</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p>\n@param createCertificateFromCsrRequest The input for the CreateCertificateFromCsr operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreateCertificateFromCsr operation returned by the service.*/",
      "syncReturnType" : "CreateCertificateFromCsrResult",
      "asyncReturnType" : "CreateCertificateFromCsrResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreateCertificateFromCsrResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreateCertificateFromCsrResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateCertificateFromCsrRequest, CreateCertificateFromCsrResult>",
      "methodName" : "createCertificateFromCsr"
    },
    "CreateKeysAndCertificate" : {
      "documentation" : "<p>Creates a 2048 bit RSA key pair and issues an X.509 certificate using the issued public key.</p> <p><b>Note</b> This is the only time AWS IoT issues the private key for this certificate. It is important to keep track of the private key.</p>",
      "operationName" : "CreateKeysAndCertificate",
      "deprecated" : false,
      "input" : {
        "variableName" : "createKeysAndCertificateRequest",
        "variableType" : "CreateKeysAndCertificateRequest",
        "variableDeclarationType" : "CreateKeysAndCertificateRequest",
        "documentation" : "<p>The input for the CreateKeysAndCertificate operation.</p>",
        "simpleType" : "CreateKeysAndCertificateRequest",
        "variableSetterType" : "CreateKeysAndCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreateKeysAndCertificateResult",
        "documentation" : "<p>The output of the CreateKeysAndCertificate operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a 2048 bit RSA key pair and issues an X.509 certificate using the issued public key.</p> <p><b>Note</b> This is the only time AWS IoT issues the private key for this certificate. It is important to keep track of the private key.</p>\n@param createKeysAndCertificateRequest The input for the CreateKeysAndCertificate operation.\n@return Result of the CreateKeysAndCertificate operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Creates a 2048 bit RSA key pair and issues an X.509 certificate using the issued public key.</p> <p><b>Note</b> This is the only time AWS IoT issues the private key for this certificate. It is important to keep track of the private key.</p>\n@param createKeysAndCertificateRequest The input for the CreateKeysAndCertificate operation.\n@return A Java Future containing the result of the CreateKeysAndCertificate operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a 2048 bit RSA key pair and issues an X.509 certificate using the issued public key.</p> <p><b>Note</b> This is the only time AWS IoT issues the private key for this certificate. It is important to keep track of the private key.</p>\n@param createKeysAndCertificateRequest The input for the CreateKeysAndCertificate operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreateKeysAndCertificate operation returned by the service.*/",
      "syncReturnType" : "CreateKeysAndCertificateResult",
      "asyncReturnType" : "CreateKeysAndCertificateResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreateKeysAndCertificateResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreateKeysAndCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateKeysAndCertificateRequest, CreateKeysAndCertificateResult>",
      "methodName" : "createKeysAndCertificate"
    },
    "CreatePolicy" : {
      "documentation" : "<p>Creates an AWS IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p>",
      "operationName" : "CreatePolicy",
      "deprecated" : false,
      "input" : {
        "variableName" : "createPolicyRequest",
        "variableType" : "CreatePolicyRequest",
        "variableDeclarationType" : "CreatePolicyRequest",
        "documentation" : "<p>The input for the CreatePolicy operation.</p>",
        "simpleType" : "CreatePolicyRequest",
        "variableSetterType" : "CreatePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreatePolicyResult",
        "documentation" : "<p>The output from the CreatePolicy operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>"
      }, {
        "exceptionName" : "MalformedPolicyException",
        "documentation" : "<p>The policy documentation is not valid.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates an AWS IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p>\n@param createPolicyRequest The input for the CreatePolicy operation.\n@return Result of the CreatePolicy operation returned by the service.\n@throws ResourceAlreadyExistsException The resource already exists.\n@throws MalformedPolicyException The policy documentation is not valid.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Creates an AWS IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p>\n@param createPolicyRequest The input for the CreatePolicy operation.\n@return A Java Future containing the result of the CreatePolicy operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates an AWS IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p>\n@param createPolicyRequest The input for the CreatePolicy operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreatePolicy operation returned by the service.*/",
      "syncReturnType" : "CreatePolicyResult",
      "asyncReturnType" : "CreatePolicyResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreatePolicyResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreatePolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreatePolicyRequest, CreatePolicyResult>",
      "methodName" : "createPolicy"
    },
    "CreatePolicyVersion" : {
      "documentation" : "<p>Creates a new version of the specified AWS IoT policy.</p>",
      "operationName" : "CreatePolicyVersion",
      "deprecated" : false,
      "input" : {
        "variableName" : "createPolicyVersionRequest",
        "variableType" : "CreatePolicyVersionRequest",
        "variableDeclarationType" : "CreatePolicyVersionRequest",
        "documentation" : "<p>The input for the CreatePolicyVersion operation.</p>",
        "simpleType" : "CreatePolicyVersionRequest",
        "variableSetterType" : "CreatePolicyVersionRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreatePolicyVersionResult",
        "documentation" : "<p>The output of the CreatePolicyVersion operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "MalformedPolicyException",
        "documentation" : "<p>The policy documentation is not valid.</p>"
      }, {
        "exceptionName" : "VersionsLimitExceededException",
        "documentation" : "<p>The number of policy versions exceeds the limit.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a new version of the specified AWS IoT policy.</p>\n@param createPolicyVersionRequest The input for the CreatePolicyVersion operation.\n@return Result of the CreatePolicyVersion operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws MalformedPolicyException The policy documentation is not valid.\n@throws VersionsLimitExceededException The number of policy versions exceeds the limit.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Creates a new version of the specified AWS IoT policy.</p>\n@param createPolicyVersionRequest The input for the CreatePolicyVersion operation.\n@return A Java Future containing the result of the CreatePolicyVersion operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a new version of the specified AWS IoT policy.</p>\n@param createPolicyVersionRequest The input for the CreatePolicyVersion operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreatePolicyVersion operation returned by the service.*/",
      "syncReturnType" : "CreatePolicyVersionResult",
      "asyncReturnType" : "CreatePolicyVersionResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreatePolicyVersionResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreatePolicyVersionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreatePolicyVersionRequest, CreatePolicyVersionResult>",
      "methodName" : "createPolicyVersion"
    },
    "CreateThing" : {
      "documentation" : "<p>Creates a thing in the thing registry.</p>",
      "operationName" : "CreateThing",
      "deprecated" : false,
      "input" : {
        "variableName" : "createThingRequest",
        "variableType" : "CreateThingRequest",
        "variableDeclarationType" : "CreateThingRequest",
        "documentation" : "<p>The input for the CreateThing operation.</p>",
        "simpleType" : "CreateThingRequest",
        "variableSetterType" : "CreateThingRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreateThingResult",
        "documentation" : "<p>The output of the CreateThing operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a thing in the thing registry.</p>\n@param createThingRequest The input for the CreateThing operation.\n@return Result of the CreateThing operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.\n@throws ResourceAlreadyExistsException The resource already exists.*/",
      "asyncDocumentation" : "/**<p>Creates a thing in the thing registry.</p>\n@param createThingRequest The input for the CreateThing operation.\n@return A Java Future containing the result of the CreateThing operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a thing in the thing registry.</p>\n@param createThingRequest The input for the CreateThing operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreateThing operation returned by the service.*/",
      "syncReturnType" : "CreateThingResult",
      "asyncReturnType" : "CreateThingResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreateThingResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreateThingResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateThingRequest, CreateThingResult>",
      "methodName" : "createThing"
    },
    "CreateTopicRule" : {
      "documentation" : "<p>Creates a rule.</p>",
      "operationName" : "CreateTopicRule",
      "deprecated" : false,
      "input" : {
        "variableName" : "createTopicRuleRequest",
        "variableType" : "CreateTopicRuleRequest",
        "variableDeclarationType" : "CreateTopicRuleRequest",
        "documentation" : "<p>The input for the CreateTopicRule operation.</p>",
        "simpleType" : "CreateTopicRuleRequest",
        "variableSetterType" : "CreateTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "SqlParseException",
        "documentation" : "<p>The Rule-SQL expression can't be parsed correctly.</p>"
      }, {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ResourceAlreadyExistsException",
        "documentation" : "<p>The resource already exists.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a rule.</p>\n@param createTopicRuleRequest The input for the CreateTopicRule operation.\n@throws SqlParseException The Rule-SQL expression can't be parsed correctly.\n@throws InternalException An unexpected error has occurred.\n@throws InvalidRequestException The request is not valid.\n@throws ResourceAlreadyExistsException The resource already exists.\n@throws ServiceUnavailableException The service is temporarily unavailable.*/",
      "asyncDocumentation" : "/**<p>Creates a rule.</p>\n@param createTopicRuleRequest The input for the CreateTopicRule operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a rule.</p>\n@param createTopicRuleRequest The input for the CreateTopicRule operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateTopicRuleRequest, Void>",
      "methodName" : "createTopicRule"
    },
    "DeleteCertificate" : {
      "documentation" : "<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy attached to it. To delete a certificate, first detach all policies using the <a>DetachPrincipalPolicy</a> operation.</p> <p>In addition, a certificate cannot be deleted if it is in ACTIVE status. To delete a certificate, first change the status to INACTIVE using the <a>UpdateCertificate</a> operation.</p>",
      "operationName" : "DeleteCertificate",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteCertificateRequest",
        "variableType" : "DeleteCertificateRequest",
        "variableDeclarationType" : "DeleteCertificateRequest",
        "documentation" : "<p>The input for the DeleteCertificate operation.</p>",
        "simpleType" : "DeleteCertificateRequest",
        "variableSetterType" : "DeleteCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "DeleteConflictException",
        "documentation" : "<p>You can't delete the resource because it is attached to one or more resources.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "CertificateStateException",
        "documentation" : "<p>The certificate operation is not allowed.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy attached to it. To delete a certificate, first detach all policies using the <a>DetachPrincipalPolicy</a> operation.</p> <p>In addition, a certificate cannot be deleted if it is in ACTIVE status. To delete a certificate, first change the status to INACTIVE using the <a>UpdateCertificate</a> operation.</p>\n@param deleteCertificateRequest The input for the DeleteCertificate operation.\n@throws DeleteConflictException You can't delete the resource because it is attached to one or more resources.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws CertificateStateException The certificate operation is not allowed.*/",
      "asyncDocumentation" : "/**<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy attached to it. To delete a certificate, first detach all policies using the <a>DetachPrincipalPolicy</a> operation.</p> <p>In addition, a certificate cannot be deleted if it is in ACTIVE status. To delete a certificate, first change the status to INACTIVE using the <a>UpdateCertificate</a> operation.</p>\n@param deleteCertificateRequest The input for the DeleteCertificate operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy attached to it. To delete a certificate, first detach all policies using the <a>DetachPrincipalPolicy</a> operation.</p> <p>In addition, a certificate cannot be deleted if it is in ACTIVE status. To delete a certificate, first change the status to INACTIVE using the <a>UpdateCertificate</a> operation.</p>\n@param deleteCertificateRequest The input for the DeleteCertificate operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteCertificateRequest, Void>",
      "methodName" : "deleteCertificate"
    },
    "DeletePolicy" : {
      "documentation" : "<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if: </p> <p> - it has non-default versions</p> <p> - it is attached to any certificate</p> <p>To delete a policy:</p> <p> - First delete all the non-default versions of the policy using the <a>DeletePolicyVersion</a> API.</p> <p> - Detach it from any certificate using the <a>DetachPrincipalPolicy</a> API.</p> <p>When a policy is deleted, its default version is deleted with it.</p>",
      "operationName" : "DeletePolicy",
      "deprecated" : false,
      "input" : {
        "variableName" : "deletePolicyRequest",
        "variableType" : "DeletePolicyRequest",
        "variableDeclarationType" : "DeletePolicyRequest",
        "documentation" : "<p>The input for the DeletePolicy operation.</p>",
        "simpleType" : "DeletePolicyRequest",
        "variableSetterType" : "DeletePolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "DeleteConflictException",
        "documentation" : "<p>You can't delete the resource because it is attached to one or more resources.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if: </p> <p> - it has non-default versions</p> <p> - it is attached to any certificate</p> <p>To delete a policy:</p> <p> - First delete all the non-default versions of the policy using the <a>DeletePolicyVersion</a> API.</p> <p> - Detach it from any certificate using the <a>DetachPrincipalPolicy</a> API.</p> <p>When a policy is deleted, its default version is deleted with it.</p>\n@param deletePolicyRequest The input for the DeletePolicy operation.\n@throws DeleteConflictException You can't delete the resource because it is attached to one or more resources.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if: </p> <p> - it has non-default versions</p> <p> - it is attached to any certificate</p> <p>To delete a policy:</p> <p> - First delete all the non-default versions of the policy using the <a>DeletePolicyVersion</a> API.</p> <p> - Detach it from any certificate using the <a>DetachPrincipalPolicy</a> API.</p> <p>When a policy is deleted, its default version is deleted with it.</p>\n@param deletePolicyRequest The input for the DeletePolicy operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if: </p> <p> - it has non-default versions</p> <p> - it is attached to any certificate</p> <p>To delete a policy:</p> <p> - First delete all the non-default versions of the policy using the <a>DeletePolicyVersion</a> API.</p> <p> - Detach it from any certificate using the <a>DetachPrincipalPolicy</a> API.</p> <p>When a policy is deleted, its default version is deleted with it.</p>\n@param deletePolicyRequest The input for the DeletePolicy operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeletePolicyRequest, Void>",
      "methodName" : "deletePolicy"
    },
    "DeletePolicyVersion" : {
      "documentation" : "<p>Deletes the specified version of the specified policy. The default version of the policy cannot be deleted.</p> <p>To delete the default version use the <a>DeletePolicy</a> API or mark the policy as non-default and then delete it.</p>",
      "operationName" : "DeletePolicyVersion",
      "deprecated" : false,
      "input" : {
        "variableName" : "deletePolicyVersionRequest",
        "variableType" : "DeletePolicyVersionRequest",
        "variableDeclarationType" : "DeletePolicyVersionRequest",
        "documentation" : "<p>The input for the DeletePolicyVersion operation.</p>",
        "simpleType" : "DeletePolicyVersionRequest",
        "variableSetterType" : "DeletePolicyVersionRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "DeleteConflictException",
        "documentation" : "<p>You can't delete the resource because it is attached to one or more resources.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes the specified version of the specified policy. The default version of the policy cannot be deleted.</p> <p>To delete the default version use the <a>DeletePolicy</a> API or mark the policy as non-default and then delete it.</p>\n@param deletePolicyVersionRequest The input for the DeletePolicyVersion operation.\n@throws DeleteConflictException You can't delete the resource because it is attached to one or more resources.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Deletes the specified version of the specified policy. The default version of the policy cannot be deleted.</p> <p>To delete the default version use the <a>DeletePolicy</a> API or mark the policy as non-default and then delete it.</p>\n@param deletePolicyVersionRequest The input for the DeletePolicyVersion operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes the specified version of the specified policy. The default version of the policy cannot be deleted.</p> <p>To delete the default version use the <a>DeletePolicy</a> API or mark the policy as non-default and then delete it.</p>\n@param deletePolicyVersionRequest The input for the DeletePolicyVersion operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeletePolicyVersionRequest, Void>",
      "methodName" : "deletePolicyVersion"
    },
    "DeleteThing" : {
      "documentation" : "<p>Deletes the specified thing from the Thing Registry.</p>",
      "operationName" : "DeleteThing",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteThingRequest",
        "variableType" : "DeleteThingRequest",
        "variableDeclarationType" : "DeleteThingRequest",
        "documentation" : "<p>The input for the DeleteThing operation.</p>",
        "simpleType" : "DeleteThingRequest",
        "variableSetterType" : "DeleteThingRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteThingResult",
        "documentation" : "<p>The output of the DeleteThing operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes the specified thing from the Thing Registry.</p>\n@param deleteThingRequest The input for the DeleteThing operation.\n@return Result of the DeleteThing operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Deletes the specified thing from the Thing Registry.</p>\n@param deleteThingRequest The input for the DeleteThing operation.\n@return A Java Future containing the result of the DeleteThing operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes the specified thing from the Thing Registry.</p>\n@param deleteThingRequest The input for the DeleteThing operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DeleteThing operation returned by the service.*/",
      "syncReturnType" : "DeleteThingResult",
      "asyncReturnType" : "DeleteThingResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteThingResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteThingResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteThingRequest, DeleteThingResult>",
      "methodName" : "deleteThing"
    },
    "DeleteTopicRule" : {
      "documentation" : "<p>Deletes the specified rule.</p>",
      "operationName" : "DeleteTopicRule",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteTopicRuleRequest",
        "variableType" : "DeleteTopicRuleRequest",
        "variableDeclarationType" : "DeleteTopicRuleRequest",
        "documentation" : "<p>The input for the DeleteTopicRule operation.</p>",
        "simpleType" : "DeleteTopicRuleRequest",
        "variableSetterType" : "DeleteTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes the specified rule.</p>\n@param deleteTopicRuleRequest The input for the DeleteTopicRule operation.\n@throws InternalException An unexpected error has occurred.\n@throws InvalidRequestException The request is not valid.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws UnauthorizedException You are not authorized to perform this operation.*/",
      "asyncDocumentation" : "/**<p>Deletes the specified rule.</p>\n@param deleteTopicRuleRequest The input for the DeleteTopicRule operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes the specified rule.</p>\n@param deleteTopicRuleRequest The input for the DeleteTopicRule operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteTopicRuleRequest, Void>",
      "methodName" : "deleteTopicRule"
    },
    "DescribeCertificate" : {
      "documentation" : "<p>Gets information about the specified certificate.</p>",
      "operationName" : "DescribeCertificate",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeCertificateRequest",
        "variableType" : "DescribeCertificateRequest",
        "variableDeclarationType" : "DescribeCertificateRequest",
        "documentation" : "<p>The input for the DescribeCertificate operation.</p>",
        "simpleType" : "DescribeCertificateRequest",
        "variableSetterType" : "DescribeCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeCertificateResult",
        "documentation" : "<p>The output of the DescribeCertificate operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets information about the specified certificate.</p>\n@param describeCertificateRequest The input for the DescribeCertificate operation.\n@return Result of the DescribeCertificate operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.\n@throws ResourceNotFoundException The specified resource does not exist.*/",
      "asyncDocumentation" : "/**<p>Gets information about the specified certificate.</p>\n@param describeCertificateRequest The input for the DescribeCertificate operation.\n@return A Java Future containing the result of the DescribeCertificate operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets information about the specified certificate.</p>\n@param describeCertificateRequest The input for the DescribeCertificate operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeCertificate operation returned by the service.*/",
      "syncReturnType" : "DescribeCertificateResult",
      "asyncReturnType" : "DescribeCertificateResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeCertificateResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeCertificateRequest, DescribeCertificateResult>",
      "methodName" : "describeCertificate"
    },
    "DescribeEndpoint" : {
      "documentation" : "<p>Returns a unique URL specific to the AWS account making the call. The URL points to the AWS IoT data plane endpoint. The customer-specific endpoint should be provided to all data plane operations.</p>",
      "operationName" : "DescribeEndpoint",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeEndpointRequest",
        "variableType" : "DescribeEndpointRequest",
        "variableDeclarationType" : "DescribeEndpointRequest",
        "documentation" : "<p>The input for the DescribeEndpoint operation.</p>",
        "simpleType" : "DescribeEndpointRequest",
        "variableSetterType" : "DescribeEndpointRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeEndpointResult",
        "documentation" : "<p>The output from the DescribeEndpoint operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Returns a unique URL specific to the AWS account making the call. The URL points to the AWS IoT data plane endpoint. The customer-specific endpoint should be provided to all data plane operations.</p>\n@param describeEndpointRequest The input for the DescribeEndpoint operation.\n@return Result of the DescribeEndpoint operation returned by the service.\n@throws InternalFailureException An unexpected error has occurred.\n@throws UnauthorizedException You are not authorized to perform this operation.*/",
      "asyncDocumentation" : "/**<p>Returns a unique URL specific to the AWS account making the call. The URL points to the AWS IoT data plane endpoint. The customer-specific endpoint should be provided to all data plane operations.</p>\n@param describeEndpointRequest The input for the DescribeEndpoint operation.\n@return A Java Future containing the result of the DescribeEndpoint operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Returns a unique URL specific to the AWS account making the call. The URL points to the AWS IoT data plane endpoint. The customer-specific endpoint should be provided to all data plane operations.</p>\n@param describeEndpointRequest The input for the DescribeEndpoint operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeEndpoint operation returned by the service.*/",
      "syncReturnType" : "DescribeEndpointResult",
      "asyncReturnType" : "DescribeEndpointResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeEndpointResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeEndpointResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeEndpointRequest, DescribeEndpointResult>",
      "methodName" : "describeEndpoint"
    },
    "DescribeThing" : {
      "documentation" : "<p>Gets information about the specified thing.</p>",
      "operationName" : "DescribeThing",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeThingRequest",
        "variableType" : "DescribeThingRequest",
        "variableDeclarationType" : "DescribeThingRequest",
        "documentation" : "<p>The input for the DescribeThing operation.</p>",
        "simpleType" : "DescribeThingRequest",
        "variableSetterType" : "DescribeThingRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeThingResult",
        "documentation" : "<p>The output from the DescribeThing operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets information about the specified thing.</p>\n@param describeThingRequest The input for the DescribeThing operation.\n@return Result of the DescribeThing operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Gets information about the specified thing.</p>\n@param describeThingRequest The input for the DescribeThing operation.\n@return A Java Future containing the result of the DescribeThing operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets information about the specified thing.</p>\n@param describeThingRequest The input for the DescribeThing operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeThing operation returned by the service.*/",
      "syncReturnType" : "DescribeThingResult",
      "asyncReturnType" : "DescribeThingResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeThingResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeThingResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeThingRequest, DescribeThingResult>",
      "methodName" : "describeThing"
    },
    "DetachPrincipalPolicy" : {
      "documentation" : "<p>Removes the specified policy from the specified certificate.</p>",
      "operationName" : "DetachPrincipalPolicy",
      "deprecated" : false,
      "input" : {
        "variableName" : "detachPrincipalPolicyRequest",
        "variableType" : "DetachPrincipalPolicyRequest",
        "variableDeclarationType" : "DetachPrincipalPolicyRequest",
        "documentation" : "<p>The input for the DetachPrincipalPolicy operation.</p>",
        "simpleType" : "DetachPrincipalPolicyRequest",
        "variableSetterType" : "DetachPrincipalPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Removes the specified policy from the specified certificate.</p>\n@param detachPrincipalPolicyRequest The input for the DetachPrincipalPolicy operation.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Removes the specified policy from the specified certificate.</p>\n@param detachPrincipalPolicyRequest The input for the DetachPrincipalPolicy operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Removes the specified policy from the specified certificate.</p>\n@param detachPrincipalPolicyRequest The input for the DetachPrincipalPolicy operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetachPrincipalPolicyRequest, Void>",
      "methodName" : "detachPrincipalPolicy"
    },
    "DetachThingPrincipal" : {
      "documentation" : "<p>Detaches the specified principal from the specified thing.</p>",
      "operationName" : "DetachThingPrincipal",
      "deprecated" : false,
      "input" : {
        "variableName" : "detachThingPrincipalRequest",
        "variableType" : "DetachThingPrincipalRequest",
        "variableDeclarationType" : "DetachThingPrincipalRequest",
        "documentation" : "<p>The input for the DetachThingPrincipal operation.</p>",
        "simpleType" : "DetachThingPrincipalRequest",
        "variableSetterType" : "DetachThingPrincipalRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DetachThingPrincipalResult",
        "documentation" : "<p>The output from the DetachThingPrincipal operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Detaches the specified principal from the specified thing.</p>\n@param detachThingPrincipalRequest The input for the DetachThingPrincipal operation.\n@return Result of the DetachThingPrincipal operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Detaches the specified principal from the specified thing.</p>\n@param detachThingPrincipalRequest The input for the DetachThingPrincipal operation.\n@return A Java Future containing the result of the DetachThingPrincipal operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Detaches the specified principal from the specified thing.</p>\n@param detachThingPrincipalRequest The input for the DetachThingPrincipal operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DetachThingPrincipal operation returned by the service.*/",
      "syncReturnType" : "DetachThingPrincipalResult",
      "asyncReturnType" : "DetachThingPrincipalResult",
      "asyncFutureType" : "java.util.concurrent.Future<DetachThingPrincipalResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DetachThingPrincipalResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DetachThingPrincipalRequest, DetachThingPrincipalResult>",
      "methodName" : "detachThingPrincipal"
    },
    "GetLoggingOptions" : {
      "documentation" : "<p>Gets the logging options.</p>",
      "operationName" : "GetLoggingOptions",
      "deprecated" : false,
      "input" : {
        "variableName" : "getLoggingOptionsRequest",
        "variableType" : "GetLoggingOptionsRequest",
        "variableDeclarationType" : "GetLoggingOptionsRequest",
        "documentation" : "<p>The input for the GetLoggingOptions operation.</p>",
        "simpleType" : "GetLoggingOptionsRequest",
        "variableSetterType" : "GetLoggingOptionsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetLoggingOptionsResult",
        "documentation" : "<p>The output from the GetLoggingOptions operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets the logging options.</p>\n@param getLoggingOptionsRequest The input for the GetLoggingOptions operation.\n@return Result of the GetLoggingOptions operation returned by the service.\n@throws InternalException An unexpected error has occurred.\n@throws InvalidRequestException The request is not valid.\n@throws ServiceUnavailableException The service is temporarily unavailable.*/",
      "asyncDocumentation" : "/**<p>Gets the logging options.</p>\n@param getLoggingOptionsRequest The input for the GetLoggingOptions operation.\n@return A Java Future containing the result of the GetLoggingOptions operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets the logging options.</p>\n@param getLoggingOptionsRequest The input for the GetLoggingOptions operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetLoggingOptions operation returned by the service.*/",
      "syncReturnType" : "GetLoggingOptionsResult",
      "asyncReturnType" : "GetLoggingOptionsResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetLoggingOptionsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetLoggingOptionsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetLoggingOptionsRequest, GetLoggingOptionsResult>",
      "methodName" : "getLoggingOptions"
    },
    "GetPolicy" : {
      "documentation" : "<p>Gets information about the specified policy with the policy document of the default version.</p>",
      "operationName" : "GetPolicy",
      "deprecated" : false,
      "input" : {
        "variableName" : "getPolicyRequest",
        "variableType" : "GetPolicyRequest",
        "variableDeclarationType" : "GetPolicyRequest",
        "documentation" : "<p>The input for the GetPolicy operation.</p>",
        "simpleType" : "GetPolicyRequest",
        "variableSetterType" : "GetPolicyRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetPolicyResult",
        "documentation" : "<p>The output from the GetPolicy operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets information about the specified policy with the policy document of the default version.</p>\n@param getPolicyRequest The input for the GetPolicy operation.\n@return Result of the GetPolicy operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Gets information about the specified policy with the policy document of the default version.</p>\n@param getPolicyRequest The input for the GetPolicy operation.\n@return A Java Future containing the result of the GetPolicy operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets information about the specified policy with the policy document of the default version.</p>\n@param getPolicyRequest The input for the GetPolicy operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetPolicy operation returned by the service.*/",
      "syncReturnType" : "GetPolicyResult",
      "asyncReturnType" : "GetPolicyResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetPolicyResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetPolicyResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetPolicyRequest, GetPolicyResult>",
      "methodName" : "getPolicy"
    },
    "GetPolicyVersion" : {
      "documentation" : "<p>Gets information about the specified policy version.</p>",
      "operationName" : "GetPolicyVersion",
      "deprecated" : false,
      "input" : {
        "variableName" : "getPolicyVersionRequest",
        "variableType" : "GetPolicyVersionRequest",
        "variableDeclarationType" : "GetPolicyVersionRequest",
        "documentation" : "<p>The input for the GetPolicyVersion operation.</p>",
        "simpleType" : "GetPolicyVersionRequest",
        "variableSetterType" : "GetPolicyVersionRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetPolicyVersionResult",
        "documentation" : "<p>The output from the GetPolicyVersion operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets information about the specified policy version.</p>\n@param getPolicyVersionRequest The input for the GetPolicyVersion operation.\n@return Result of the GetPolicyVersion operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Gets information about the specified policy version.</p>\n@param getPolicyVersionRequest The input for the GetPolicyVersion operation.\n@return A Java Future containing the result of the GetPolicyVersion operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets information about the specified policy version.</p>\n@param getPolicyVersionRequest The input for the GetPolicyVersion operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetPolicyVersion operation returned by the service.*/",
      "syncReturnType" : "GetPolicyVersionResult",
      "asyncReturnType" : "GetPolicyVersionResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetPolicyVersionResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetPolicyVersionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetPolicyVersionRequest, GetPolicyVersionResult>",
      "methodName" : "getPolicyVersion"
    },
    "GetTopicRule" : {
      "documentation" : "<p>Gets information about the specified rule.</p>",
      "operationName" : "GetTopicRule",
      "deprecated" : false,
      "input" : {
        "variableName" : "getTopicRuleRequest",
        "variableType" : "GetTopicRuleRequest",
        "variableDeclarationType" : "GetTopicRuleRequest",
        "documentation" : "<p>The input for the GetTopicRule operation.</p>",
        "simpleType" : "GetTopicRuleRequest",
        "variableSetterType" : "GetTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetTopicRuleResult",
        "documentation" : "<p>The output from the GetTopicRule operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Gets information about the specified rule.</p>\n@param getTopicRuleRequest The input for the GetTopicRule operation.\n@return Result of the GetTopicRule operation returned by the service.\n@throws InternalException An unexpected error has occurred.\n@throws InvalidRequestException The request is not valid.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws UnauthorizedException You are not authorized to perform this operation.*/",
      "asyncDocumentation" : "/**<p>Gets information about the specified rule.</p>\n@param getTopicRuleRequest The input for the GetTopicRule operation.\n@return A Java Future containing the result of the GetTopicRule operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Gets information about the specified rule.</p>\n@param getTopicRuleRequest The input for the GetTopicRule operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetTopicRule operation returned by the service.*/",
      "syncReturnType" : "GetTopicRuleResult",
      "asyncReturnType" : "GetTopicRuleResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetTopicRuleResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetTopicRuleResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetTopicRuleRequest, GetTopicRuleResult>",
      "methodName" : "getTopicRule"
    },
    "ListCertificates" : {
      "documentation" : "<p>Lists your certificates.</p> <p>The results are paginated with a default page size of 25. You can retrieve additional results using the returned marker.</p>",
      "operationName" : "ListCertificates",
      "deprecated" : false,
      "input" : {
        "variableName" : "listCertificatesRequest",
        "variableType" : "ListCertificatesRequest",
        "variableDeclarationType" : "ListCertificatesRequest",
        "documentation" : "<p>The input for the ListCertificates operation.</p>",
        "simpleType" : "ListCertificatesRequest",
        "variableSetterType" : "ListCertificatesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListCertificatesResult",
        "documentation" : "<p>The output of the ListCertificates operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists your certificates.</p> <p>The results are paginated with a default page size of 25. You can retrieve additional results using the returned marker.</p>\n@param listCertificatesRequest The input for the ListCertificates operation.\n@return Result of the ListCertificates operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Lists your certificates.</p> <p>The results are paginated with a default page size of 25. You can retrieve additional results using the returned marker.</p>\n@param listCertificatesRequest The input for the ListCertificates operation.\n@return A Java Future containing the result of the ListCertificates operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists your certificates.</p> <p>The results are paginated with a default page size of 25. You can retrieve additional results using the returned marker.</p>\n@param listCertificatesRequest The input for the ListCertificates operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListCertificates operation returned by the service.*/",
      "syncReturnType" : "ListCertificatesResult",
      "asyncReturnType" : "ListCertificatesResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListCertificatesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListCertificatesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListCertificatesRequest, ListCertificatesResult>",
      "methodName" : "listCertificates"
    },
    "ListPolicies" : {
      "documentation" : "<p>Lists your policies.</p>",
      "operationName" : "ListPolicies",
      "deprecated" : false,
      "input" : {
        "variableName" : "listPoliciesRequest",
        "variableType" : "ListPoliciesRequest",
        "variableDeclarationType" : "ListPoliciesRequest",
        "documentation" : "<p>The input for the ListPolicies operation.</p>",
        "simpleType" : "ListPoliciesRequest",
        "variableSetterType" : "ListPoliciesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListPoliciesResult",
        "documentation" : "<p>The output from the ListPolicies operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists your policies.</p>\n@param listPoliciesRequest The input for the ListPolicies operation.\n@return Result of the ListPolicies operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Lists your policies.</p>\n@param listPoliciesRequest The input for the ListPolicies operation.\n@return A Java Future containing the result of the ListPolicies operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists your policies.</p>\n@param listPoliciesRequest The input for the ListPolicies operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListPolicies operation returned by the service.*/",
      "syncReturnType" : "ListPoliciesResult",
      "asyncReturnType" : "ListPoliciesResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListPoliciesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListPoliciesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPoliciesRequest, ListPoliciesResult>",
      "methodName" : "listPolicies"
    },
    "ListPolicyVersions" : {
      "documentation" : "<p>Lists the versions of the specified policy, and identifies the default version.</p>",
      "operationName" : "ListPolicyVersions",
      "deprecated" : false,
      "input" : {
        "variableName" : "listPolicyVersionsRequest",
        "variableType" : "ListPolicyVersionsRequest",
        "variableDeclarationType" : "ListPolicyVersionsRequest",
        "documentation" : "<p>The input for the ListPolicyVersions operation.</p>",
        "simpleType" : "ListPolicyVersionsRequest",
        "variableSetterType" : "ListPolicyVersionsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListPolicyVersionsResult",
        "documentation" : "<p>The output from the ListPolicyVersions operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists the versions of the specified policy, and identifies the default version.</p>\n@param listPolicyVersionsRequest The input for the ListPolicyVersions operation.\n@return Result of the ListPolicyVersions operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Lists the versions of the specified policy, and identifies the default version.</p>\n@param listPolicyVersionsRequest The input for the ListPolicyVersions operation.\n@return A Java Future containing the result of the ListPolicyVersions operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists the versions of the specified policy, and identifies the default version.</p>\n@param listPolicyVersionsRequest The input for the ListPolicyVersions operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListPolicyVersions operation returned by the service.*/",
      "syncReturnType" : "ListPolicyVersionsResult",
      "asyncReturnType" : "ListPolicyVersionsResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListPolicyVersionsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListPolicyVersionsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPolicyVersionsRequest, ListPolicyVersionsResult>",
      "methodName" : "listPolicyVersions"
    },
    "ListPrincipalPolicies" : {
      "documentation" : "<p>Lists the policies attached to the specified principal. If you use an Amazon Cognito identity, the ID needs to be in <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax\">Amazon Cognito Identity format</a>.</p>",
      "operationName" : "ListPrincipalPolicies",
      "deprecated" : false,
      "input" : {
        "variableName" : "listPrincipalPoliciesRequest",
        "variableType" : "ListPrincipalPoliciesRequest",
        "variableDeclarationType" : "ListPrincipalPoliciesRequest",
        "documentation" : "<p>The input for the ListPrincipalPolicies operation.</p>",
        "simpleType" : "ListPrincipalPoliciesRequest",
        "variableSetterType" : "ListPrincipalPoliciesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListPrincipalPoliciesResult",
        "documentation" : "<p>The output from the ListPrincipalPolicies operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists the policies attached to the specified principal. If you use an Amazon Cognito identity, the ID needs to be in <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax\">Amazon Cognito Identity format</a>.</p>\n@param listPrincipalPoliciesRequest The input for the ListPrincipalPolicies operation.\n@return Result of the ListPrincipalPolicies operation returned by the service.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Lists the policies attached to the specified principal. If you use an Amazon Cognito identity, the ID needs to be in <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax\">Amazon Cognito Identity format</a>.</p>\n@param listPrincipalPoliciesRequest The input for the ListPrincipalPolicies operation.\n@return A Java Future containing the result of the ListPrincipalPolicies operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists the policies attached to the specified principal. If you use an Amazon Cognito identity, the ID needs to be in <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax\">Amazon Cognito Identity format</a>.</p>\n@param listPrincipalPoliciesRequest The input for the ListPrincipalPolicies operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListPrincipalPolicies operation returned by the service.*/",
      "syncReturnType" : "ListPrincipalPoliciesResult",
      "asyncReturnType" : "ListPrincipalPoliciesResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListPrincipalPoliciesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListPrincipalPoliciesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPrincipalPoliciesRequest, ListPrincipalPoliciesResult>",
      "methodName" : "listPrincipalPolicies"
    },
    "ListPrincipalThings" : {
      "documentation" : "<p>Lists the things associated with the specified principal.</p>",
      "operationName" : "ListPrincipalThings",
      "deprecated" : false,
      "input" : {
        "variableName" : "listPrincipalThingsRequest",
        "variableType" : "ListPrincipalThingsRequest",
        "variableDeclarationType" : "ListPrincipalThingsRequest",
        "documentation" : "<p>The input for the ListPrincipalThings operation.</p>",
        "simpleType" : "ListPrincipalThingsRequest",
        "variableSetterType" : "ListPrincipalThingsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListPrincipalThingsResult",
        "documentation" : "<p>The output from the ListPrincipalThings operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists the things associated with the specified principal.</p>\n@param listPrincipalThingsRequest The input for the ListPrincipalThings operation.\n@return Result of the ListPrincipalThings operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Lists the things associated with the specified principal.</p>\n@param listPrincipalThingsRequest The input for the ListPrincipalThings operation.\n@return A Java Future containing the result of the ListPrincipalThings operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists the things associated with the specified principal.</p>\n@param listPrincipalThingsRequest The input for the ListPrincipalThings operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListPrincipalThings operation returned by the service.*/",
      "syncReturnType" : "ListPrincipalThingsResult",
      "asyncReturnType" : "ListPrincipalThingsResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListPrincipalThingsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListPrincipalThingsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListPrincipalThingsRequest, ListPrincipalThingsResult>",
      "methodName" : "listPrincipalThings"
    },
    "ListThingPrincipals" : {
      "documentation" : "<p>Lists the principals associated with the specified thing.</p>",
      "operationName" : "ListThingPrincipals",
      "deprecated" : false,
      "input" : {
        "variableName" : "listThingPrincipalsRequest",
        "variableType" : "ListThingPrincipalsRequest",
        "variableDeclarationType" : "ListThingPrincipalsRequest",
        "documentation" : "<p>The input for the ListThingPrincipal operation.</p>",
        "simpleType" : "ListThingPrincipalsRequest",
        "variableSetterType" : "ListThingPrincipalsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListThingPrincipalsResult",
        "documentation" : "<p>The output from the ListThingPrincipals operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists the principals associated with the specified thing.</p>\n@param listThingPrincipalsRequest The input for the ListThingPrincipal operation.\n@return Result of the ListThingPrincipals operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Lists the principals associated with the specified thing.</p>\n@param listThingPrincipalsRequest The input for the ListThingPrincipal operation.\n@return A Java Future containing the result of the ListThingPrincipals operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists the principals associated with the specified thing.</p>\n@param listThingPrincipalsRequest The input for the ListThingPrincipal operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListThingPrincipals operation returned by the service.*/",
      "syncReturnType" : "ListThingPrincipalsResult",
      "asyncReturnType" : "ListThingPrincipalsResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListThingPrincipalsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListThingPrincipalsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListThingPrincipalsRequest, ListThingPrincipalsResult>",
      "methodName" : "listThingPrincipals"
    },
    "ListThings" : {
      "documentation" : "<p>Lists your things. You can pass an AttributeName and/or AttributeValue to filter your things. For example: \"ListThings where AttributeName=Color and AttributeValue=Red\"</p>",
      "operationName" : "ListThings",
      "deprecated" : false,
      "input" : {
        "variableName" : "listThingsRequest",
        "variableType" : "ListThingsRequest",
        "variableDeclarationType" : "ListThingsRequest",
        "documentation" : "<p>The input for the ListThings operation.</p>",
        "simpleType" : "ListThingsRequest",
        "variableSetterType" : "ListThingsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListThingsResult",
        "documentation" : "<p>The output from the ListThings operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists your things. You can pass an AttributeName and/or AttributeValue to filter your things. For example: \"ListThings where AttributeName=Color and AttributeValue=Red\"</p>\n@param listThingsRequest The input for the ListThings operation.\n@return Result of the ListThings operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Lists your things. You can pass an AttributeName and/or AttributeValue to filter your things. For example: \"ListThings where AttributeName=Color and AttributeValue=Red\"</p>\n@param listThingsRequest The input for the ListThings operation.\n@return A Java Future containing the result of the ListThings operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists your things. You can pass an AttributeName and/or AttributeValue to filter your things. For example: \"ListThings where AttributeName=Color and AttributeValue=Red\"</p>\n@param listThingsRequest The input for the ListThings operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListThings operation returned by the service.*/",
      "syncReturnType" : "ListThingsResult",
      "asyncReturnType" : "ListThingsResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListThingsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListThingsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListThingsRequest, ListThingsResult>",
      "methodName" : "listThings"
    },
    "ListTopicRules" : {
      "documentation" : "<p>Lists the rules for the specific topic.</p>",
      "operationName" : "ListTopicRules",
      "deprecated" : false,
      "input" : {
        "variableName" : "listTopicRulesRequest",
        "variableType" : "ListTopicRulesRequest",
        "variableDeclarationType" : "ListTopicRulesRequest",
        "documentation" : "<p>The input for the ListTopicRules operation.</p>",
        "simpleType" : "ListTopicRulesRequest",
        "variableSetterType" : "ListTopicRulesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListTopicRulesResult",
        "documentation" : "<p>The output from the ListTopicRules operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Lists the rules for the specific topic.</p>\n@param listTopicRulesRequest The input for the ListTopicRules operation.\n@return Result of the ListTopicRules operation returned by the service.\n@throws InternalException An unexpected error has occurred.\n@throws InvalidRequestException The request is not valid.\n@throws ServiceUnavailableException The service is temporarily unavailable.*/",
      "asyncDocumentation" : "/**<p>Lists the rules for the specific topic.</p>\n@param listTopicRulesRequest The input for the ListTopicRules operation.\n@return A Java Future containing the result of the ListTopicRules operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Lists the rules for the specific topic.</p>\n@param listTopicRulesRequest The input for the ListTopicRules operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListTopicRules operation returned by the service.*/",
      "syncReturnType" : "ListTopicRulesResult",
      "asyncReturnType" : "ListTopicRulesResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListTopicRulesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListTopicRulesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTopicRulesRequest, ListTopicRulesResult>",
      "methodName" : "listTopicRules"
    },
    "RejectCertificateTransfer" : {
      "documentation" : "<p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. Once called, the certificate will be returned to the source's account in the INACTIVE state.</p>",
      "operationName" : "RejectCertificateTransfer",
      "deprecated" : false,
      "input" : {
        "variableName" : "rejectCertificateTransferRequest",
        "variableType" : "RejectCertificateTransferRequest",
        "variableDeclarationType" : "RejectCertificateTransferRequest",
        "documentation" : "<p>The input for the RejectCertificateTransfer operation.</p>",
        "simpleType" : "RejectCertificateTransferRequest",
        "variableSetterType" : "RejectCertificateTransferRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "TransferAlreadyCompletedException",
        "documentation" : "<p>You can't revert the certificate transfer because it has already completed.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. Once called, the certificate will be returned to the source's account in the INACTIVE state.</p>\n@param rejectCertificateTransferRequest The input for the RejectCertificateTransfer operation.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws TransferAlreadyCompletedException You can't revert the certificate transfer because it has already completed.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. Once called, the certificate will be returned to the source's account in the INACTIVE state.</p>\n@param rejectCertificateTransferRequest The input for the RejectCertificateTransfer operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. Once called, the certificate will be returned to the source's account in the INACTIVE state.</p>\n@param rejectCertificateTransferRequest The input for the RejectCertificateTransfer operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<RejectCertificateTransferRequest, Void>",
      "methodName" : "rejectCertificateTransfer"
    },
    "ReplaceTopicRule" : {
      "documentation" : "<p>Replaces the specified rule. You must specify all parameters for the new rule.</p>",
      "operationName" : "ReplaceTopicRule",
      "deprecated" : false,
      "input" : {
        "variableName" : "replaceTopicRuleRequest",
        "variableType" : "ReplaceTopicRuleRequest",
        "variableDeclarationType" : "ReplaceTopicRuleRequest",
        "documentation" : "<p>The input for the ReplaceTopicRule operation.</p>",
        "simpleType" : "ReplaceTopicRuleRequest",
        "variableSetterType" : "ReplaceTopicRuleRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "SqlParseException",
        "documentation" : "<p>The Rule-SQL expression can't be parsed correctly.</p>"
      }, {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Replaces the specified rule. You must specify all parameters for the new rule.</p>\n@param replaceTopicRuleRequest The input for the ReplaceTopicRule operation.\n@throws SqlParseException The Rule-SQL expression can't be parsed correctly.\n@throws InternalException An unexpected error has occurred.\n@throws InvalidRequestException The request is not valid.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws UnauthorizedException You are not authorized to perform this operation.*/",
      "asyncDocumentation" : "/**<p>Replaces the specified rule. You must specify all parameters for the new rule.</p>\n@param replaceTopicRuleRequest The input for the ReplaceTopicRule operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Replaces the specified rule. You must specify all parameters for the new rule.</p>\n@param replaceTopicRuleRequest The input for the ReplaceTopicRule operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ReplaceTopicRuleRequest, Void>",
      "methodName" : "replaceTopicRule"
    },
    "SetDefaultPolicyVersion" : {
      "documentation" : "<p>Sets the specified policy version as the default for the specified policy.</p>",
      "operationName" : "SetDefaultPolicyVersion",
      "deprecated" : false,
      "input" : {
        "variableName" : "setDefaultPolicyVersionRequest",
        "variableType" : "SetDefaultPolicyVersionRequest",
        "variableDeclarationType" : "SetDefaultPolicyVersionRequest",
        "documentation" : "<p>The input for the SetDefaultPolicyVersion operation.</p>",
        "simpleType" : "SetDefaultPolicyVersionRequest",
        "variableSetterType" : "SetDefaultPolicyVersionRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Sets the specified policy version as the default for the specified policy.</p>\n@param setDefaultPolicyVersionRequest The input for the SetDefaultPolicyVersion operation.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Sets the specified policy version as the default for the specified policy.</p>\n@param setDefaultPolicyVersionRequest The input for the SetDefaultPolicyVersion operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Sets the specified policy version as the default for the specified policy.</p>\n@param setDefaultPolicyVersionRequest The input for the SetDefaultPolicyVersion operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SetDefaultPolicyVersionRequest, Void>",
      "methodName" : "setDefaultPolicyVersion"
    },
    "SetLoggingOptions" : {
      "documentation" : "<p>Sets the logging options.</p>",
      "operationName" : "SetLoggingOptions",
      "deprecated" : false,
      "input" : {
        "variableName" : "setLoggingOptionsRequest",
        "variableType" : "SetLoggingOptionsRequest",
        "variableDeclarationType" : "SetLoggingOptionsRequest",
        "documentation" : "<p>The input for the SetLoggingOptions operation.</p>",
        "simpleType" : "SetLoggingOptionsRequest",
        "variableSetterType" : "SetLoggingOptionsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "InternalException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Sets the logging options.</p>\n@param setLoggingOptionsRequest The input for the SetLoggingOptions operation.\n@throws InternalException An unexpected error has occurred.\n@throws InvalidRequestException The request is not valid.\n@throws ServiceUnavailableException The service is temporarily unavailable.*/",
      "asyncDocumentation" : "/**<p>Sets the logging options.</p>\n@param setLoggingOptionsRequest The input for the SetLoggingOptions operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Sets the logging options.</p>\n@param setLoggingOptionsRequest The input for the SetLoggingOptions operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<SetLoggingOptionsRequest, Void>",
      "methodName" : "setLoggingOptions"
    },
    "TransferCertificate" : {
      "documentation" : "<p>Transfers the specified certificate to the specified AWS account.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account, it is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. It can be deactivated using the UpdateCertificate API.</p> <p>The certificate must not have any policies attached to it. These can be detached using the <a>DetachPrincipalPolicy</a> API.</p>",
      "operationName" : "TransferCertificate",
      "deprecated" : false,
      "input" : {
        "variableName" : "transferCertificateRequest",
        "variableType" : "TransferCertificateRequest",
        "variableDeclarationType" : "TransferCertificateRequest",
        "documentation" : "<p>The input for the TransferCertificate operation.</p>",
        "simpleType" : "TransferCertificateRequest",
        "variableSetterType" : "TransferCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "TransferCertificateResult",
        "documentation" : "<p>The output from the TransferCertificate operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "CertificateStateException",
        "documentation" : "<p>The certificate operation is not allowed.</p>"
      }, {
        "exceptionName" : "TransferConflictException",
        "documentation" : "<p>You can't transfer the the certificate because authorization policies are still attached.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Transfers the specified certificate to the specified AWS account.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account, it is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. It can be deactivated using the UpdateCertificate API.</p> <p>The certificate must not have any policies attached to it. These can be detached using the <a>DetachPrincipalPolicy</a> API.</p>\n@param transferCertificateRequest The input for the TransferCertificate operation.\n@return Result of the TransferCertificate operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws CertificateStateException The certificate operation is not allowed.\n@throws TransferConflictException You can't transfer the the certificate because authorization policies are still attached.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Transfers the specified certificate to the specified AWS account.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account, it is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. It can be deactivated using the UpdateCertificate API.</p> <p>The certificate must not have any policies attached to it. These can be detached using the <a>DetachPrincipalPolicy</a> API.</p>\n@param transferCertificateRequest The input for the TransferCertificate operation.\n@return A Java Future containing the result of the TransferCertificate operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Transfers the specified certificate to the specified AWS account.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account, it is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. It can be deactivated using the UpdateCertificate API.</p> <p>The certificate must not have any policies attached to it. These can be detached using the <a>DetachPrincipalPolicy</a> API.</p>\n@param transferCertificateRequest The input for the TransferCertificate operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the TransferCertificate operation returned by the service.*/",
      "syncReturnType" : "TransferCertificateResult",
      "asyncReturnType" : "TransferCertificateResult",
      "asyncFutureType" : "java.util.concurrent.Future<TransferCertificateResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<TransferCertificateResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<TransferCertificateRequest, TransferCertificateResult>",
      "methodName" : "transferCertificate"
    },
    "UpdateCertificate" : {
      "documentation" : "<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Moving a cert from the ACTIVE state (including REVOKED) will NOT disconnect currently-connected devices, although these devices will be unable to reconnect.</p> <p>The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.</p>",
      "operationName" : "UpdateCertificate",
      "deprecated" : false,
      "input" : {
        "variableName" : "updateCertificateRequest",
        "variableType" : "UpdateCertificateRequest",
        "variableDeclarationType" : "UpdateCertificateRequest",
        "documentation" : "<p>The input for the UpdateCertificate operation.</p>",
        "simpleType" : "UpdateCertificateRequest",
        "variableSetterType" : "UpdateCertificateRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : null,
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      }, {
        "exceptionName" : "CertificateStateException",
        "documentation" : "<p>The certificate operation is not allowed.</p>"
      }, {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Moving a cert from the ACTIVE state (including REVOKED) will NOT disconnect currently-connected devices, although these devices will be unable to reconnect.</p> <p>The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.</p>\n@param updateCertificateRequest The input for the UpdateCertificate operation.\n@throws ResourceNotFoundException The specified resource does not exist.\n@throws CertificateStateException The certificate operation is not allowed.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.*/",
      "asyncDocumentation" : "/**<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Moving a cert from the ACTIVE state (including REVOKED) will NOT disconnect currently-connected devices, although these devices will be unable to reconnect.</p> <p>The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.</p>\n@param updateCertificateRequest The input for the UpdateCertificate operation.*/",
      "asyncDocumentationWithHandler" : "/**<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Moving a cert from the ACTIVE state (including REVOKED) will NOT disconnect currently-connected devices, although these devices will be unable to reconnect.</p> <p>The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.</p>\n@param updateCertificateRequest The input for the UpdateCertificate operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.*/",
      "syncReturnType" : "void",
      "asyncReturnType" : "Void",
      "asyncFutureType" : "java.util.concurrent.Future<Void>",
      "asyncCallableType" : "java.util.concurrent.Callable<Void>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateCertificateRequest, Void>",
      "methodName" : "updateCertificate"
    },
    "UpdateThing" : {
      "documentation" : "<p>Updates the data for a thing.</p>",
      "operationName" : "UpdateThing",
      "deprecated" : false,
      "input" : {
        "variableName" : "updateThingRequest",
        "variableType" : "UpdateThingRequest",
        "variableDeclarationType" : "UpdateThingRequest",
        "documentation" : "<p>The input for the UpdateThing operation.</p>",
        "simpleType" : "UpdateThingRequest",
        "variableSetterType" : "UpdateThingRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "UpdateThingResult",
        "documentation" : "<p>The output from the UpdateThing operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "InvalidRequestException",
        "documentation" : "<p>The request is not valid.</p>"
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>The rate exceeds the limit.</p>"
      }, {
        "exceptionName" : "UnauthorizedException",
        "documentation" : "<p>You are not authorized to perform this operation.</p>"
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>The service is temporarily unavailable.</p>"
      }, {
        "exceptionName" : "InternalFailureException",
        "documentation" : "<p>An unexpected error has occurred.</p>"
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The specified resource does not exist.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Updates the data for a thing.</p>\n@param updateThingRequest The input for the UpdateThing operation.\n@return Result of the UpdateThing operation returned by the service.\n@throws InvalidRequestException The request is not valid.\n@throws ThrottlingException The rate exceeds the limit.\n@throws UnauthorizedException You are not authorized to perform this operation.\n@throws ServiceUnavailableException The service is temporarily unavailable.\n@throws InternalFailureException An unexpected error has occurred.\n@throws ResourceNotFoundException The specified resource does not exist.*/",
      "asyncDocumentation" : "/**<p>Updates the data for a thing.</p>\n@param updateThingRequest The input for the UpdateThing operation.\n@return A Java Future containing the result of the UpdateThing operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Updates the data for a thing.</p>\n@param updateThingRequest The input for the UpdateThing operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the UpdateThing operation returned by the service.*/",
      "syncReturnType" : "UpdateThingResult",
      "asyncReturnType" : "UpdateThingResult",
      "asyncFutureType" : "java.util.concurrent.Future<UpdateThingResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<UpdateThingResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<UpdateThingRequest, UpdateThingResult>",
      "methodName" : "updateThing"
    }
  },
  "shapes" : {
    "KeyPair" : {
      "c2jName" : "KeyPair",
      "documentation" : "<p>Describes a key pair.</p>",
      "shapeName" : "KeyPair",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The public key.</p>",
        "name" : "PublicKey",
        "c2jName" : "PublicKey",
        "c2jShape" : "PublicKey",
        "variable" : {
          "variableName" : "publicKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The public key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "publicKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "PublicKey",
          "marshallLocationName" : "PublicKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.*/",
        "getterDocumentation" : "/**<p>The public key.</p>\n@return The public key.*/",
        "fluentSetterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The private key.</p>",
        "name" : "PrivateKey",
        "c2jName" : "PrivateKey",
        "c2jShape" : "PrivateKey",
        "variable" : {
          "variableName" : "privateKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The private key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "privateKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "PrivateKey",
          "marshallLocationName" : "PrivateKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.*/",
        "getterDocumentation" : "/**<p>The private key.</p>\n@return The private key.*/",
        "fluentSetterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "keyPair",
        "variableType" : "KeyPair",
        "variableDeclarationType" : "KeyPair",
        "documentation" : null,
        "simpleType" : "KeyPair",
        "variableSetterType" : "KeyPair"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PublicKey" : {
          "documentation" : "<p>The public key.</p>",
          "name" : "PublicKey",
          "c2jName" : "PublicKey",
          "c2jShape" : "PublicKey",
          "variable" : {
            "variableName" : "publicKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The public key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "publicKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "PublicKey",
            "marshallLocationName" : "PublicKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.*/",
          "getterDocumentation" : "/**<p>The public key.</p>\n@return The public key.*/",
          "fluentSetterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The public key.</p>\n@param publicKey The public key.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PrivateKey" : {
          "documentation" : "<p>The private key.</p>",
          "name" : "PrivateKey",
          "c2jName" : "PrivateKey",
          "c2jShape" : "PrivateKey",
          "variable" : {
            "variableName" : "privateKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The private key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "privateKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "PrivateKey",
            "marshallLocationName" : "PrivateKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.*/",
          "getterDocumentation" : "/**<p>The private key.</p>\n@return The private key.*/",
          "fluentSetterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The private key.</p>\n@param privateKey The private key.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DetachThingPrincipalResult" : {
      "c2jName" : "DetachThingPrincipalResponse",
      "documentation" : "<p>The output from the DetachThingPrincipal operation.</p>",
      "shapeName" : "DetachThingPrincipalResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "detachThingPrincipalResult",
        "variableType" : "DetachThingPrincipalResult",
        "variableDeclarationType" : "DetachThingPrincipalResult",
        "documentation" : null,
        "simpleType" : "DetachThingPrincipalResult",
        "variableSetterType" : "DetachThingPrincipalResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "UnauthorizedException" : {
      "c2jName" : "UnauthorizedException",
      "documentation" : "<p>You are not authorized to perform this operation.</p>",
      "shapeName" : "UnauthorizedException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "unauthorizedException",
        "variableType" : "UnauthorizedException",
        "variableDeclarationType" : "UnauthorizedException",
        "documentation" : null,
        "simpleType" : "UnauthorizedException",
        "variableSetterType" : "UnauthorizedException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "UnauthorizedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "AcceptCertificateTransferRequest" : {
      "c2jName" : "AcceptCertificateTransferRequest",
      "documentation" : "<p>The input for the AcceptCertificateTransfer operation.</p>",
      "shapeName" : "AcceptCertificateTransferRequest",
      "deprecated" : false,
      "required" : [ "certificateId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the certificate is active.</p>",
        "name" : "SetAsActive",
        "c2jName" : "setAsActive",
        "c2jShape" : "SetAsActive",
        "variable" : {
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "setAsActive",
          "marshallLocationName" : "setAsActive",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
        "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "acceptCertificateTransferRequest",
        "variableType" : "AcceptCertificateTransferRequest",
        "variableDeclarationType" : "AcceptCertificateTransferRequest",
        "documentation" : null,
        "simpleType" : "AcceptCertificateTransferRequest",
        "variableSetterType" : "AcceptCertificateTransferRequest"
      },
      "marshaller" : {
        "action" : "AcceptCertificateTransfer",
        "verb" : "PATCH",
        "target" : null,
        "requestUri" : "/accept-certificate-transfer/{certificateId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SetAsActive" : {
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "name" : "SetAsActive",
          "c2jName" : "setAsActive",
          "c2jShape" : "SetAsActive",
          "variable" : {
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the certificate is active.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "setAsActive",
            "marshallLocationName" : "setAsActive",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
          "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DetachPrincipalPolicyRequest" : {
      "c2jName" : "DetachPrincipalPolicyRequest",
      "documentation" : "<p>The input for the DetachPrincipalPolicy operation.</p>",
      "shapeName" : "DetachPrincipalPolicyRequest",
      "deprecated" : false,
      "required" : [ "policyName", "principal" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the policy to detach.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the policy to detach.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.*/",
        "getterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@return The name of the policy to detach.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>",
        "name" : "Principal",
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "variable" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "x-amzn-iot-principal",
          "marshallLocationName" : "x-amzn-iot-principal",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "flattened" : false,
          "header" : true,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>\n@param principal The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.*/",
        "getterDocumentation" : "/**<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>\n@return The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.*/",
        "fluentSetterDocumentation" : "/**<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>\n@param principal The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>\n@param principal The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "detachPrincipalPolicyRequest",
        "variableType" : "DetachPrincipalPolicyRequest",
        "variableDeclarationType" : "DetachPrincipalPolicyRequest",
        "documentation" : null,
        "simpleType" : "DetachPrincipalPolicyRequest",
        "variableSetterType" : "DetachPrincipalPolicyRequest"
      },
      "marshaller" : {
        "action" : "DetachPrincipalPolicy",
        "verb" : "DELETE",
        "target" : null,
        "requestUri" : "/principal-policies/{policyName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Principal" : {
          "documentation" : "<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>",
          "name" : "Principal",
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "variable" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "x-amzn-iot-principal",
            "marshallLocationName" : "x-amzn-iot-principal",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "flattened" : false,
            "header" : true,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>\n@param principal The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.*/",
          "getterDocumentation" : "/**<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>\n@return The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.*/",
          "fluentSetterDocumentation" : "/**<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>\n@param principal The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.</p>\n@param principal The principal</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is a Cognito identity specify the identity ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyName" : {
          "documentation" : "<p>The name of the policy to detach.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the policy to detach.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.*/",
          "getterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@return The name of the policy to detach.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the policy to detach.</p>\n@param policyName The name of the policy to detach.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListThingPrincipalsResult" : {
      "c2jName" : "ListThingPrincipalsResponse",
      "documentation" : "<p>The output from the ListThingPrincipals operation.</p>",
      "shapeName" : "ListThingPrincipalsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The principals.</p>",
        "name" : "Principals",
        "c2jName" : "principals",
        "c2jShape" : "Principals",
        "variable" : {
          "variableName" : "principals",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>The principals.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "principals",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "principals",
          "marshallLocationName" : "principals",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The principals.</p>\n@param principals The principals.*/",
        "getterDocumentation" : "/**<p>The principals.</p>\n@return The principals.*/",
        "fluentSetterDocumentation" : "/**<p>The principals.</p>\n@param principals The principals.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The principals.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPrincipals(java.util.Collection)} or {@link #withPrincipals(java.util.Collection)} if you want to override the existing values.</p>\n@param principals The principals.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listThingPrincipalsResult",
        "variableType" : "ListThingPrincipalsResult",
        "variableDeclarationType" : "ListThingPrincipalsResult",
        "documentation" : null,
        "simpleType" : "ListThingPrincipalsResult",
        "variableSetterType" : "ListThingPrincipalsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Principals" : {
          "documentation" : "<p>The principals.</p>",
          "name" : "Principals",
          "c2jName" : "principals",
          "c2jShape" : "Principals",
          "variable" : {
            "variableName" : "principals",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>The principals.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "principals",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "principals",
            "marshallLocationName" : "principals",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The principals.</p>\n@param principals The principals.*/",
          "getterDocumentation" : "/**<p>The principals.</p>\n@return The principals.*/",
          "fluentSetterDocumentation" : "/**<p>The principals.</p>\n@param principals The principals.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The principals.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPrincipals(java.util.Collection)} or {@link #withPrincipals(java.util.Collection)} if you want to override the existing values.</p>\n@param principals The principals.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "SqlParseException" : {
      "c2jName" : "SqlParseException",
      "documentation" : "<p>The Rule-SQL expression can't be parsed correctly.</p>",
      "shapeName" : "SqlParseException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "sqlParseException",
        "variableType" : "SqlParseException",
        "variableDeclarationType" : "SqlParseException",
        "documentation" : null,
        "simpleType" : "SqlParseException",
        "variableSetterType" : "SqlParseException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "SqlParseException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ResourceAlreadyExistsException" : {
      "c2jName" : "ResourceAlreadyExistsException",
      "documentation" : "<p>The resource already exists.</p>",
      "shapeName" : "ResourceAlreadyExistsException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "resourceAlreadyExistsException",
        "variableType" : "ResourceAlreadyExistsException",
        "variableDeclarationType" : "ResourceAlreadyExistsException",
        "documentation" : null,
        "simpleType" : "ResourceAlreadyExistsException",
        "variableSetterType" : "ResourceAlreadyExistsException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ResourceAlreadyExistsException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "documentation" : "<p>The number of attached entities exceeds the limit.</p>",
      "shapeName" : "LimitExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "variableDeclarationType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "CreateKeysAndCertificateResult" : {
      "c2jName" : "CreateKeysAndCertificateResponse",
      "documentation" : "<p>The output of the CreateKeysAndCertificate operation.</p>",
      "shapeName" : "CreateKeysAndCertificateResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the certificate.</p>",
        "name" : "CertificateArn",
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "variable" : {
          "variableName" : "certificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateArn",
          "marshallLocationName" : "certificateArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
        "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).*/",
        "getterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>\n@return The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The certificate data, in PEM format.</p>",
        "name" : "CertificatePem",
        "c2jName" : "certificatePem",
        "c2jShape" : "CertificatePem",
        "variable" : {
          "variableName" : "certificatePem",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificatePem",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificatePem",
          "marshallLocationName" : "certificatePem",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
        "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
        "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The generated key pair.</p>",
        "name" : "KeyPair",
        "c2jName" : "keyPair",
        "c2jShape" : "KeyPair",
        "variable" : {
          "variableName" : "keyPair",
          "variableType" : "KeyPair",
          "variableDeclarationType" : "KeyPair",
          "documentation" : "<p>The generated key pair.</p>",
          "simpleType" : "KeyPair",
          "variableSetterType" : "KeyPair"
        },
        "setterModel" : {
          "variableName" : "keyPair",
          "variableType" : "KeyPair",
          "variableDeclarationType" : "KeyPair",
          "documentation" : "",
          "simpleType" : "KeyPair",
          "variableSetterType" : "KeyPair"
        },
        "getterModel" : {
          "returnType" : "KeyPair",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "keyPair",
          "marshallLocationName" : "keyPair",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.*/",
        "getterDocumentation" : "/**<p>The generated key pair.</p>\n@return The generated key pair.*/",
        "fluentSetterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createKeysAndCertificateResult",
        "variableType" : "CreateKeysAndCertificateResult",
        "variableDeclarationType" : "CreateKeysAndCertificateResult",
        "documentation" : null,
        "simpleType" : "CreateKeysAndCertificateResult",
        "variableSetterType" : "CreateKeysAndCertificateResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "KeyPair" : {
          "documentation" : "<p>The generated key pair.</p>",
          "name" : "KeyPair",
          "c2jName" : "keyPair",
          "c2jShape" : "KeyPair",
          "variable" : {
            "variableName" : "keyPair",
            "variableType" : "KeyPair",
            "variableDeclarationType" : "KeyPair",
            "documentation" : "<p>The generated key pair.</p>",
            "simpleType" : "KeyPair",
            "variableSetterType" : "KeyPair"
          },
          "setterModel" : {
            "variableName" : "keyPair",
            "variableType" : "KeyPair",
            "variableDeclarationType" : "KeyPair",
            "documentation" : "",
            "simpleType" : "KeyPair",
            "variableSetterType" : "KeyPair"
          },
          "getterModel" : {
            "returnType" : "KeyPair",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "keyPair",
            "marshallLocationName" : "keyPair",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.*/",
          "getterDocumentation" : "/**<p>The generated key pair.</p>\n@return The generated key pair.*/",
          "fluentSetterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The generated key pair.</p>\n@param keyPair The generated key pair.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).*/",
          "getterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>\n@return The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).</p>\n@param certificateId The ID of the certificate. AWS IoT issues a default subject name for the certificate (e.g., AWS IoT Certificate).\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CertificateArn" : {
          "documentation" : "<p>The ARN of the certificate.</p>",
          "name" : "CertificateArn",
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "variable" : {
            "variableName" : "certificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateArn",
            "marshallLocationName" : "certificateArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
          "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CertificatePem" : {
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "name" : "CertificatePem",
          "c2jName" : "certificatePem",
          "c2jShape" : "CertificatePem",
          "variable" : {
            "variableName" : "certificatePem",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The certificate data, in PEM format.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificatePem",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificatePem",
            "marshallLocationName" : "certificatePem",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
          "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
          "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "TransferCertificateRequest" : {
      "c2jName" : "TransferCertificateRequest",
      "documentation" : "<p>The input for the TransferCertificate operation.</p>",
      "shapeName" : "TransferCertificateRequest",
      "deprecated" : false,
      "required" : [ "certificateId", "targetAwsAccount" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The AWS account.</p>",
        "name" : "TargetAwsAccount",
        "c2jName" : "targetAwsAccount",
        "c2jShape" : "AwsAccountId",
        "variable" : {
          "variableName" : "targetAwsAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "targetAwsAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "targetAwsAccount",
          "marshallLocationName" : "targetAwsAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.*/",
        "getterDocumentation" : "/**<p>The AWS account.</p>\n@return The AWS account.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "transferCertificateRequest",
        "variableType" : "TransferCertificateRequest",
        "variableDeclarationType" : "TransferCertificateRequest",
        "documentation" : null,
        "simpleType" : "TransferCertificateRequest",
        "variableSetterType" : "TransferCertificateRequest"
      },
      "marshaller" : {
        "action" : "TransferCertificate",
        "verb" : "PATCH",
        "target" : null,
        "requestUri" : "/transfer-certificate/{certificateId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "TargetAwsAccount" : {
          "documentation" : "<p>The AWS account.</p>",
          "name" : "TargetAwsAccount",
          "c2jName" : "targetAwsAccount",
          "c2jShape" : "AwsAccountId",
          "variable" : {
            "variableName" : "targetAwsAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "targetAwsAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "targetAwsAccount",
            "marshallLocationName" : "targetAwsAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.*/",
          "getterDocumentation" : "/**<p>The AWS account.</p>\n@return The AWS account.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account.</p>\n@param targetAwsAccount The AWS account.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UpdateThingRequest" : {
      "c2jName" : "UpdateThingRequest",
      "documentation" : "<p>The input for the UpdateThing operation.</p>",
      "shapeName" : "UpdateThingRequest",
      "deprecated" : false,
      "required" : [ "thingName", "attributePayload" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The thing name.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The thing name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.*/",
        "getterDocumentation" : "/**<p>The thing name.</p>\n@return The thing name.*/",
        "fluentSetterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
        "name" : "AttributePayload",
        "c2jName" : "attributePayload",
        "c2jShape" : "AttributePayload",
        "variable" : {
          "variableName" : "attributePayload",
          "variableType" : "AttributePayload",
          "variableDeclarationType" : "AttributePayload",
          "documentation" : "<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
          "simpleType" : "AttributePayload",
          "variableSetterType" : "AttributePayload"
        },
        "setterModel" : {
          "variableName" : "attributePayload",
          "variableType" : "AttributePayload",
          "variableDeclarationType" : "AttributePayload",
          "documentation" : "",
          "simpleType" : "AttributePayload",
          "variableSetterType" : "AttributePayload"
        },
        "getterModel" : {
          "returnType" : "AttributePayload",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "attributePayload",
          "marshallLocationName" : "attributePayload",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
        "getterDocumentation" : "/**<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@return The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
        "fluentSetterDocumentation" : "/**<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "updateThingRequest",
        "variableType" : "UpdateThingRequest",
        "variableDeclarationType" : "UpdateThingRequest",
        "documentation" : null,
        "simpleType" : "UpdateThingRequest",
        "variableSetterType" : "UpdateThingRequest"
      },
      "marshaller" : {
        "action" : "UpdateThing",
        "verb" : "PATCH",
        "target" : null,
        "requestUri" : "/things/{thingName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AttributePayload" : {
          "documentation" : "<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
          "name" : "AttributePayload",
          "c2jName" : "attributePayload",
          "c2jShape" : "AttributePayload",
          "variable" : {
            "variableName" : "attributePayload",
            "variableType" : "AttributePayload",
            "variableDeclarationType" : "AttributePayload",
            "documentation" : "<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
            "simpleType" : "AttributePayload",
            "variableSetterType" : "AttributePayload"
          },
          "setterModel" : {
            "variableName" : "attributePayload",
            "variableType" : "AttributePayload",
            "variableDeclarationType" : "AttributePayload",
            "documentation" : "",
            "simpleType" : "AttributePayload",
            "variableSetterType" : "AttributePayload"
          },
          "getterModel" : {
            "returnType" : "AttributePayload",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "attributePayload",
            "marshallLocationName" : "attributePayload",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
          "getterDocumentation" : "/**<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@return The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
          "fluentSetterDocumentation" : "/**<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ThingName" : {
          "documentation" : "<p>The thing name.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The thing name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.*/",
          "getterDocumentation" : "/**<p>The thing name.</p>\n@return The thing name.*/",
          "fluentSetterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeCertificateRequest" : {
      "c2jName" : "DescribeCertificateRequest",
      "documentation" : "<p>The input for the DescribeCertificate operation.</p>",
      "shapeName" : "DescribeCertificateRequest",
      "deprecated" : false,
      "required" : [ "certificateId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeCertificateRequest",
        "variableType" : "DescribeCertificateRequest",
        "variableDeclarationType" : "DescribeCertificateRequest",
        "documentation" : null,
        "simpleType" : "DescribeCertificateRequest",
        "variableSetterType" : "DescribeCertificateRequest"
      },
      "marshaller" : {
        "action" : "DescribeCertificate",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/certificates/{certificateId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListPolicyVersionsResult" : {
      "c2jName" : "ListPolicyVersionsResponse",
      "documentation" : "<p>The output from the ListPolicyVersions operation.</p>",
      "shapeName" : "ListPolicyVersionsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy versions.</p>",
        "name" : "PolicyVersions",
        "c2jName" : "policyVersions",
        "c2jShape" : "PolicyVersions",
        "variable" : {
          "variableName" : "policyVersions",
          "variableType" : "java.util.List<PolicyVersion>",
          "variableDeclarationType" : "java.util.List<PolicyVersion>",
          "documentation" : "<p>The policy versions.</p>",
          "simpleType" : "List<PolicyVersion>",
          "variableSetterType" : "java.util.Collection<PolicyVersion>"
        },
        "setterModel" : {
          "variableName" : "policyVersions",
          "variableType" : "java.util.List<PolicyVersion>",
          "variableDeclarationType" : "java.util.List<PolicyVersion>",
          "documentation" : "",
          "simpleType" : "List<PolicyVersion>",
          "variableSetterType" : "java.util.Collection<PolicyVersion>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<PolicyVersion>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyVersions",
          "marshallLocationName" : "policyVersions",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "PolicyVersion",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "PolicyVersion",
            "variable" : {
              "variableName" : "member",
              "variableType" : "PolicyVersion",
              "variableDeclarationType" : "PolicyVersion",
              "documentation" : "",
              "simpleType" : "PolicyVersion",
              "variableSetterType" : "PolicyVersion"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "PolicyVersion",
              "variableDeclarationType" : "PolicyVersion",
              "documentation" : "",
              "simpleType" : "PolicyVersion",
              "variableSetterType" : "PolicyVersion"
            },
            "getterModel" : {
              "returnType" : "PolicyVersion",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "PolicyVersion",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<PolicyVersion>",
          "templateImplType" : "java.util.ArrayList<PolicyVersion>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy versions.</p>\n@param policyVersions The policy versions.*/",
        "getterDocumentation" : "/**<p>The policy versions.</p>\n@return The policy versions.*/",
        "fluentSetterDocumentation" : "/**<p>The policy versions.</p>\n@param policyVersions The policy versions.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy versions.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicyVersions(java.util.Collection)} or {@link #withPolicyVersions(java.util.Collection)} if you want to override the existing values.</p>\n@param policyVersions The policy versions.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listPolicyVersionsResult",
        "variableType" : "ListPolicyVersionsResult",
        "variableDeclarationType" : "ListPolicyVersionsResult",
        "documentation" : null,
        "simpleType" : "ListPolicyVersionsResult",
        "variableSetterType" : "ListPolicyVersionsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyVersions" : {
          "documentation" : "<p>The policy versions.</p>",
          "name" : "PolicyVersions",
          "c2jName" : "policyVersions",
          "c2jShape" : "PolicyVersions",
          "variable" : {
            "variableName" : "policyVersions",
            "variableType" : "java.util.List<PolicyVersion>",
            "variableDeclarationType" : "java.util.List<PolicyVersion>",
            "documentation" : "<p>The policy versions.</p>",
            "simpleType" : "List<PolicyVersion>",
            "variableSetterType" : "java.util.Collection<PolicyVersion>"
          },
          "setterModel" : {
            "variableName" : "policyVersions",
            "variableType" : "java.util.List<PolicyVersion>",
            "variableDeclarationType" : "java.util.List<PolicyVersion>",
            "documentation" : "",
            "simpleType" : "List<PolicyVersion>",
            "variableSetterType" : "java.util.Collection<PolicyVersion>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<PolicyVersion>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyVersions",
            "marshallLocationName" : "policyVersions",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "PolicyVersion",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "PolicyVersion",
              "variable" : {
                "variableName" : "member",
                "variableType" : "PolicyVersion",
                "variableDeclarationType" : "PolicyVersion",
                "documentation" : "",
                "simpleType" : "PolicyVersion",
                "variableSetterType" : "PolicyVersion"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "PolicyVersion",
                "variableDeclarationType" : "PolicyVersion",
                "documentation" : "",
                "simpleType" : "PolicyVersion",
                "variableSetterType" : "PolicyVersion"
              },
              "getterModel" : {
                "returnType" : "PolicyVersion",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "PolicyVersion",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<PolicyVersion>",
            "templateImplType" : "java.util.ArrayList<PolicyVersion>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy versions.</p>\n@param policyVersions The policy versions.*/",
          "getterDocumentation" : "/**<p>The policy versions.</p>\n@return The policy versions.*/",
          "fluentSetterDocumentation" : "/**<p>The policy versions.</p>\n@param policyVersions The policy versions.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy versions.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicyVersions(java.util.Collection)} or {@link #withPolicyVersions(java.util.Collection)} if you want to override the existing values.</p>\n@param policyVersions The policy versions.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UpdateCertificateRequest" : {
      "c2jName" : "UpdateCertificateRequest",
      "documentation" : "<p>The input for the UpdateCertificate operation.</p>",
      "shapeName" : "UpdateCertificateRequest",
      "deprecated" : false,
      "required" : [ "certificateId", "newStatus" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The new status.</p>",
        "name" : "NewStatus",
        "c2jName" : "newStatus",
        "c2jShape" : "CertificateStatus",
        "variable" : {
          "variableName" : "newStatus",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The new status.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "newStatus",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "newStatus",
          "marshallLocationName" : "newStatus",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "CertificateStatus",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The new status.</p>\n@param newStatus The new status.\n@see CertificateStatus*/",
        "getterDocumentation" : "/**<p>The new status.</p>\n@return The new status.\n@see CertificateStatus*/",
        "fluentSetterDocumentation" : "/**<p>The new status.</p>\n@param newStatus The new status.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "varargSetterDocumentation" : "/**<p>The new status.</p>\n@param newStatus The new status.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "updateCertificateRequest",
        "variableType" : "UpdateCertificateRequest",
        "variableDeclarationType" : "UpdateCertificateRequest",
        "documentation" : null,
        "simpleType" : "UpdateCertificateRequest",
        "variableSetterType" : "UpdateCertificateRequest"
      },
      "marshaller" : {
        "action" : "UpdateCertificate",
        "verb" : "PUT",
        "target" : null,
        "requestUri" : "/certificates/{certificateId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NewStatus" : {
          "documentation" : "<p>The new status.</p>",
          "name" : "NewStatus",
          "c2jName" : "newStatus",
          "c2jShape" : "CertificateStatus",
          "variable" : {
            "variableName" : "newStatus",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The new status.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "newStatus",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "newStatus",
            "marshallLocationName" : "newStatus",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "CertificateStatus",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The new status.</p>\n@param newStatus The new status.\n@see CertificateStatus*/",
          "getterDocumentation" : "/**<p>The new status.</p>\n@return The new status.\n@see CertificateStatus*/",
          "fluentSetterDocumentation" : "/**<p>The new status.</p>\n@param newStatus The new status.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "varargSetterDocumentation" : "/**<p>The new status.</p>\n@param newStatus The new status.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/"
        }
      }
    },
    "GetTopicRuleResult" : {
      "c2jName" : "GetTopicRuleResponse",
      "documentation" : "<p>The output from the GetTopicRule operation.</p>",
      "shapeName" : "GetTopicRuleResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The rule.</p>",
        "name" : "Rule",
        "c2jName" : "rule",
        "c2jShape" : "TopicRule",
        "variable" : {
          "variableName" : "rule",
          "variableType" : "TopicRule",
          "variableDeclarationType" : "TopicRule",
          "documentation" : "<p>The rule.</p>",
          "simpleType" : "TopicRule",
          "variableSetterType" : "TopicRule"
        },
        "setterModel" : {
          "variableName" : "rule",
          "variableType" : "TopicRule",
          "variableDeclarationType" : "TopicRule",
          "documentation" : "",
          "simpleType" : "TopicRule",
          "variableSetterType" : "TopicRule"
        },
        "getterModel" : {
          "returnType" : "TopicRule",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "rule",
          "marshallLocationName" : "rule",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.*/",
        "getterDocumentation" : "/**<p>The rule.</p>\n@return The rule.*/",
        "fluentSetterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getTopicRuleResult",
        "variableType" : "GetTopicRuleResult",
        "variableDeclarationType" : "GetTopicRuleResult",
        "documentation" : null,
        "simpleType" : "GetTopicRuleResult",
        "variableSetterType" : "GetTopicRuleResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Rule" : {
          "documentation" : "<p>The rule.</p>",
          "name" : "Rule",
          "c2jName" : "rule",
          "c2jShape" : "TopicRule",
          "variable" : {
            "variableName" : "rule",
            "variableType" : "TopicRule",
            "variableDeclarationType" : "TopicRule",
            "documentation" : "<p>The rule.</p>",
            "simpleType" : "TopicRule",
            "variableSetterType" : "TopicRule"
          },
          "setterModel" : {
            "variableName" : "rule",
            "variableType" : "TopicRule",
            "variableDeclarationType" : "TopicRule",
            "documentation" : "",
            "simpleType" : "TopicRule",
            "variableSetterType" : "TopicRule"
          },
          "getterModel" : {
            "returnType" : "TopicRule",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "rule",
            "marshallLocationName" : "rule",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.*/",
          "getterDocumentation" : "/**<p>The rule.</p>\n@return The rule.*/",
          "fluentSetterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The rule.</p>\n@param rule The rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeEndpointRequest" : {
      "c2jName" : "DescribeEndpointRequest",
      "documentation" : "<p>The input for the DescribeEndpoint operation.</p>",
      "shapeName" : "DescribeEndpointRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "describeEndpointRequest",
        "variableType" : "DescribeEndpointRequest",
        "variableDeclarationType" : "DescribeEndpointRequest",
        "documentation" : null,
        "simpleType" : "DescribeEndpointRequest",
        "variableSetterType" : "DescribeEndpointRequest"
      },
      "marshaller" : {
        "action" : "DescribeEndpoint",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/endpoint",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "CreatePolicyVersionResult" : {
      "c2jName" : "CreatePolicyVersionResponse",
      "documentation" : "<p>The output of the CreatePolicyVersion operation.</p>",
      "shapeName" : "CreatePolicyVersionResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy ARN.</p>",
        "name" : "PolicyArn",
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "variable" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyArn",
          "marshallLocationName" : "policyArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "name" : "PolicyDocument",
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "variable" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyDocument",
          "marshallLocationName" : "policyDocument",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy version ID.</p>",
        "name" : "PolicyVersionId",
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "variable" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyVersionId",
          "marshallLocationName" : "policyVersionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the policy version is the default.</p>",
        "name" : "IsDefaultVersion",
        "c2jName" : "isDefaultVersion",
        "c2jShape" : "IsDefaultVersion",
        "variable" : {
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "isDefaultVersion",
          "marshallLocationName" : "isDefaultVersion",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
        "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createPolicyVersionResult",
        "variableType" : "CreatePolicyVersionResult",
        "variableDeclarationType" : "CreatePolicyVersionResult",
        "documentation" : null,
        "simpleType" : "CreatePolicyVersionResult",
        "variableSetterType" : "CreatePolicyVersionResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IsDefaultVersion" : {
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "name" : "IsDefaultVersion",
          "c2jName" : "isDefaultVersion",
          "c2jShape" : "IsDefaultVersion",
          "variable" : {
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the policy version is the default.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "isDefaultVersion",
            "marshallLocationName" : "isDefaultVersion",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
          "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyArn" : {
          "documentation" : "<p>The policy ARN.</p>",
          "name" : "PolicyArn",
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "variable" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyArn",
            "marshallLocationName" : "policyArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyDocument" : {
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "name" : "PolicyDocument",
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "variable" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyDocument",
            "marshallLocationName" : "policyDocument",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyVersionId" : {
          "documentation" : "<p>The policy version ID.</p>",
          "name" : "PolicyVersionId",
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "variable" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyVersionId",
            "marshallLocationName" : "policyVersionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListPrincipalThingsResult" : {
      "c2jName" : "ListPrincipalThingsResponse",
      "documentation" : "<p>The output from the ListPrincipalThings operation.</p>",
      "shapeName" : "ListPrincipalThingsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The things.</p>",
        "name" : "Things",
        "c2jName" : "things",
        "c2jShape" : "ThingNameList",
        "variable" : {
          "variableName" : "things",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>The things.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "things",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "things",
          "marshallLocationName" : "things",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The things.</p>\n@param things The things.*/",
        "getterDocumentation" : "/**<p>The things.</p>\n@return The things.*/",
        "fluentSetterDocumentation" : "/**<p>The things.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The things.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThings(java.util.Collection)} or {@link #withThings(java.util.Collection)} if you want to override the existing values.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A token used to retrieve the next value.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
        "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
        "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listPrincipalThingsResult",
        "variableType" : "ListPrincipalThingsResult",
        "variableDeclarationType" : "ListPrincipalThingsResult",
        "documentation" : null,
        "simpleType" : "ListPrincipalThingsResult",
        "variableSetterType" : "ListPrincipalThingsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Things" : {
          "documentation" : "<p>The things.</p>",
          "name" : "Things",
          "c2jName" : "things",
          "c2jShape" : "ThingNameList",
          "variable" : {
            "variableName" : "things",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>The things.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "things",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "things",
            "marshallLocationName" : "things",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The things.</p>\n@param things The things.*/",
          "getterDocumentation" : "/**<p>The things.</p>\n@return The things.*/",
          "fluentSetterDocumentation" : "/**<p>The things.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The things.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThings(java.util.Collection)} or {@link #withThings(java.util.Collection)} if you want to override the existing values.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NextToken" : {
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A token used to retrieve the next value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
          "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
          "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeEndpointResult" : {
      "c2jName" : "DescribeEndpointResponse",
      "documentation" : "<p>The output from the DescribeEndpoint operation.</p>",
      "shapeName" : "DescribeEndpointResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The address.</p>",
        "name" : "EndpointAddress",
        "c2jName" : "endpointAddress",
        "c2jShape" : "EndpointAddress",
        "variable" : {
          "variableName" : "endpointAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The address.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "endpointAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "endpointAddress",
          "marshallLocationName" : "endpointAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The address.</p>\n@param endpointAddress The address.*/",
        "getterDocumentation" : "/**<p>The address.</p>\n@return The address.*/",
        "fluentSetterDocumentation" : "/**<p>The address.</p>\n@param endpointAddress The address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The address.</p>\n@param endpointAddress The address.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeEndpointResult",
        "variableType" : "DescribeEndpointResult",
        "variableDeclarationType" : "DescribeEndpointResult",
        "documentation" : null,
        "simpleType" : "DescribeEndpointResult",
        "variableSetterType" : "DescribeEndpointResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "EndpointAddress" : {
          "documentation" : "<p>The address.</p>",
          "name" : "EndpointAddress",
          "c2jName" : "endpointAddress",
          "c2jShape" : "EndpointAddress",
          "variable" : {
            "variableName" : "endpointAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The address.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "endpointAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "endpointAddress",
            "marshallLocationName" : "endpointAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The address.</p>\n@param endpointAddress The address.*/",
          "getterDocumentation" : "/**<p>The address.</p>\n@return The address.*/",
          "fluentSetterDocumentation" : "/**<p>The address.</p>\n@param endpointAddress The address.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The address.</p>\n@param endpointAddress The address.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AttachThingPrincipalRequest" : {
      "c2jName" : "AttachThingPrincipalRequest",
      "documentation" : "<p>The input for the AttachThingPrincipal operation.</p>",
      "shapeName" : "AttachThingPrincipalRequest",
      "deprecated" : false,
      "required" : [ "thingName", "principal" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the thing.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The principal (certificate or other credential).</p>",
        "name" : "Principal",
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "variable" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The principal (certificate or other credential).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "x-amzn-principal",
          "marshallLocationName" : "x-amzn-principal",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "flattened" : false,
          "header" : true,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The principal (certificate or other credential).</p>\n@param principal The principal (certificate or other credential).*/",
        "getterDocumentation" : "/**<p>The principal (certificate or other credential).</p>\n@return The principal (certificate or other credential).*/",
        "fluentSetterDocumentation" : "/**<p>The principal (certificate or other credential).</p>\n@param principal The principal (certificate or other credential).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The principal (certificate or other credential).</p>\n@param principal The principal (certificate or other credential).\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "attachThingPrincipalRequest",
        "variableType" : "AttachThingPrincipalRequest",
        "variableDeclarationType" : "AttachThingPrincipalRequest",
        "documentation" : null,
        "simpleType" : "AttachThingPrincipalRequest",
        "variableSetterType" : "AttachThingPrincipalRequest"
      },
      "marshaller" : {
        "action" : "AttachThingPrincipal",
        "verb" : "PUT",
        "target" : null,
        "requestUri" : "/things/{thingName}/principals",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Principal" : {
          "documentation" : "<p>The principal (certificate or other credential).</p>",
          "name" : "Principal",
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "variable" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The principal (certificate or other credential).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "x-amzn-principal",
            "marshallLocationName" : "x-amzn-principal",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "flattened" : false,
            "header" : true,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The principal (certificate or other credential).</p>\n@param principal The principal (certificate or other credential).*/",
          "getterDocumentation" : "/**<p>The principal (certificate or other credential).</p>\n@return The principal (certificate or other credential).*/",
          "fluentSetterDocumentation" : "/**<p>The principal (certificate or other credential).</p>\n@param principal The principal (certificate or other credential).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The principal (certificate or other credential).</p>\n@param principal The principal (certificate or other credential).\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ThingName" : {
          "documentation" : "<p>The name of the thing.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Policy" : {
      "c2jName" : "Policy",
      "documentation" : "<p>Describes an AWS IoT policy.</p>",
      "shapeName" : "Policy",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy ARN.</p>",
        "name" : "PolicyArn",
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "variable" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyArn",
          "marshallLocationName" : "policyArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "policy",
        "variableType" : "Policy",
        "variableDeclarationType" : "Policy",
        "documentation" : null,
        "simpleType" : "Policy",
        "variableSetterType" : "Policy"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyArn" : {
          "documentation" : "<p>The policy ARN.</p>",
          "name" : "PolicyArn",
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "variable" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyArn",
            "marshallLocationName" : "policyArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListTopicRulesResult" : {
      "c2jName" : "ListTopicRulesResponse",
      "documentation" : "<p>The output from the ListTopicRules operation.</p>",
      "shapeName" : "ListTopicRulesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The rules.</p>",
        "name" : "Rules",
        "c2jName" : "rules",
        "c2jShape" : "TopicRuleList",
        "variable" : {
          "variableName" : "rules",
          "variableType" : "java.util.List<TopicRuleListItem>",
          "variableDeclarationType" : "java.util.List<TopicRuleListItem>",
          "documentation" : "<p>The rules.</p>",
          "simpleType" : "List<TopicRuleListItem>",
          "variableSetterType" : "java.util.Collection<TopicRuleListItem>"
        },
        "setterModel" : {
          "variableName" : "rules",
          "variableType" : "java.util.List<TopicRuleListItem>",
          "variableDeclarationType" : "java.util.List<TopicRuleListItem>",
          "documentation" : "",
          "simpleType" : "List<TopicRuleListItem>",
          "variableSetterType" : "java.util.Collection<TopicRuleListItem>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<TopicRuleListItem>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "rules",
          "marshallLocationName" : "rules",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "TopicRuleListItem",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "TopicRuleListItem",
            "variable" : {
              "variableName" : "member",
              "variableType" : "TopicRuleListItem",
              "variableDeclarationType" : "TopicRuleListItem",
              "documentation" : "",
              "simpleType" : "TopicRuleListItem",
              "variableSetterType" : "TopicRuleListItem"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "TopicRuleListItem",
              "variableDeclarationType" : "TopicRuleListItem",
              "documentation" : "",
              "simpleType" : "TopicRuleListItem",
              "variableSetterType" : "TopicRuleListItem"
            },
            "getterModel" : {
              "returnType" : "TopicRuleListItem",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "TopicRuleListItem",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<TopicRuleListItem>",
          "templateImplType" : "java.util.ArrayList<TopicRuleListItem>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The rules.</p>\n@param rules The rules.*/",
        "getterDocumentation" : "/**<p>The rules.</p>\n@return The rules.*/",
        "fluentSetterDocumentation" : "/**<p>The rules.</p>\n@param rules The rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRules(java.util.Collection)} or {@link #withRules(java.util.Collection)} if you want to override the existing values.</p>\n@param rules The rules.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A token used to retrieve the next value.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
        "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
        "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listTopicRulesResult",
        "variableType" : "ListTopicRulesResult",
        "variableDeclarationType" : "ListTopicRulesResult",
        "documentation" : null,
        "simpleType" : "ListTopicRulesResult",
        "variableSetterType" : "ListTopicRulesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A token used to retrieve the next value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
          "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
          "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Rules" : {
          "documentation" : "<p>The rules.</p>",
          "name" : "Rules",
          "c2jName" : "rules",
          "c2jShape" : "TopicRuleList",
          "variable" : {
            "variableName" : "rules",
            "variableType" : "java.util.List<TopicRuleListItem>",
            "variableDeclarationType" : "java.util.List<TopicRuleListItem>",
            "documentation" : "<p>The rules.</p>",
            "simpleType" : "List<TopicRuleListItem>",
            "variableSetterType" : "java.util.Collection<TopicRuleListItem>"
          },
          "setterModel" : {
            "variableName" : "rules",
            "variableType" : "java.util.List<TopicRuleListItem>",
            "variableDeclarationType" : "java.util.List<TopicRuleListItem>",
            "documentation" : "",
            "simpleType" : "List<TopicRuleListItem>",
            "variableSetterType" : "java.util.Collection<TopicRuleListItem>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<TopicRuleListItem>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "rules",
            "marshallLocationName" : "rules",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "TopicRuleListItem",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "TopicRuleListItem",
              "variable" : {
                "variableName" : "member",
                "variableType" : "TopicRuleListItem",
                "variableDeclarationType" : "TopicRuleListItem",
                "documentation" : "",
                "simpleType" : "TopicRuleListItem",
                "variableSetterType" : "TopicRuleListItem"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "TopicRuleListItem",
                "variableDeclarationType" : "TopicRuleListItem",
                "documentation" : "",
                "simpleType" : "TopicRuleListItem",
                "variableSetterType" : "TopicRuleListItem"
              },
              "getterModel" : {
                "returnType" : "TopicRuleListItem",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "TopicRuleListItem",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<TopicRuleListItem>",
            "templateImplType" : "java.util.ArrayList<TopicRuleListItem>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The rules.</p>\n@param rules The rules.*/",
          "getterDocumentation" : "/**<p>The rules.</p>\n@return The rules.*/",
          "fluentSetterDocumentation" : "/**<p>The rules.</p>\n@param rules The rules.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The rules.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRules(java.util.Collection)} or {@link #withRules(java.util.Collection)} if you want to override the existing values.</p>\n@param rules The rules.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "RejectCertificateTransferRequest" : {
      "c2jName" : "RejectCertificateTransferRequest",
      "documentation" : "<p>The input for the RejectCertificateTransfer operation.</p>",
      "shapeName" : "RejectCertificateTransferRequest",
      "deprecated" : false,
      "required" : [ "certificateId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "rejectCertificateTransferRequest",
        "variableType" : "RejectCertificateTransferRequest",
        "variableDeclarationType" : "RejectCertificateTransferRequest",
        "documentation" : null,
        "simpleType" : "RejectCertificateTransferRequest",
        "variableSetterType" : "RejectCertificateTransferRequest"
      },
      "marshaller" : {
        "action" : "RejectCertificateTransfer",
        "verb" : "PATCH",
        "target" : null,
        "requestUri" : "/reject-certificate-transfer/{certificateId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateTopicRuleRequest" : {
      "c2jName" : "CreateTopicRuleRequest",
      "documentation" : "<p>The input for the CreateTopicRule operation.</p>",
      "shapeName" : "CreateTopicRuleRequest",
      "deprecated" : false,
      "required" : [ "ruleName", "topicRulePayload" ],
      "hasPayloadMember" : true,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the rule.</p>",
        "name" : "RuleName",
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "variable" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleName",
          "marshallLocationName" : "ruleName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The rule payload.</p>",
        "name" : "TopicRulePayload",
        "c2jName" : "topicRulePayload",
        "c2jShape" : "TopicRulePayload",
        "variable" : {
          "variableName" : "topicRulePayload",
          "variableType" : "TopicRulePayload",
          "variableDeclarationType" : "TopicRulePayload",
          "documentation" : "<p>The rule payload.</p>",
          "simpleType" : "TopicRulePayload",
          "variableSetterType" : "TopicRulePayload"
        },
        "setterModel" : {
          "variableName" : "topicRulePayload",
          "variableType" : "TopicRulePayload",
          "variableDeclarationType" : "TopicRulePayload",
          "documentation" : "",
          "simpleType" : "TopicRulePayload",
          "variableSetterType" : "TopicRulePayload"
        },
        "getterModel" : {
          "returnType" : "TopicRulePayload",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "topicRulePayload",
          "marshallLocationName" : "topicRulePayload",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : true,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.*/",
        "getterDocumentation" : "/**<p>The rule payload.</p>\n@return The rule payload.*/",
        "fluentSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createTopicRuleRequest",
        "variableType" : "CreateTopicRuleRequest",
        "variableDeclarationType" : "CreateTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "CreateTopicRuleRequest",
        "variableSetterType" : "CreateTopicRuleRequest"
      },
      "marshaller" : {
        "action" : "CreateTopicRule",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/rules/{ruleName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "TopicRulePayload" : {
          "documentation" : "<p>The rule payload.</p>",
          "name" : "TopicRulePayload",
          "c2jName" : "topicRulePayload",
          "c2jShape" : "TopicRulePayload",
          "variable" : {
            "variableName" : "topicRulePayload",
            "variableType" : "TopicRulePayload",
            "variableDeclarationType" : "TopicRulePayload",
            "documentation" : "<p>The rule payload.</p>",
            "simpleType" : "TopicRulePayload",
            "variableSetterType" : "TopicRulePayload"
          },
          "setterModel" : {
            "variableName" : "topicRulePayload",
            "variableType" : "TopicRulePayload",
            "variableDeclarationType" : "TopicRulePayload",
            "documentation" : "",
            "simpleType" : "TopicRulePayload",
            "variableSetterType" : "TopicRulePayload"
          },
          "getterModel" : {
            "returnType" : "TopicRulePayload",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "topicRulePayload",
            "marshallLocationName" : "topicRulePayload",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : true,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.*/",
          "getterDocumentation" : "/**<p>The rule payload.</p>\n@return The rule payload.*/",
          "fluentSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RuleName" : {
          "documentation" : "<p>The name of the rule.</p>",
          "name" : "RuleName",
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "variable" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleName",
            "marshallLocationName" : "ruleName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Certificate" : {
      "c2jName" : "Certificate",
      "documentation" : "<p>Information about a certificate.</p>",
      "shapeName" : "Certificate",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the certificate.</p>",
        "name" : "CertificateArn",
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "variable" : {
          "variableName" : "certificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateArn",
          "marshallLocationName" : "certificateArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
        "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The status of the certificate.</p>",
        "name" : "Status",
        "c2jName" : "status",
        "c2jShape" : "CertificateStatus",
        "variable" : {
          "variableName" : "status",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The status of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "status",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "status",
          "marshallLocationName" : "status",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "CertificateStatus",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@see CertificateStatus*/",
        "getterDocumentation" : "/**<p>The status of the certificate.</p>\n@return The status of the certificate.\n@see CertificateStatus*/",
        "fluentSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "varargSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/"
      }, {
        "documentation" : "<p>The date and time the certificate was created.</p>",
        "name" : "CreationDate",
        "c2jName" : "creationDate",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The date and time the certificate was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "creationDate",
          "marshallLocationName" : "creationDate",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.*/",
        "getterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@return The date and time the certificate was created.*/",
        "fluentSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "certificate",
        "variableType" : "Certificate",
        "variableDeclarationType" : "Certificate",
        "documentation" : null,
        "simpleType" : "Certificate",
        "variableSetterType" : "Certificate"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Status" : {
          "documentation" : "<p>The status of the certificate.</p>",
          "name" : "Status",
          "c2jName" : "status",
          "c2jShape" : "CertificateStatus",
          "variable" : {
            "variableName" : "status",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The status of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "status",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "status",
            "marshallLocationName" : "status",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "CertificateStatus",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@see CertificateStatus*/",
          "getterDocumentation" : "/**<p>The status of the certificate.</p>\n@return The status of the certificate.\n@see CertificateStatus*/",
          "fluentSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "varargSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/"
        },
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CertificateArn" : {
          "documentation" : "<p>The ARN of the certificate.</p>",
          "name" : "CertificateArn",
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "variable" : {
            "variableName" : "certificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateArn",
            "marshallLocationName" : "certificateArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
          "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CreationDate" : {
          "documentation" : "<p>The date and time the certificate was created.</p>",
          "name" : "CreationDate",
          "c2jName" : "creationDate",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The date and time the certificate was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "creationDate",
            "marshallLocationName" : "creationDate",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.*/",
          "getterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@return The date and time the certificate was created.*/",
          "fluentSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InternalException" : {
      "c2jName" : "InternalException",
      "documentation" : "<p>An unexpected error has occurred.</p>",
      "shapeName" : "InternalException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "internalException",
        "variableType" : "InternalException",
        "variableDeclarationType" : "InternalException",
        "documentation" : null,
        "simpleType" : "InternalException",
        "variableSetterType" : "InternalException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InternalException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "GetLoggingOptionsResult" : {
      "c2jName" : "GetLoggingOptionsResponse",
      "documentation" : "<p>The output from the GetLoggingOptions operation.</p>",
      "shapeName" : "GetLoggingOptionsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The logging level.</p>",
        "name" : "LogLevel",
        "c2jName" : "logLevel",
        "c2jShape" : "LogLevel",
        "variable" : {
          "variableName" : "logLevel",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The logging level.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "logLevel",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "logLevel",
          "marshallLocationName" : "logLevel",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "LogLevel",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@see LogLevel*/",
        "getterDocumentation" : "/**<p>The logging level.</p>\n@return The logging level.\n@see LogLevel*/",
        "fluentSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
        "varargSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getLoggingOptionsResult",
        "variableType" : "GetLoggingOptionsResult",
        "variableDeclarationType" : "GetLoggingOptionsResult",
        "documentation" : null,
        "simpleType" : "GetLoggingOptionsResult",
        "variableSetterType" : "GetLoggingOptionsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LogLevel" : {
          "documentation" : "<p>The logging level.</p>",
          "name" : "LogLevel",
          "c2jName" : "logLevel",
          "c2jShape" : "LogLevel",
          "variable" : {
            "variableName" : "logLevel",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The logging level.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "logLevel",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "logLevel",
            "marshallLocationName" : "logLevel",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "LogLevel",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@see LogLevel*/",
          "getterDocumentation" : "/**<p>The logging level.</p>\n@return The logging level.\n@see LogLevel*/",
          "fluentSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
          "varargSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/"
        },
        "RoleArn" : {
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DynamoDBAction" : {
      "c2jName" : "DynamoDBAction",
      "documentation" : "<p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any expression that's valid in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p><code>\"hashKeyValue\": \"${topic(3)}\"</code></p> <p>The following field uses the timestamp:</p> <p><code>\"rangeKeyValue\": \"${timestamp()}\"</code></p>",
      "shapeName" : "DynamoDBAction",
      "deprecated" : false,
      "required" : [ "tableName", "roleArn", "hashKeyField", "hashKeyValue", "rangeKeyField", "rangeKeyValue" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the DynamoDB table.</p>",
        "name" : "TableName",
        "c2jName" : "tableName",
        "c2jShape" : "TableName",
        "variable" : {
          "variableName" : "tableName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the DynamoDB table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "tableName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "tableName",
          "marshallLocationName" : "tableName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.*/",
        "getterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@return The name of the DynamoDB table.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The hash key name.</p>",
        "name" : "HashKeyField",
        "c2jName" : "hashKeyField",
        "c2jShape" : "HashKeyField",
        "variable" : {
          "variableName" : "hashKeyField",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The hash key name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "hashKeyField",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "hashKeyField",
          "marshallLocationName" : "hashKeyField",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.*/",
        "getterDocumentation" : "/**<p>The hash key name.</p>\n@return The hash key name.*/",
        "fluentSetterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The hash key value.</p>",
        "name" : "HashKeyValue",
        "c2jName" : "hashKeyValue",
        "c2jShape" : "HashKeyValue",
        "variable" : {
          "variableName" : "hashKeyValue",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The hash key value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "hashKeyValue",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "hashKeyValue",
          "marshallLocationName" : "hashKeyValue",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.*/",
        "getterDocumentation" : "/**<p>The hash key value.</p>\n@return The hash key value.*/",
        "fluentSetterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The range key name.</p>",
        "name" : "RangeKeyField",
        "c2jName" : "rangeKeyField",
        "c2jShape" : "RangeKeyField",
        "variable" : {
          "variableName" : "rangeKeyField",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The range key name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "rangeKeyField",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "rangeKeyField",
          "marshallLocationName" : "rangeKeyField",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.*/",
        "getterDocumentation" : "/**<p>The range key name.</p>\n@return The range key name.*/",
        "fluentSetterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The range key value.</p>",
        "name" : "RangeKeyValue",
        "c2jName" : "rangeKeyValue",
        "c2jShape" : "RangeKeyValue",
        "variable" : {
          "variableName" : "rangeKeyValue",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The range key value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "rangeKeyValue",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "rangeKeyValue",
          "marshallLocationName" : "rangeKeyValue",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.*/",
        "getterDocumentation" : "/**<p>The range key value.</p>\n@return The range key value.*/",
        "fluentSetterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The action payload.</p>",
        "name" : "PayloadField",
        "c2jName" : "payloadField",
        "c2jShape" : "PayloadField",
        "variable" : {
          "variableName" : "payloadField",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The action payload.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "payloadField",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "payloadField",
          "marshallLocationName" : "payloadField",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The action payload.</p>\n@param payloadField The action payload.*/",
        "getterDocumentation" : "/**<p>The action payload.</p>\n@return The action payload.*/",
        "fluentSetterDocumentation" : "/**<p>The action payload.</p>\n@param payloadField The action payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The action payload.</p>\n@param payloadField The action payload.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "dynamoDBAction",
        "variableType" : "DynamoDBAction",
        "variableDeclarationType" : "DynamoDBAction",
        "documentation" : null,
        "simpleType" : "DynamoDBAction",
        "variableSetterType" : "DynamoDBAction"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RangeKeyField" : {
          "documentation" : "<p>The range key name.</p>",
          "name" : "RangeKeyField",
          "c2jName" : "rangeKeyField",
          "c2jShape" : "RangeKeyField",
          "variable" : {
            "variableName" : "rangeKeyField",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The range key name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "rangeKeyField",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "rangeKeyField",
            "marshallLocationName" : "rangeKeyField",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.*/",
          "getterDocumentation" : "/**<p>The range key name.</p>\n@return The range key name.*/",
          "fluentSetterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The range key name.</p>\n@param rangeKeyField The range key name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PayloadField" : {
          "documentation" : "<p>The action payload.</p>",
          "name" : "PayloadField",
          "c2jName" : "payloadField",
          "c2jShape" : "PayloadField",
          "variable" : {
            "variableName" : "payloadField",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The action payload.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "payloadField",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "payloadField",
            "marshallLocationName" : "payloadField",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The action payload.</p>\n@param payloadField The action payload.*/",
          "getterDocumentation" : "/**<p>The action payload.</p>\n@return The action payload.*/",
          "fluentSetterDocumentation" : "/**<p>The action payload.</p>\n@param payloadField The action payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The action payload.</p>\n@param payloadField The action payload.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RangeKeyValue" : {
          "documentation" : "<p>The range key value.</p>",
          "name" : "RangeKeyValue",
          "c2jName" : "rangeKeyValue",
          "c2jShape" : "RangeKeyValue",
          "variable" : {
            "variableName" : "rangeKeyValue",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The range key value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "rangeKeyValue",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "rangeKeyValue",
            "marshallLocationName" : "rangeKeyValue",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.*/",
          "getterDocumentation" : "/**<p>The range key value.</p>\n@return The range key value.*/",
          "fluentSetterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The range key value.</p>\n@param rangeKeyValue The range key value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "HashKeyValue" : {
          "documentation" : "<p>The hash key value.</p>",
          "name" : "HashKeyValue",
          "c2jName" : "hashKeyValue",
          "c2jShape" : "HashKeyValue",
          "variable" : {
            "variableName" : "hashKeyValue",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The hash key value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "hashKeyValue",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "hashKeyValue",
            "marshallLocationName" : "hashKeyValue",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.*/",
          "getterDocumentation" : "/**<p>The hash key value.</p>\n@return The hash key value.*/",
          "fluentSetterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The hash key value.</p>\n@param hashKeyValue The hash key value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "TableName" : {
          "documentation" : "<p>The name of the DynamoDB table.</p>",
          "name" : "TableName",
          "c2jName" : "tableName",
          "c2jShape" : "TableName",
          "variable" : {
            "variableName" : "tableName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the DynamoDB table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "tableName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "tableName",
            "marshallLocationName" : "tableName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.*/",
          "getterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@return The name of the DynamoDB table.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the DynamoDB table.</p>\n@param tableName The name of the DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "HashKeyField" : {
          "documentation" : "<p>The hash key name.</p>",
          "name" : "HashKeyField",
          "c2jName" : "hashKeyField",
          "c2jShape" : "HashKeyField",
          "variable" : {
            "variableName" : "hashKeyField",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The hash key name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "hashKeyField",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "hashKeyField",
            "marshallLocationName" : "hashKeyField",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.*/",
          "getterDocumentation" : "/**<p>The hash key name.</p>\n@return The hash key name.*/",
          "fluentSetterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The hash key name.</p>\n@param hashKeyField The hash key name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RoleArn" : {
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateCertificateFromCsrRequest" : {
      "c2jName" : "CreateCertificateFromCsrRequest",
      "documentation" : "<p>The input for the CreateCertificateFromCsr operation.</p>",
      "shapeName" : "CreateCertificateFromCsrRequest",
      "deprecated" : false,
      "required" : [ "certificateSigningRequest" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The certificate signing request (CSR).</p>",
        "name" : "CertificateSigningRequest",
        "c2jName" : "certificateSigningRequest",
        "c2jShape" : "CertificateSigningRequest",
        "variable" : {
          "variableName" : "certificateSigningRequest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The certificate signing request (CSR).</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateSigningRequest",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateSigningRequest",
          "marshallLocationName" : "certificateSigningRequest",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).*/",
        "getterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@return The certificate signing request (CSR).*/",
        "fluentSetterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the certificate is active.</p>",
        "name" : "SetAsActive",
        "c2jName" : "setAsActive",
        "c2jShape" : "SetAsActive",
        "variable" : {
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "setAsActive",
          "marshallLocationName" : "setAsActive",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
        "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createCertificateFromCsrRequest",
        "variableType" : "CreateCertificateFromCsrRequest",
        "variableDeclarationType" : "CreateCertificateFromCsrRequest",
        "documentation" : null,
        "simpleType" : "CreateCertificateFromCsrRequest",
        "variableSetterType" : "CreateCertificateFromCsrRequest"
      },
      "marshaller" : {
        "action" : "CreateCertificateFromCsr",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/certificates",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateSigningRequest" : {
          "documentation" : "<p>The certificate signing request (CSR).</p>",
          "name" : "CertificateSigningRequest",
          "c2jName" : "certificateSigningRequest",
          "c2jShape" : "CertificateSigningRequest",
          "variable" : {
            "variableName" : "certificateSigningRequest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The certificate signing request (CSR).</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateSigningRequest",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateSigningRequest",
            "marshallLocationName" : "certificateSigningRequest",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).*/",
          "getterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@return The certificate signing request (CSR).*/",
          "fluentSetterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The certificate signing request (CSR).</p>\n@param certificateSigningRequest The certificate signing request (CSR).\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SetAsActive" : {
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "name" : "SetAsActive",
          "c2jName" : "setAsActive",
          "c2jShape" : "SetAsActive",
          "variable" : {
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the certificate is active.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "setAsActive",
            "marshallLocationName" : "setAsActive",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
          "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetPolicyRequest" : {
      "c2jName" : "GetPolicyRequest",
      "documentation" : "<p>The input for the GetPolicy operation.</p>",
      "shapeName" : "GetPolicyRequest",
      "deprecated" : false,
      "required" : [ "policyName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the policy.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
        "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getPolicyRequest",
        "variableType" : "GetPolicyRequest",
        "variableDeclarationType" : "GetPolicyRequest",
        "documentation" : null,
        "simpleType" : "GetPolicyRequest",
        "variableSetterType" : "GetPolicyRequest"
      },
      "marshaller" : {
        "action" : "GetPolicy",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/policies/{policyName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyName" : {
          "documentation" : "<p>The name of the policy.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
          "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DetachThingPrincipalRequest" : {
      "c2jName" : "DetachThingPrincipalRequest",
      "documentation" : "<p>The input for the DetachThingPrincipal operation.</p>",
      "shapeName" : "DetachThingPrincipalRequest",
      "deprecated" : false,
      "required" : [ "thingName", "principal" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the thing.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The principal.</p>",
        "name" : "Principal",
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "variable" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The principal.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "x-amzn-principal",
          "marshallLocationName" : "x-amzn-principal",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "flattened" : false,
          "header" : true,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
        "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
        "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "detachThingPrincipalRequest",
        "variableType" : "DetachThingPrincipalRequest",
        "variableDeclarationType" : "DetachThingPrincipalRequest",
        "documentation" : null,
        "simpleType" : "DetachThingPrincipalRequest",
        "variableSetterType" : "DetachThingPrincipalRequest"
      },
      "marshaller" : {
        "action" : "DetachThingPrincipal",
        "verb" : "DELETE",
        "target" : null,
        "requestUri" : "/things/{thingName}/principals",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Principal" : {
          "documentation" : "<p>The principal.</p>",
          "name" : "Principal",
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "variable" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The principal.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "x-amzn-principal",
            "marshallLocationName" : "x-amzn-principal",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "flattened" : false,
            "header" : true,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
          "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
          "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ThingName" : {
          "documentation" : "<p>The name of the thing.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Action" : {
      "c2jName" : "Action",
      "documentation" : "<p>Describes the actions associated with a rule.</p>",
      "shapeName" : "Action",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>Write to a DynamoDB table.</p>",
        "name" : "DynamoDB",
        "c2jName" : "dynamoDB",
        "c2jShape" : "DynamoDBAction",
        "variable" : {
          "variableName" : "dynamoDB",
          "variableType" : "DynamoDBAction",
          "variableDeclarationType" : "DynamoDBAction",
          "documentation" : "<p>Write to a DynamoDB table.</p>",
          "simpleType" : "DynamoDBAction",
          "variableSetterType" : "DynamoDBAction"
        },
        "setterModel" : {
          "variableName" : "dynamoDB",
          "variableType" : "DynamoDBAction",
          "variableDeclarationType" : "DynamoDBAction",
          "documentation" : "",
          "simpleType" : "DynamoDBAction",
          "variableSetterType" : "DynamoDBAction"
        },
        "getterModel" : {
          "returnType" : "DynamoDBAction",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "dynamoDB",
          "marshallLocationName" : "dynamoDB",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.*/",
        "getterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@return Write to a DynamoDB table.*/",
        "fluentSetterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Invoke a Lambda function.</p>",
        "name" : "Lambda",
        "c2jName" : "lambda",
        "c2jShape" : "LambdaAction",
        "variable" : {
          "variableName" : "lambda",
          "variableType" : "LambdaAction",
          "variableDeclarationType" : "LambdaAction",
          "documentation" : "<p>Invoke a Lambda function.</p>",
          "simpleType" : "LambdaAction",
          "variableSetterType" : "LambdaAction"
        },
        "setterModel" : {
          "variableName" : "lambda",
          "variableType" : "LambdaAction",
          "variableDeclarationType" : "LambdaAction",
          "documentation" : "",
          "simpleType" : "LambdaAction",
          "variableSetterType" : "LambdaAction"
        },
        "getterModel" : {
          "returnType" : "LambdaAction",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "lambda",
          "marshallLocationName" : "lambda",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.*/",
        "getterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@return Invoke a Lambda function.*/",
        "fluentSetterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Publish to an SNS topic.</p>",
        "name" : "Sns",
        "c2jName" : "sns",
        "c2jShape" : "SnsAction",
        "variable" : {
          "variableName" : "sns",
          "variableType" : "SnsAction",
          "variableDeclarationType" : "SnsAction",
          "documentation" : "<p>Publish to an SNS topic.</p>",
          "simpleType" : "SnsAction",
          "variableSetterType" : "SnsAction"
        },
        "setterModel" : {
          "variableName" : "sns",
          "variableType" : "SnsAction",
          "variableDeclarationType" : "SnsAction",
          "documentation" : "",
          "simpleType" : "SnsAction",
          "variableSetterType" : "SnsAction"
        },
        "getterModel" : {
          "returnType" : "SnsAction",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "sns",
          "marshallLocationName" : "sns",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Publish to an SNS topic.</p>\n@param sns Publish to an SNS topic.*/",
        "getterDocumentation" : "/**<p>Publish to an SNS topic.</p>\n@return Publish to an SNS topic.*/",
        "fluentSetterDocumentation" : "/**<p>Publish to an SNS topic.</p>\n@param sns Publish to an SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Publish to an SNS topic.</p>\n@param sns Publish to an SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Publish to an SQS queue.</p>",
        "name" : "Sqs",
        "c2jName" : "sqs",
        "c2jShape" : "SqsAction",
        "variable" : {
          "variableName" : "sqs",
          "variableType" : "SqsAction",
          "variableDeclarationType" : "SqsAction",
          "documentation" : "<p>Publish to an SQS queue.</p>",
          "simpleType" : "SqsAction",
          "variableSetterType" : "SqsAction"
        },
        "setterModel" : {
          "variableName" : "sqs",
          "variableType" : "SqsAction",
          "variableDeclarationType" : "SqsAction",
          "documentation" : "",
          "simpleType" : "SqsAction",
          "variableSetterType" : "SqsAction"
        },
        "getterModel" : {
          "returnType" : "SqsAction",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "sqs",
          "marshallLocationName" : "sqs",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Publish to an SQS queue.</p>\n@param sqs Publish to an SQS queue.*/",
        "getterDocumentation" : "/**<p>Publish to an SQS queue.</p>\n@return Publish to an SQS queue.*/",
        "fluentSetterDocumentation" : "/**<p>Publish to an SQS queue.</p>\n@param sqs Publish to an SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Publish to an SQS queue.</p>\n@param sqs Publish to an SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Write data to a Kinesis stream.</p>",
        "name" : "Kinesis",
        "c2jName" : "kinesis",
        "c2jShape" : "KinesisAction",
        "variable" : {
          "variableName" : "kinesis",
          "variableType" : "KinesisAction",
          "variableDeclarationType" : "KinesisAction",
          "documentation" : "<p>Write data to a Kinesis stream.</p>",
          "simpleType" : "KinesisAction",
          "variableSetterType" : "KinesisAction"
        },
        "setterModel" : {
          "variableName" : "kinesis",
          "variableType" : "KinesisAction",
          "variableDeclarationType" : "KinesisAction",
          "documentation" : "",
          "simpleType" : "KinesisAction",
          "variableSetterType" : "KinesisAction"
        },
        "getterModel" : {
          "returnType" : "KinesisAction",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "kinesis",
          "marshallLocationName" : "kinesis",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Write data to a Kinesis stream.</p>\n@param kinesis Write data to a Kinesis stream.*/",
        "getterDocumentation" : "/**<p>Write data to a Kinesis stream.</p>\n@return Write data to a Kinesis stream.*/",
        "fluentSetterDocumentation" : "/**<p>Write data to a Kinesis stream.</p>\n@param kinesis Write data to a Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Write data to a Kinesis stream.</p>\n@param kinesis Write data to a Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Publish to another MQTT topic.</p>",
        "name" : "Republish",
        "c2jName" : "republish",
        "c2jShape" : "RepublishAction",
        "variable" : {
          "variableName" : "republish",
          "variableType" : "RepublishAction",
          "variableDeclarationType" : "RepublishAction",
          "documentation" : "<p>Publish to another MQTT topic.</p>",
          "simpleType" : "RepublishAction",
          "variableSetterType" : "RepublishAction"
        },
        "setterModel" : {
          "variableName" : "republish",
          "variableType" : "RepublishAction",
          "variableDeclarationType" : "RepublishAction",
          "documentation" : "",
          "simpleType" : "RepublishAction",
          "variableSetterType" : "RepublishAction"
        },
        "getterModel" : {
          "returnType" : "RepublishAction",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "republish",
          "marshallLocationName" : "republish",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.*/",
        "getterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@return Publish to another MQTT topic.*/",
        "fluentSetterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Write to an S3 bucket.</p>",
        "name" : "S3",
        "c2jName" : "s3",
        "c2jShape" : "S3Action",
        "variable" : {
          "variableName" : "s3",
          "variableType" : "S3Action",
          "variableDeclarationType" : "S3Action",
          "documentation" : "<p>Write to an S3 bucket.</p>",
          "simpleType" : "S3Action",
          "variableSetterType" : "S3Action"
        },
        "setterModel" : {
          "variableName" : "s3",
          "variableType" : "S3Action",
          "variableDeclarationType" : "S3Action",
          "documentation" : "",
          "simpleType" : "S3Action",
          "variableSetterType" : "S3Action"
        },
        "getterModel" : {
          "returnType" : "S3Action",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "s3",
          "marshallLocationName" : "s3",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Write to an S3 bucket.</p>\n@param s3 Write to an S3 bucket.*/",
        "getterDocumentation" : "/**<p>Write to an S3 bucket.</p>\n@return Write to an S3 bucket.*/",
        "fluentSetterDocumentation" : "/**<p>Write to an S3 bucket.</p>\n@param s3 Write to an S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Write to an S3 bucket.</p>\n@param s3 Write to an S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Firehose",
        "c2jName" : "firehose",
        "c2jShape" : "FirehoseAction",
        "variable" : {
          "variableName" : "firehose",
          "variableType" : "FirehoseAction",
          "variableDeclarationType" : "FirehoseAction",
          "documentation" : "",
          "simpleType" : "FirehoseAction",
          "variableSetterType" : "FirehoseAction"
        },
        "setterModel" : {
          "variableName" : "firehose",
          "variableType" : "FirehoseAction",
          "variableDeclarationType" : "FirehoseAction",
          "documentation" : "",
          "simpleType" : "FirehoseAction",
          "variableSetterType" : "FirehoseAction"
        },
        "getterModel" : {
          "returnType" : "FirehoseAction",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "firehose",
          "marshallLocationName" : "firehose",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param firehose */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param firehose \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param firehose \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "action",
        "variableType" : "Action",
        "variableDeclarationType" : "Action",
        "documentation" : null,
        "simpleType" : "Action",
        "variableSetterType" : "Action"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "S3" : {
          "documentation" : "<p>Write to an S3 bucket.</p>",
          "name" : "S3",
          "c2jName" : "s3",
          "c2jShape" : "S3Action",
          "variable" : {
            "variableName" : "s3",
            "variableType" : "S3Action",
            "variableDeclarationType" : "S3Action",
            "documentation" : "<p>Write to an S3 bucket.</p>",
            "simpleType" : "S3Action",
            "variableSetterType" : "S3Action"
          },
          "setterModel" : {
            "variableName" : "s3",
            "variableType" : "S3Action",
            "variableDeclarationType" : "S3Action",
            "documentation" : "",
            "simpleType" : "S3Action",
            "variableSetterType" : "S3Action"
          },
          "getterModel" : {
            "returnType" : "S3Action",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "s3",
            "marshallLocationName" : "s3",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Write to an S3 bucket.</p>\n@param s3 Write to an S3 bucket.*/",
          "getterDocumentation" : "/**<p>Write to an S3 bucket.</p>\n@return Write to an S3 bucket.*/",
          "fluentSetterDocumentation" : "/**<p>Write to an S3 bucket.</p>\n@param s3 Write to an S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Write to an S3 bucket.</p>\n@param s3 Write to an S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Sqs" : {
          "documentation" : "<p>Publish to an SQS queue.</p>",
          "name" : "Sqs",
          "c2jName" : "sqs",
          "c2jShape" : "SqsAction",
          "variable" : {
            "variableName" : "sqs",
            "variableType" : "SqsAction",
            "variableDeclarationType" : "SqsAction",
            "documentation" : "<p>Publish to an SQS queue.</p>",
            "simpleType" : "SqsAction",
            "variableSetterType" : "SqsAction"
          },
          "setterModel" : {
            "variableName" : "sqs",
            "variableType" : "SqsAction",
            "variableDeclarationType" : "SqsAction",
            "documentation" : "",
            "simpleType" : "SqsAction",
            "variableSetterType" : "SqsAction"
          },
          "getterModel" : {
            "returnType" : "SqsAction",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "sqs",
            "marshallLocationName" : "sqs",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Publish to an SQS queue.</p>\n@param sqs Publish to an SQS queue.*/",
          "getterDocumentation" : "/**<p>Publish to an SQS queue.</p>\n@return Publish to an SQS queue.*/",
          "fluentSetterDocumentation" : "/**<p>Publish to an SQS queue.</p>\n@param sqs Publish to an SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Publish to an SQS queue.</p>\n@param sqs Publish to an SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Sns" : {
          "documentation" : "<p>Publish to an SNS topic.</p>",
          "name" : "Sns",
          "c2jName" : "sns",
          "c2jShape" : "SnsAction",
          "variable" : {
            "variableName" : "sns",
            "variableType" : "SnsAction",
            "variableDeclarationType" : "SnsAction",
            "documentation" : "<p>Publish to an SNS topic.</p>",
            "simpleType" : "SnsAction",
            "variableSetterType" : "SnsAction"
          },
          "setterModel" : {
            "variableName" : "sns",
            "variableType" : "SnsAction",
            "variableDeclarationType" : "SnsAction",
            "documentation" : "",
            "simpleType" : "SnsAction",
            "variableSetterType" : "SnsAction"
          },
          "getterModel" : {
            "returnType" : "SnsAction",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "sns",
            "marshallLocationName" : "sns",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Publish to an SNS topic.</p>\n@param sns Publish to an SNS topic.*/",
          "getterDocumentation" : "/**<p>Publish to an SNS topic.</p>\n@return Publish to an SNS topic.*/",
          "fluentSetterDocumentation" : "/**<p>Publish to an SNS topic.</p>\n@param sns Publish to an SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Publish to an SNS topic.</p>\n@param sns Publish to an SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Firehose" : {
          "documentation" : "",
          "name" : "Firehose",
          "c2jName" : "firehose",
          "c2jShape" : "FirehoseAction",
          "variable" : {
            "variableName" : "firehose",
            "variableType" : "FirehoseAction",
            "variableDeclarationType" : "FirehoseAction",
            "documentation" : "",
            "simpleType" : "FirehoseAction",
            "variableSetterType" : "FirehoseAction"
          },
          "setterModel" : {
            "variableName" : "firehose",
            "variableType" : "FirehoseAction",
            "variableDeclarationType" : "FirehoseAction",
            "documentation" : "",
            "simpleType" : "FirehoseAction",
            "variableSetterType" : "FirehoseAction"
          },
          "getterModel" : {
            "returnType" : "FirehoseAction",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "firehose",
            "marshallLocationName" : "firehose",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param firehose */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param firehose \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param firehose \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Kinesis" : {
          "documentation" : "<p>Write data to a Kinesis stream.</p>",
          "name" : "Kinesis",
          "c2jName" : "kinesis",
          "c2jShape" : "KinesisAction",
          "variable" : {
            "variableName" : "kinesis",
            "variableType" : "KinesisAction",
            "variableDeclarationType" : "KinesisAction",
            "documentation" : "<p>Write data to a Kinesis stream.</p>",
            "simpleType" : "KinesisAction",
            "variableSetterType" : "KinesisAction"
          },
          "setterModel" : {
            "variableName" : "kinesis",
            "variableType" : "KinesisAction",
            "variableDeclarationType" : "KinesisAction",
            "documentation" : "",
            "simpleType" : "KinesisAction",
            "variableSetterType" : "KinesisAction"
          },
          "getterModel" : {
            "returnType" : "KinesisAction",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "kinesis",
            "marshallLocationName" : "kinesis",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Write data to a Kinesis stream.</p>\n@param kinesis Write data to a Kinesis stream.*/",
          "getterDocumentation" : "/**<p>Write data to a Kinesis stream.</p>\n@return Write data to a Kinesis stream.*/",
          "fluentSetterDocumentation" : "/**<p>Write data to a Kinesis stream.</p>\n@param kinesis Write data to a Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Write data to a Kinesis stream.</p>\n@param kinesis Write data to a Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DynamoDB" : {
          "documentation" : "<p>Write to a DynamoDB table.</p>",
          "name" : "DynamoDB",
          "c2jName" : "dynamoDB",
          "c2jShape" : "DynamoDBAction",
          "variable" : {
            "variableName" : "dynamoDB",
            "variableType" : "DynamoDBAction",
            "variableDeclarationType" : "DynamoDBAction",
            "documentation" : "<p>Write to a DynamoDB table.</p>",
            "simpleType" : "DynamoDBAction",
            "variableSetterType" : "DynamoDBAction"
          },
          "setterModel" : {
            "variableName" : "dynamoDB",
            "variableType" : "DynamoDBAction",
            "variableDeclarationType" : "DynamoDBAction",
            "documentation" : "",
            "simpleType" : "DynamoDBAction",
            "variableSetterType" : "DynamoDBAction"
          },
          "getterModel" : {
            "returnType" : "DynamoDBAction",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "dynamoDB",
            "marshallLocationName" : "dynamoDB",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.*/",
          "getterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@return Write to a DynamoDB table.*/",
          "fluentSetterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Write to a DynamoDB table.</p>\n@param dynamoDB Write to a DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Republish" : {
          "documentation" : "<p>Publish to another MQTT topic.</p>",
          "name" : "Republish",
          "c2jName" : "republish",
          "c2jShape" : "RepublishAction",
          "variable" : {
            "variableName" : "republish",
            "variableType" : "RepublishAction",
            "variableDeclarationType" : "RepublishAction",
            "documentation" : "<p>Publish to another MQTT topic.</p>",
            "simpleType" : "RepublishAction",
            "variableSetterType" : "RepublishAction"
          },
          "setterModel" : {
            "variableName" : "republish",
            "variableType" : "RepublishAction",
            "variableDeclarationType" : "RepublishAction",
            "documentation" : "",
            "simpleType" : "RepublishAction",
            "variableSetterType" : "RepublishAction"
          },
          "getterModel" : {
            "returnType" : "RepublishAction",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "republish",
            "marshallLocationName" : "republish",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.*/",
          "getterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@return Publish to another MQTT topic.*/",
          "fluentSetterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Publish to another MQTT topic.</p>\n@param republish Publish to another MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Lambda" : {
          "documentation" : "<p>Invoke a Lambda function.</p>",
          "name" : "Lambda",
          "c2jName" : "lambda",
          "c2jShape" : "LambdaAction",
          "variable" : {
            "variableName" : "lambda",
            "variableType" : "LambdaAction",
            "variableDeclarationType" : "LambdaAction",
            "documentation" : "<p>Invoke a Lambda function.</p>",
            "simpleType" : "LambdaAction",
            "variableSetterType" : "LambdaAction"
          },
          "setterModel" : {
            "variableName" : "lambda",
            "variableType" : "LambdaAction",
            "variableDeclarationType" : "LambdaAction",
            "documentation" : "",
            "simpleType" : "LambdaAction",
            "variableSetterType" : "LambdaAction"
          },
          "getterModel" : {
            "returnType" : "LambdaAction",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "lambda",
            "marshallLocationName" : "lambda",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.*/",
          "getterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@return Invoke a Lambda function.*/",
          "fluentSetterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Invoke a Lambda function.</p>\n@param lambda Invoke a Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "MalformedPolicyException" : {
      "c2jName" : "MalformedPolicyException",
      "documentation" : "<p>The policy documentation is not valid.</p>",
      "shapeName" : "MalformedPolicyException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "malformedPolicyException",
        "variableType" : "MalformedPolicyException",
        "variableDeclarationType" : "MalformedPolicyException",
        "documentation" : null,
        "simpleType" : "MalformedPolicyException",
        "variableSetterType" : "MalformedPolicyException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "MalformedPolicyException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "SetLoggingOptionsRequest" : {
      "c2jName" : "SetLoggingOptionsRequest",
      "documentation" : "<p>The input for the SetLoggingOptions operation.</p>",
      "shapeName" : "SetLoggingOptionsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : true,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The logging options payload.</p>",
        "name" : "LoggingOptionsPayload",
        "c2jName" : "loggingOptionsPayload",
        "c2jShape" : "LoggingOptionsPayload",
        "variable" : {
          "variableName" : "loggingOptionsPayload",
          "variableType" : "LoggingOptionsPayload",
          "variableDeclarationType" : "LoggingOptionsPayload",
          "documentation" : "<p>The logging options payload.</p>",
          "simpleType" : "LoggingOptionsPayload",
          "variableSetterType" : "LoggingOptionsPayload"
        },
        "setterModel" : {
          "variableName" : "loggingOptionsPayload",
          "variableType" : "LoggingOptionsPayload",
          "variableDeclarationType" : "LoggingOptionsPayload",
          "documentation" : "",
          "simpleType" : "LoggingOptionsPayload",
          "variableSetterType" : "LoggingOptionsPayload"
        },
        "getterModel" : {
          "returnType" : "LoggingOptionsPayload",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "loggingOptionsPayload",
          "marshallLocationName" : "loggingOptionsPayload",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : true,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.*/",
        "getterDocumentation" : "/**<p>The logging options payload.</p>\n@return The logging options payload.*/",
        "fluentSetterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "setLoggingOptionsRequest",
        "variableType" : "SetLoggingOptionsRequest",
        "variableDeclarationType" : "SetLoggingOptionsRequest",
        "documentation" : null,
        "simpleType" : "SetLoggingOptionsRequest",
        "variableSetterType" : "SetLoggingOptionsRequest"
      },
      "marshaller" : {
        "action" : "SetLoggingOptions",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/loggingOptions",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LoggingOptionsPayload" : {
          "documentation" : "<p>The logging options payload.</p>",
          "name" : "LoggingOptionsPayload",
          "c2jName" : "loggingOptionsPayload",
          "c2jShape" : "LoggingOptionsPayload",
          "variable" : {
            "variableName" : "loggingOptionsPayload",
            "variableType" : "LoggingOptionsPayload",
            "variableDeclarationType" : "LoggingOptionsPayload",
            "documentation" : "<p>The logging options payload.</p>",
            "simpleType" : "LoggingOptionsPayload",
            "variableSetterType" : "LoggingOptionsPayload"
          },
          "setterModel" : {
            "variableName" : "loggingOptionsPayload",
            "variableType" : "LoggingOptionsPayload",
            "variableDeclarationType" : "LoggingOptionsPayload",
            "documentation" : "",
            "simpleType" : "LoggingOptionsPayload",
            "variableSetterType" : "LoggingOptionsPayload"
          },
          "getterModel" : {
            "returnType" : "LoggingOptionsPayload",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "loggingOptionsPayload",
            "marshallLocationName" : "loggingOptionsPayload",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : true,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.*/",
          "getterDocumentation" : "/**<p>The logging options payload.</p>\n@return The logging options payload.*/",
          "fluentSetterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The logging options payload.</p>\n@param loggingOptionsPayload The logging options payload.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CancelCertificateTransferRequest" : {
      "c2jName" : "CancelCertificateTransferRequest",
      "documentation" : "<p>The input for the CancelCertificateTransfer operation.</p>",
      "shapeName" : "CancelCertificateTransferRequest",
      "deprecated" : false,
      "required" : [ "certificateId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "cancelCertificateTransferRequest",
        "variableType" : "CancelCertificateTransferRequest",
        "variableDeclarationType" : "CancelCertificateTransferRequest",
        "documentation" : null,
        "simpleType" : "CancelCertificateTransferRequest",
        "variableSetterType" : "CancelCertificateTransferRequest"
      },
      "marshaller" : {
        "action" : "CancelCertificateTransfer",
        "verb" : "PATCH",
        "target" : null,
        "requestUri" : "/cancel-certificate-transfer/{certificateId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "SetDefaultPolicyVersionRequest" : {
      "c2jName" : "SetDefaultPolicyVersionRequest",
      "documentation" : "<p>The input for the SetDefaultPolicyVersion operation.</p>",
      "shapeName" : "SetDefaultPolicyVersionRequest",
      "deprecated" : false,
      "required" : [ "policyName", "policyVersionId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy version ID.</p>",
        "name" : "PolicyVersionId",
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "variable" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyVersionId",
          "marshallLocationName" : "policyVersionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "setDefaultPolicyVersionRequest",
        "variableType" : "SetDefaultPolicyVersionRequest",
        "variableDeclarationType" : "SetDefaultPolicyVersionRequest",
        "documentation" : null,
        "simpleType" : "SetDefaultPolicyVersionRequest",
        "variableSetterType" : "SetDefaultPolicyVersionRequest"
      },
      "marshaller" : {
        "action" : "SetDefaultPolicyVersion",
        "verb" : "PATCH",
        "target" : null,
        "requestUri" : "/policies/{policyName}/version/{policyVersionId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyVersionId" : {
          "documentation" : "<p>The policy version ID.</p>",
          "name" : "PolicyVersionId",
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "variable" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyVersionId",
            "marshallLocationName" : "policyVersionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetLoggingOptionsRequest" : {
      "c2jName" : "GetLoggingOptionsRequest",
      "documentation" : "<p>The input for the GetLoggingOptions operation.</p>",
      "shapeName" : "GetLoggingOptionsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "getLoggingOptionsRequest",
        "variableType" : "GetLoggingOptionsRequest",
        "variableDeclarationType" : "GetLoggingOptionsRequest",
        "documentation" : null,
        "simpleType" : "GetLoggingOptionsRequest",
        "variableSetterType" : "GetLoggingOptionsRequest"
      },
      "marshaller" : {
        "action" : "GetLoggingOptions",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/loggingOptions",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ListThingPrincipalsRequest" : {
      "c2jName" : "ListThingPrincipalsRequest",
      "documentation" : "<p>The input for the ListThingPrincipal operation.</p>",
      "shapeName" : "ListThingPrincipalsRequest",
      "deprecated" : false,
      "required" : [ "thingName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the thing.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listThingPrincipalsRequest",
        "variableType" : "ListThingPrincipalsRequest",
        "variableDeclarationType" : "ListThingPrincipalsRequest",
        "documentation" : null,
        "simpleType" : "ListThingPrincipalsRequest",
        "variableSetterType" : "ListThingPrincipalsRequest"
      },
      "marshaller" : {
        "action" : "ListThingPrincipals",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/things/{thingName}/principals",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ThingName" : {
          "documentation" : "<p>The name of the thing.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteCertificateRequest" : {
      "c2jName" : "DeleteCertificateRequest",
      "documentation" : "<p>The input for the DeleteCertificate operation.</p>",
      "shapeName" : "DeleteCertificateRequest",
      "deprecated" : false,
      "required" : [ "certificateId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteCertificateRequest",
        "variableType" : "DeleteCertificateRequest",
        "variableDeclarationType" : "DeleteCertificateRequest",
        "documentation" : null,
        "simpleType" : "DeleteCertificateRequest",
        "variableSetterType" : "DeleteCertificateRequest"
      },
      "marshaller" : {
        "action" : "DeleteCertificate",
        "verb" : "DELETE",
        "target" : null,
        "requestUri" : "/certificates/{certificateId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "PolicyVersion" : {
      "c2jName" : "PolicyVersion",
      "documentation" : "<p>Describes a policy version.</p>",
      "shapeName" : "PolicyVersion",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy version ID.</p>",
        "name" : "VersionId",
        "c2jName" : "versionId",
        "c2jShape" : "PolicyVersionId",
        "variable" : {
          "variableName" : "versionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "versionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "versionId",
          "marshallLocationName" : "versionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.*/",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the policy version is the default.</p>",
        "name" : "IsDefaultVersion",
        "c2jName" : "isDefaultVersion",
        "c2jShape" : "IsDefaultVersion",
        "variable" : {
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "isDefaultVersion",
          "marshallLocationName" : "isDefaultVersion",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
        "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The date and time the policy was created.</p>",
        "name" : "CreateDate",
        "c2jName" : "createDate",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "createDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The date and time the policy was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "createDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "createDate",
          "marshallLocationName" : "createDate",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.*/",
        "getterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@return The date and time the policy was created.*/",
        "fluentSetterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "policyVersion",
        "variableType" : "PolicyVersion",
        "variableDeclarationType" : "PolicyVersion",
        "documentation" : null,
        "simpleType" : "PolicyVersion",
        "variableSetterType" : "PolicyVersion"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IsDefaultVersion" : {
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "name" : "IsDefaultVersion",
          "c2jName" : "isDefaultVersion",
          "c2jShape" : "IsDefaultVersion",
          "variable" : {
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the policy version is the default.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "isDefaultVersion",
            "marshallLocationName" : "isDefaultVersion",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
          "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VersionId" : {
          "documentation" : "<p>The policy version ID.</p>",
          "name" : "VersionId",
          "c2jName" : "versionId",
          "c2jShape" : "PolicyVersionId",
          "variable" : {
            "variableName" : "versionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "versionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "versionId",
            "marshallLocationName" : "versionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.*/",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param versionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CreateDate" : {
          "documentation" : "<p>The date and time the policy was created.</p>",
          "name" : "CreateDate",
          "c2jName" : "createDate",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "createDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The date and time the policy was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "createDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "createDate",
            "marshallLocationName" : "createDate",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.*/",
          "getterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@return The date and time the policy was created.*/",
          "fluentSetterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The date and time the policy was created.</p>\n@param createDate The date and time the policy was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListCertificatesRequest" : {
      "c2jName" : "ListCertificatesRequest",
      "documentation" : "<p>The input for the ListCertificates operation.</p>",
      "shapeName" : "ListCertificatesRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The result page size.</p>",
        "name" : "PageSize",
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "variable" : {
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "pageSize",
          "marshallLocationName" : "pageSize",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The marker for the next set of results.</p>",
        "name" : "Marker",
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "variable" : {
          "variableName" : "marker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "marker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "marker",
          "marshallLocationName" : "marker",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
        "name" : "AscendingOrder",
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "variable" : {
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "isAscendingOrder",
          "marshallLocationName" : "isAscendingOrder",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
        "getterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@return Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listCertificatesRequest",
        "variableType" : "ListCertificatesRequest",
        "variableDeclarationType" : "ListCertificatesRequest",
        "documentation" : null,
        "simpleType" : "ListCertificatesRequest",
        "variableSetterType" : "ListCertificatesRequest"
      },
      "marshaller" : {
        "action" : "ListCertificates",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/certificates",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PageSize" : {
          "documentation" : "<p>The result page size.</p>",
          "name" : "PageSize",
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "variable" : {
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "pageSize",
            "marshallLocationName" : "pageSize",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AscendingOrder" : {
          "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "name" : "AscendingOrder",
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "variable" : {
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "isAscendingOrder",
            "marshallLocationName" : "isAscendingOrder",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
          "getterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@return Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>\n@param ascendingOrder Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Marker" : {
          "documentation" : "<p>The marker for the next set of results.</p>",
          "name" : "Marker",
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "variable" : {
            "variableName" : "marker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "marker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "marker",
            "marshallLocationName" : "marker",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "documentation" : "<p>The specified resource does not exist.</p>",
      "shapeName" : "ResourceNotFoundException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "variableDeclarationType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "TransferAlreadyCompletedException" : {
      "c2jName" : "TransferAlreadyCompletedException",
      "documentation" : "<p>You can't revert the certificate transfer because it has already completed.</p>",
      "shapeName" : "TransferAlreadyCompletedException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "transferAlreadyCompletedException",
        "variableType" : "TransferAlreadyCompletedException",
        "variableDeclarationType" : "TransferAlreadyCompletedException",
        "documentation" : null,
        "simpleType" : "TransferAlreadyCompletedException",
        "variableSetterType" : "TransferAlreadyCompletedException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "TransferAlreadyCompletedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "TopicRulePayload" : {
      "c2jName" : "TopicRulePayload",
      "documentation" : "<p>Describes a rule.</p>",
      "shapeName" : "TopicRulePayload",
      "deprecated" : false,
      "required" : [ "sql", "actions" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>",
        "name" : "Sql",
        "c2jName" : "sql",
        "c2jShape" : "SQL",
        "variable" : {
          "variableName" : "sql",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sql",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "sql",
          "marshallLocationName" : "sql",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.*/",
        "getterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@return The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.*/",
        "fluentSetterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The description of the rule.</p>",
        "name" : "Description",
        "c2jName" : "description",
        "c2jShape" : "Description",
        "variable" : {
          "variableName" : "description",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The description of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "description",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "description",
          "marshallLocationName" : "description",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.*/",
        "getterDocumentation" : "/**<p>The description of the rule.</p>\n@return The description of the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The actions associated with the rule.</p>",
        "name" : "Actions",
        "c2jName" : "actions",
        "c2jShape" : "ActionList",
        "variable" : {
          "variableName" : "actions",
          "variableType" : "java.util.List<Action>",
          "variableDeclarationType" : "java.util.List<Action>",
          "documentation" : "<p>The actions associated with the rule.</p>",
          "simpleType" : "List<Action>",
          "variableSetterType" : "java.util.Collection<Action>"
        },
        "setterModel" : {
          "variableName" : "actions",
          "variableType" : "java.util.List<Action>",
          "variableDeclarationType" : "java.util.List<Action>",
          "documentation" : "",
          "simpleType" : "List<Action>",
          "variableSetterType" : "java.util.Collection<Action>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Action>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "actions",
          "marshallLocationName" : "actions",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Action",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Action",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Action",
              "variableDeclarationType" : "Action",
              "documentation" : "",
              "simpleType" : "Action",
              "variableSetterType" : "Action"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Action",
              "variableDeclarationType" : "Action",
              "documentation" : "",
              "simpleType" : "Action",
              "variableSetterType" : "Action"
            },
            "getterModel" : {
              "returnType" : "Action",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Action",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Action>",
          "templateImplType" : "java.util.ArrayList<Action>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.*/",
        "getterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@return The actions associated with the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActions(java.util.Collection)} or {@link #withActions(java.util.Collection)} if you want to override the existing values.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the rule is disabled.</p>",
        "name" : "RuleDisabled",
        "c2jName" : "ruleDisabled",
        "c2jShape" : "IsDisabled",
        "variable" : {
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleDisabled",
          "marshallLocationName" : "ruleDisabled",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
        "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "topicRulePayload",
        "variableType" : "TopicRulePayload",
        "variableDeclarationType" : "TopicRulePayload",
        "documentation" : null,
        "simpleType" : "TopicRulePayload",
        "variableSetterType" : "TopicRulePayload"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Description" : {
          "documentation" : "<p>The description of the rule.</p>",
          "name" : "Description",
          "c2jName" : "description",
          "c2jShape" : "Description",
          "variable" : {
            "variableName" : "description",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The description of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "description",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "description",
            "marshallLocationName" : "description",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.*/",
          "getterDocumentation" : "/**<p>The description of the rule.</p>\n@return The description of the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RuleDisabled" : {
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "name" : "RuleDisabled",
          "c2jName" : "ruleDisabled",
          "c2jShape" : "IsDisabled",
          "variable" : {
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the rule is disabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleDisabled",
            "marshallLocationName" : "ruleDisabled",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
          "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Actions" : {
          "documentation" : "<p>The actions associated with the rule.</p>",
          "name" : "Actions",
          "c2jName" : "actions",
          "c2jShape" : "ActionList",
          "variable" : {
            "variableName" : "actions",
            "variableType" : "java.util.List<Action>",
            "variableDeclarationType" : "java.util.List<Action>",
            "documentation" : "<p>The actions associated with the rule.</p>",
            "simpleType" : "List<Action>",
            "variableSetterType" : "java.util.Collection<Action>"
          },
          "setterModel" : {
            "variableName" : "actions",
            "variableType" : "java.util.List<Action>",
            "variableDeclarationType" : "java.util.List<Action>",
            "documentation" : "",
            "simpleType" : "List<Action>",
            "variableSetterType" : "java.util.Collection<Action>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Action>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "actions",
            "marshallLocationName" : "actions",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Action",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Action",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Action",
                "variableDeclarationType" : "Action",
                "documentation" : "",
                "simpleType" : "Action",
                "variableSetterType" : "Action"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Action",
                "variableDeclarationType" : "Action",
                "documentation" : "",
                "simpleType" : "Action",
                "variableSetterType" : "Action"
              },
              "getterModel" : {
                "returnType" : "Action",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Action",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Action>",
            "templateImplType" : "java.util.ArrayList<Action>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.*/",
          "getterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@return The actions associated with the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActions(java.util.Collection)} or {@link #withActions(java.util.Collection)} if you want to override the existing values.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Sql" : {
          "documentation" : "<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>",
          "name" : "Sql",
          "c2jName" : "sql",
          "c2jShape" : "SQL",
          "variable" : {
            "variableName" : "sql",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sql",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "sql",
            "marshallLocationName" : "sql",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.*/",
          "getterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@return The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.*/",
          "fluentSetterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.</p>\n@param sql The SQL statement used to query the topic. For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference\">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetPolicyVersionResult" : {
      "c2jName" : "GetPolicyVersionResponse",
      "documentation" : "<p>The output from the GetPolicyVersion operation.</p>",
      "shapeName" : "GetPolicyVersionResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy ARN.</p>",
        "name" : "PolicyArn",
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "variable" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyArn",
          "marshallLocationName" : "policyArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "name" : "PolicyDocument",
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "variable" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyDocument",
          "marshallLocationName" : "policyDocument",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy version ID.</p>",
        "name" : "PolicyVersionId",
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "variable" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyVersionId",
          "marshallLocationName" : "policyVersionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the policy version is the default.</p>",
        "name" : "IsDefaultVersion",
        "c2jName" : "isDefaultVersion",
        "c2jShape" : "IsDefaultVersion",
        "variable" : {
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "isDefaultVersion",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "isDefaultVersion",
          "marshallLocationName" : "isDefaultVersion",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
        "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getPolicyVersionResult",
        "variableType" : "GetPolicyVersionResult",
        "variableDeclarationType" : "GetPolicyVersionResult",
        "documentation" : null,
        "simpleType" : "GetPolicyVersionResult",
        "variableSetterType" : "GetPolicyVersionResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "IsDefaultVersion" : {
          "documentation" : "<p>Specifies whether the policy version is the default.</p>",
          "name" : "IsDefaultVersion",
          "c2jName" : "isDefaultVersion",
          "c2jShape" : "IsDefaultVersion",
          "variable" : {
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the policy version is the default.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "isDefaultVersion",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "isDefaultVersion",
            "marshallLocationName" : "isDefaultVersion",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.*/",
          "getterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@return Specifies whether the policy version is the default.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is the default.</p>\n@param isDefaultVersion Specifies whether the policy version is the default.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyArn" : {
          "documentation" : "<p>The policy ARN.</p>",
          "name" : "PolicyArn",
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "variable" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyArn",
            "marshallLocationName" : "policyArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyDocument" : {
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "name" : "PolicyDocument",
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "variable" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyDocument",
            "marshallLocationName" : "policyDocument",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyVersionId" : {
          "documentation" : "<p>The policy version ID.</p>",
          "name" : "PolicyVersionId",
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "variable" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyVersionId",
            "marshallLocationName" : "policyVersionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "LambdaAction" : {
      "c2jName" : "LambdaAction",
      "documentation" : "<p>Describes an action to invoke a Lamdba function.</p>",
      "shapeName" : "LambdaAction",
      "deprecated" : false,
      "required" : [ "functionArn" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the Lambda function.</p>",
        "name" : "FunctionArn",
        "c2jName" : "functionArn",
        "c2jShape" : "FunctionArn",
        "variable" : {
          "variableName" : "functionArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the Lambda function.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "functionArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "functionArn",
          "marshallLocationName" : "functionArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.*/",
        "getterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@return The ARN of the Lambda function.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "lambdaAction",
        "variableType" : "LambdaAction",
        "variableDeclarationType" : "LambdaAction",
        "documentation" : null,
        "simpleType" : "LambdaAction",
        "variableSetterType" : "LambdaAction"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "FunctionArn" : {
          "documentation" : "<p>The ARN of the Lambda function.</p>",
          "name" : "FunctionArn",
          "c2jName" : "functionArn",
          "c2jShape" : "FunctionArn",
          "variable" : {
            "variableName" : "functionArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the Lambda function.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "functionArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "functionArn",
            "marshallLocationName" : "functionArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.*/",
          "getterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@return The ARN of the Lambda function.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the Lambda function.</p>\n@param functionArn The ARN of the Lambda function.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetTopicRuleRequest" : {
      "c2jName" : "GetTopicRuleRequest",
      "documentation" : "<p>The input for the GetTopicRule operation.</p>",
      "shapeName" : "GetTopicRuleRequest",
      "deprecated" : false,
      "required" : [ "ruleName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the rule.</p>",
        "name" : "RuleName",
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "variable" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleName",
          "marshallLocationName" : "ruleName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getTopicRuleRequest",
        "variableType" : "GetTopicRuleRequest",
        "variableDeclarationType" : "GetTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "GetTopicRuleRequest",
        "variableSetterType" : "GetTopicRuleRequest"
      },
      "marshaller" : {
        "action" : "GetTopicRule",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/rules/{ruleName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RuleName" : {
          "documentation" : "<p>The name of the rule.</p>",
          "name" : "RuleName",
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "variable" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleName",
            "marshallLocationName" : "ruleName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "UpdateThingResult" : {
      "c2jName" : "UpdateThingResponse",
      "documentation" : "<p>The output from the UpdateThing operation.</p>",
      "shapeName" : "UpdateThingResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "updateThingResult",
        "variableType" : "UpdateThingResult",
        "variableDeclarationType" : "UpdateThingResult",
        "documentation" : null,
        "simpleType" : "UpdateThingResult",
        "variableSetterType" : "UpdateThingResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DeletePolicyVersionRequest" : {
      "c2jName" : "DeletePolicyVersionRequest",
      "documentation" : "<p>The input for the DeletePolicyVersion operation.</p>",
      "shapeName" : "DeletePolicyVersionRequest",
      "deprecated" : false,
      "required" : [ "policyName", "policyVersionId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the policy.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
        "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy version ID.</p>",
        "name" : "PolicyVersionId",
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "variable" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyVersionId",
          "marshallLocationName" : "policyVersionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deletePolicyVersionRequest",
        "variableType" : "DeletePolicyVersionRequest",
        "variableDeclarationType" : "DeletePolicyVersionRequest",
        "documentation" : null,
        "simpleType" : "DeletePolicyVersionRequest",
        "variableSetterType" : "DeletePolicyVersionRequest"
      },
      "marshaller" : {
        "action" : "DeletePolicyVersion",
        "verb" : "DELETE",
        "target" : null,
        "requestUri" : "/policies/{policyName}/version/{policyVersionId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyName" : {
          "documentation" : "<p>The name of the policy.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
          "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyVersionId" : {
          "documentation" : "<p>The policy version ID.</p>",
          "name" : "PolicyVersionId",
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "variable" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyVersionId",
            "marshallLocationName" : "policyVersionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CertificateStateException" : {
      "c2jName" : "CertificateStateException",
      "documentation" : "<p>The certificate operation is not allowed.</p>",
      "shapeName" : "CertificateStateException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "certificateStateException",
        "variableType" : "CertificateStateException",
        "variableDeclarationType" : "CertificateStateException",
        "documentation" : null,
        "simpleType" : "CertificateStateException",
        "variableSetterType" : "CertificateStateException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "CertificateStateException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "AttributePayload" : {
      "c2jName" : "AttributePayload",
      "documentation" : "<p>The attribute payload, a JSON string containing up to three key-value pairs.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
      "shapeName" : "AttributePayload",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
        "name" : "Attributes",
        "c2jName" : "attributes",
        "c2jShape" : "Attributes",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "attributes",
          "marshallLocationName" : "attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributes A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
        "getterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@return A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
        "fluentSetterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributes A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributes A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "attributePayload",
        "variableType" : "AttributePayload",
        "variableDeclarationType" : "AttributePayload",
        "documentation" : null,
        "simpleType" : "AttributePayload",
        "variableSetterType" : "AttributePayload"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Attributes" : {
          "documentation" : "<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
          "name" : "Attributes",
          "c2jName" : "attributes",
          "c2jShape" : "Attributes",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "attributes",
            "marshallLocationName" : "attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributes A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
          "getterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@return A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
          "fluentSetterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributes A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributes A JSON string containing up to three key-value pair in JSON format.</p> <p>For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "SqsAction" : {
      "c2jName" : "SqsAction",
      "documentation" : "<p>Describes an action to publish data to an SQS queue.</p>",
      "shapeName" : "SqsAction",
      "deprecated" : false,
      "required" : [ "roleArn", "queueUrl" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The URL of the Amazon SQS queue.</p>",
        "name" : "QueueUrl",
        "c2jName" : "queueUrl",
        "c2jShape" : "QueueUrl",
        "variable" : {
          "variableName" : "queueUrl",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The URL of the Amazon SQS queue.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "queueUrl",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "queueUrl",
          "marshallLocationName" : "queueUrl",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.*/",
        "getterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@return The URL of the Amazon SQS queue.*/",
        "fluentSetterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether to use Base64 encoding.</p>",
        "name" : "UseBase64",
        "c2jName" : "useBase64",
        "c2jShape" : "UseBase64",
        "variable" : {
          "variableName" : "useBase64",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether to use Base64 encoding.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "useBase64",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "useBase64",
          "marshallLocationName" : "useBase64",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.*/",
        "getterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@return Specifies whether to use Base64 encoding.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "sqsAction",
        "variableType" : "SqsAction",
        "variableDeclarationType" : "SqsAction",
        "documentation" : null,
        "simpleType" : "SqsAction",
        "variableSetterType" : "SqsAction"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "UseBase64" : {
          "documentation" : "<p>Specifies whether to use Base64 encoding.</p>",
          "name" : "UseBase64",
          "c2jName" : "useBase64",
          "c2jShape" : "UseBase64",
          "variable" : {
            "variableName" : "useBase64",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether to use Base64 encoding.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "useBase64",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "useBase64",
            "marshallLocationName" : "useBase64",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.*/",
          "getterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@return Specifies whether to use Base64 encoding.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether to use Base64 encoding.</p>\n@param useBase64 Specifies whether to use Base64 encoding.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "QueueUrl" : {
          "documentation" : "<p>The URL of the Amazon SQS queue.</p>",
          "name" : "QueueUrl",
          "c2jName" : "queueUrl",
          "c2jShape" : "QueueUrl",
          "variable" : {
            "variableName" : "queueUrl",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The URL of the Amazon SQS queue.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "queueUrl",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "queueUrl",
            "marshallLocationName" : "queueUrl",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.*/",
          "getterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@return The URL of the Amazon SQS queue.*/",
          "fluentSetterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The URL of the Amazon SQS queue.</p>\n@param queueUrl The URL of the Amazon SQS queue.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RoleArn" : {
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteTopicRuleRequest" : {
      "c2jName" : "DeleteTopicRuleRequest",
      "documentation" : "<p>The input for the DeleteTopicRule operation.</p>",
      "shapeName" : "DeleteTopicRuleRequest",
      "deprecated" : false,
      "required" : [ "ruleName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the rule.</p>",
        "name" : "RuleName",
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "variable" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleName",
          "marshallLocationName" : "ruleName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteTopicRuleRequest",
        "variableType" : "DeleteTopicRuleRequest",
        "variableDeclarationType" : "DeleteTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "DeleteTopicRuleRequest",
        "variableSetterType" : "DeleteTopicRuleRequest"
      },
      "marshaller" : {
        "action" : "DeleteTopicRule",
        "verb" : "DELETE",
        "target" : null,
        "requestUri" : "/rules/{ruleName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "RuleName" : {
          "documentation" : "<p>The name of the rule.</p>",
          "name" : "RuleName",
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "variable" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleName",
            "marshallLocationName" : "ruleName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ServiceUnavailableException" : {
      "c2jName" : "ServiceUnavailableException",
      "documentation" : "<p>The service is temporarily unavailable.</p>",
      "shapeName" : "ServiceUnavailableException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "serviceUnavailableException",
        "variableType" : "ServiceUnavailableException",
        "variableDeclarationType" : "ServiceUnavailableException",
        "documentation" : null,
        "simpleType" : "ServiceUnavailableException",
        "variableSetterType" : "ServiceUnavailableException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ServiceUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ListPoliciesRequest" : {
      "c2jName" : "ListPoliciesRequest",
      "documentation" : "<p>The input for the ListPolicies operation.</p>",
      "shapeName" : "ListPoliciesRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The marker for the next set of results.</p>",
        "name" : "Marker",
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "variable" : {
          "variableName" : "marker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "marker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "marker",
          "marshallLocationName" : "marker",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The result page size.</p>",
        "name" : "PageSize",
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "variable" : {
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "pageSize",
          "marshallLocationName" : "pageSize",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
        "name" : "AscendingOrder",
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "variable" : {
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "isAscendingOrder",
          "marshallLocationName" : "isAscendingOrder",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.*/",
        "getterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, the results are returned in ascending creation order.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listPoliciesRequest",
        "variableType" : "ListPoliciesRequest",
        "variableDeclarationType" : "ListPoliciesRequest",
        "documentation" : null,
        "simpleType" : "ListPoliciesRequest",
        "variableSetterType" : "ListPoliciesRequest"
      },
      "marshaller" : {
        "action" : "ListPolicies",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/policies",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PageSize" : {
          "documentation" : "<p>The result page size.</p>",
          "name" : "PageSize",
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "variable" : {
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "pageSize",
            "marshallLocationName" : "pageSize",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AscendingOrder" : {
          "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
          "name" : "AscendingOrder",
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "variable" : {
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "isAscendingOrder",
            "marshallLocationName" : "isAscendingOrder",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.*/",
          "getterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, the results are returned in ascending creation order.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, the results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Marker" : {
          "documentation" : "<p>The marker for the next set of results.</p>",
          "name" : "Marker",
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "variable" : {
            "variableName" : "marker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "marker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "marker",
            "marshallLocationName" : "marker",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AttachThingPrincipalResult" : {
      "c2jName" : "AttachThingPrincipalResponse",
      "documentation" : "<p>The output from the AttachThingPrincipal operation.</p>",
      "shapeName" : "AttachThingPrincipalResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "attachThingPrincipalResult",
        "variableType" : "AttachThingPrincipalResult",
        "variableDeclarationType" : "AttachThingPrincipalResult",
        "documentation" : null,
        "simpleType" : "AttachThingPrincipalResult",
        "variableSetterType" : "AttachThingPrincipalResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ListPrincipalThingsRequest" : {
      "c2jName" : "ListPrincipalThingsRequest",
      "documentation" : "<p>The input for the ListPrincipalThings operation.</p>",
      "shapeName" : "ListPrincipalThingsRequest",
      "deprecated" : false,
      "required" : [ "principal" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param nextToken */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "MaxResults",
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "variable" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "maxResults",
          "marshallLocationName" : "maxResults",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param maxResults */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param maxResults \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param maxResults \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The principal.</p>",
        "name" : "Principal",
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "variable" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The principal.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "x-amzn-principal",
          "marshallLocationName" : "x-amzn-principal",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "flattened" : false,
          "header" : true,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
        "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
        "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listPrincipalThingsRequest",
        "variableType" : "ListPrincipalThingsRequest",
        "variableDeclarationType" : "ListPrincipalThingsRequest",
        "documentation" : null,
        "simpleType" : "ListPrincipalThingsRequest",
        "variableSetterType" : "ListPrincipalThingsRequest"
      },
      "marshaller" : {
        "action" : "ListPrincipalThings",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/principals/things",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param nextToken */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param nextToken \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Principal" : {
          "documentation" : "<p>The principal.</p>",
          "name" : "Principal",
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "variable" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The principal.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "x-amzn-principal",
            "marshallLocationName" : "x-amzn-principal",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "flattened" : false,
            "header" : true,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
          "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
          "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "MaxResults" : {
          "documentation" : "",
          "name" : "MaxResults",
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "variable" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "maxResults",
            "marshallLocationName" : "maxResults",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param maxResults */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param maxResults \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param maxResults \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "SnsAction" : {
      "c2jName" : "SnsAction",
      "documentation" : "<p>Describes an action to publish to an Amazon SNS topic.</p>",
      "shapeName" : "SnsAction",
      "deprecated" : false,
      "required" : [ "targetArn", "roleArn" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the SNS topic.</p>",
        "name" : "TargetArn",
        "c2jName" : "targetArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "targetArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the SNS topic.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "targetArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "targetArn",
          "marshallLocationName" : "targetArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.*/",
        "getterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@return The ARN of the SNS topic.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "snsAction",
        "variableType" : "SnsAction",
        "variableDeclarationType" : "SnsAction",
        "documentation" : null,
        "simpleType" : "SnsAction",
        "variableSetterType" : "SnsAction"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "TargetArn" : {
          "documentation" : "<p>The ARN of the SNS topic.</p>",
          "name" : "TargetArn",
          "c2jName" : "targetArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "targetArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the SNS topic.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "targetArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "targetArn",
            "marshallLocationName" : "targetArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.*/",
          "getterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@return The ARN of the SNS topic.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the SNS topic.</p>\n@param targetArn The ARN of the SNS topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RoleArn" : {
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreatePolicyResult" : {
      "c2jName" : "CreatePolicyResponse",
      "documentation" : "<p>The output from the CreatePolicy operation.</p>",
      "shapeName" : "CreatePolicyResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy ARN.</p>",
        "name" : "PolicyArn",
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "variable" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyArn",
          "marshallLocationName" : "policyArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "name" : "PolicyDocument",
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "variable" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyDocument",
          "marshallLocationName" : "policyDocument",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy version ID.</p>",
        "name" : "PolicyVersionId",
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "variable" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyVersionId",
          "marshallLocationName" : "policyVersionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createPolicyResult",
        "variableType" : "CreatePolicyResult",
        "variableDeclarationType" : "CreatePolicyResult",
        "documentation" : null,
        "simpleType" : "CreatePolicyResult",
        "variableSetterType" : "CreatePolicyResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyArn" : {
          "documentation" : "<p>The policy ARN.</p>",
          "name" : "PolicyArn",
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "variable" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyArn",
            "marshallLocationName" : "policyArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyDocument" : {
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "name" : "PolicyDocument",
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "variable" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyDocument",
            "marshallLocationName" : "policyDocument",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyVersionId" : {
          "documentation" : "<p>The policy version ID.</p>",
          "name" : "PolicyVersionId",
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "variable" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyVersionId",
            "marshallLocationName" : "policyVersionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "RepublishAction" : {
      "c2jName" : "RepublishAction",
      "documentation" : "<p>Describes an action to republish to another topic.</p>",
      "shapeName" : "RepublishAction",
      "deprecated" : false,
      "required" : [ "roleArn", "topic" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The name of the MQTT topic.</p>",
        "name" : "Topic",
        "c2jName" : "topic",
        "c2jShape" : "TopicPattern",
        "variable" : {
          "variableName" : "topic",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the MQTT topic.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "topic",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "topic",
          "marshallLocationName" : "topic",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.*/",
        "getterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@return The name of the MQTT topic.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "republishAction",
        "variableType" : "RepublishAction",
        "variableDeclarationType" : "RepublishAction",
        "documentation" : null,
        "simpleType" : "RepublishAction",
        "variableSetterType" : "RepublishAction"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Topic" : {
          "documentation" : "<p>The name of the MQTT topic.</p>",
          "name" : "Topic",
          "c2jName" : "topic",
          "c2jShape" : "TopicPattern",
          "variable" : {
            "variableName" : "topic",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the MQTT topic.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "topic",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "topic",
            "marshallLocationName" : "topic",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.*/",
          "getterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@return The name of the MQTT topic.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the MQTT topic.</p>\n@param topic The name of the MQTT topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RoleArn" : {
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "LogLevel" : {
      "c2jName" : "LogLevel",
      "documentation" : "",
      "shapeName" : "LogLevel",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "DEBUG",
        "value" : "DEBUG"
      }, {
        "name" : "INFO",
        "value" : "INFO"
      }, {
        "name" : "ERROR",
        "value" : "ERROR"
      }, {
        "name" : "WARN",
        "value" : "WARN"
      }, {
        "name" : "DISABLED",
        "value" : "DISABLED"
      } ],
      "variable" : {
        "variableName" : "logLevel",
        "variableType" : "LogLevel",
        "variableDeclarationType" : "LogLevel",
        "documentation" : null,
        "simpleType" : "LogLevel",
        "variableSetterType" : "LogLevel"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "GetPolicyVersionRequest" : {
      "c2jName" : "GetPolicyVersionRequest",
      "documentation" : "<p>The input for the GetPolicyVersion operation.</p>",
      "shapeName" : "GetPolicyVersionRequest",
      "deprecated" : false,
      "required" : [ "policyName", "policyVersionId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the policy.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
        "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy version ID.</p>",
        "name" : "PolicyVersionId",
        "c2jName" : "policyVersionId",
        "c2jShape" : "PolicyVersionId",
        "variable" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyVersionId",
          "marshallLocationName" : "policyVersionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
        "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
        "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getPolicyVersionRequest",
        "variableType" : "GetPolicyVersionRequest",
        "variableDeclarationType" : "GetPolicyVersionRequest",
        "documentation" : null,
        "simpleType" : "GetPolicyVersionRequest",
        "variableSetterType" : "GetPolicyVersionRequest"
      },
      "marshaller" : {
        "action" : "GetPolicyVersion",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/policies/{policyName}/version/{policyVersionId}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyName" : {
          "documentation" : "<p>The name of the policy.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.*/",
          "getterDocumentation" : "/**<p>The name of the policy.</p>\n@return The name of the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the policy.</p>\n@param policyName The name of the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyVersionId" : {
          "documentation" : "<p>The policy version ID.</p>",
          "name" : "PolicyVersionId",
          "c2jName" : "policyVersionId",
          "c2jShape" : "PolicyVersionId",
          "variable" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyVersionId",
            "marshallLocationName" : "policyVersionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.*/",
          "getterDocumentation" : "/**<p>The policy version ID.</p>\n@return The policy version ID.*/",
          "fluentSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy version ID.</p>\n@param policyVersionId The policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeThingResult" : {
      "c2jName" : "DescribeThingResponse",
      "documentation" : "<p>The output from the DescribeThing operation.</p>",
      "shapeName" : "DescribeThingResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The default client ID.</p>",
        "name" : "DefaultClientId",
        "c2jName" : "defaultClientId",
        "c2jShape" : "ClientId",
        "variable" : {
          "variableName" : "defaultClientId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The default client ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "defaultClientId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "defaultClientId",
          "marshallLocationName" : "defaultClientId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.*/",
        "getterDocumentation" : "/**<p>The default client ID.</p>\n@return The default client ID.*/",
        "fluentSetterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The name of the thing.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>",
        "name" : "Attributes",
        "c2jName" : "attributes",
        "c2jShape" : "Attributes",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "attributes",
          "marshallLocationName" : "attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>\n@param attributes The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}*/",
        "getterDocumentation" : "/**<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>\n@return The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}*/",
        "fluentSetterDocumentation" : "/**<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>\n@param attributes The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>\n@param attributes The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeThingResult",
        "variableType" : "DescribeThingResult",
        "variableDeclarationType" : "DescribeThingResult",
        "documentation" : null,
        "simpleType" : "DescribeThingResult",
        "variableSetterType" : "DescribeThingResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Attributes" : {
          "documentation" : "<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>",
          "name" : "Attributes",
          "c2jName" : "attributes",
          "c2jShape" : "Attributes",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "attributes",
            "marshallLocationName" : "attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>\n@param attributes The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}*/",
          "getterDocumentation" : "/**<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>\n@return The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}*/",
          "fluentSetterDocumentation" : "/**<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>\n@param attributes The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}</p>\n@param attributes The attributes which are name/value pairs in JSON format. For example: </p> <p>{\\\"attributes\\\":{\\\"some-name1\\\":\\\"some-value1\\”}, {\\\"some-name2\\\":\\\"some-value2\\”}, {\\\"some-name3\\\":\\\"some-value3\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ThingName" : {
          "documentation" : "<p>The name of the thing.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "DefaultClientId" : {
          "documentation" : "<p>The default client ID.</p>",
          "name" : "DefaultClientId",
          "c2jName" : "defaultClientId",
          "c2jShape" : "ClientId",
          "variable" : {
            "variableName" : "defaultClientId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The default client ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "defaultClientId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "defaultClientId",
            "marshallLocationName" : "defaultClientId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.*/",
          "getterDocumentation" : "/**<p>The default client ID.</p>\n@return The default client ID.*/",
          "fluentSetterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The default client ID.</p>\n@param defaultClientId The default client ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ReplaceTopicRuleRequest" : {
      "c2jName" : "ReplaceTopicRuleRequest",
      "documentation" : "<p>The input for the ReplaceTopicRule operation.</p>",
      "shapeName" : "ReplaceTopicRuleRequest",
      "deprecated" : false,
      "required" : [ "ruleName", "topicRulePayload" ],
      "hasPayloadMember" : true,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the rule.</p>",
        "name" : "RuleName",
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "variable" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleName",
          "marshallLocationName" : "ruleName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The rule payload.</p>",
        "name" : "TopicRulePayload",
        "c2jName" : "topicRulePayload",
        "c2jShape" : "TopicRulePayload",
        "variable" : {
          "variableName" : "topicRulePayload",
          "variableType" : "TopicRulePayload",
          "variableDeclarationType" : "TopicRulePayload",
          "documentation" : "<p>The rule payload.</p>",
          "simpleType" : "TopicRulePayload",
          "variableSetterType" : "TopicRulePayload"
        },
        "setterModel" : {
          "variableName" : "topicRulePayload",
          "variableType" : "TopicRulePayload",
          "variableDeclarationType" : "TopicRulePayload",
          "documentation" : "",
          "simpleType" : "TopicRulePayload",
          "variableSetterType" : "TopicRulePayload"
        },
        "getterModel" : {
          "returnType" : "TopicRulePayload",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "topicRulePayload",
          "marshallLocationName" : "topicRulePayload",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : true,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.*/",
        "getterDocumentation" : "/**<p>The rule payload.</p>\n@return The rule payload.*/",
        "fluentSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "replaceTopicRuleRequest",
        "variableType" : "ReplaceTopicRuleRequest",
        "variableDeclarationType" : "ReplaceTopicRuleRequest",
        "documentation" : null,
        "simpleType" : "ReplaceTopicRuleRequest",
        "variableSetterType" : "ReplaceTopicRuleRequest"
      },
      "marshaller" : {
        "action" : "ReplaceTopicRule",
        "verb" : "PATCH",
        "target" : null,
        "requestUri" : "/rules/{ruleName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "TopicRulePayload" : {
          "documentation" : "<p>The rule payload.</p>",
          "name" : "TopicRulePayload",
          "c2jName" : "topicRulePayload",
          "c2jShape" : "TopicRulePayload",
          "variable" : {
            "variableName" : "topicRulePayload",
            "variableType" : "TopicRulePayload",
            "variableDeclarationType" : "TopicRulePayload",
            "documentation" : "<p>The rule payload.</p>",
            "simpleType" : "TopicRulePayload",
            "variableSetterType" : "TopicRulePayload"
          },
          "setterModel" : {
            "variableName" : "topicRulePayload",
            "variableType" : "TopicRulePayload",
            "variableDeclarationType" : "TopicRulePayload",
            "documentation" : "",
            "simpleType" : "TopicRulePayload",
            "variableSetterType" : "TopicRulePayload"
          },
          "getterModel" : {
            "returnType" : "TopicRulePayload",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "topicRulePayload",
            "marshallLocationName" : "topicRulePayload",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : true,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.*/",
          "getterDocumentation" : "/**<p>The rule payload.</p>\n@return The rule payload.*/",
          "fluentSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The rule payload.</p>\n@param topicRulePayload The rule payload.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RuleName" : {
          "documentation" : "<p>The name of the rule.</p>",
          "name" : "RuleName",
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "variable" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleName",
            "marshallLocationName" : "ruleName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateThingRequest" : {
      "c2jName" : "CreateThingRequest",
      "documentation" : "<p>The input for the CreateThing operation.</p>",
      "shapeName" : "CreateThingRequest",
      "deprecated" : false,
      "required" : [ "thingName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the thing.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
        "name" : "AttributePayload",
        "c2jName" : "attributePayload",
        "c2jShape" : "AttributePayload",
        "variable" : {
          "variableName" : "attributePayload",
          "variableType" : "AttributePayload",
          "variableDeclarationType" : "AttributePayload",
          "documentation" : "<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
          "simpleType" : "AttributePayload",
          "variableSetterType" : "AttributePayload"
        },
        "setterModel" : {
          "variableName" : "attributePayload",
          "variableType" : "AttributePayload",
          "variableDeclarationType" : "AttributePayload",
          "documentation" : "",
          "simpleType" : "AttributePayload",
          "variableSetterType" : "AttributePayload"
        },
        "getterModel" : {
          "returnType" : "AttributePayload",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "attributePayload",
          "marshallLocationName" : "attributePayload",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
        "getterDocumentation" : "/**<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@return The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
        "fluentSetterDocumentation" : "/**<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createThingRequest",
        "variableType" : "CreateThingRequest",
        "variableDeclarationType" : "CreateThingRequest",
        "documentation" : null,
        "simpleType" : "CreateThingRequest",
        "variableSetterType" : "CreateThingRequest"
      },
      "marshaller" : {
        "action" : "CreateThing",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/things/{thingName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "AttributePayload" : {
          "documentation" : "<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
          "name" : "AttributePayload",
          "c2jName" : "attributePayload",
          "c2jShape" : "AttributePayload",
          "variable" : {
            "variableName" : "attributePayload",
            "variableType" : "AttributePayload",
            "variableDeclarationType" : "AttributePayload",
            "documentation" : "<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>",
            "simpleType" : "AttributePayload",
            "variableSetterType" : "AttributePayload"
          },
          "setterModel" : {
            "variableName" : "attributePayload",
            "variableType" : "AttributePayload",
            "variableDeclarationType" : "AttributePayload",
            "documentation" : "",
            "simpleType" : "AttributePayload",
            "variableSetterType" : "AttributePayload"
          },
          "getterModel" : {
            "returnType" : "AttributePayload",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "attributePayload",
            "marshallLocationName" : "attributePayload",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
          "getterDocumentation" : "/**<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@return The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}*/",
          "fluentSetterDocumentation" : "/**<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}</p>\n@param attributePayload The attribute payload. Which consists of up to 3 name/value pairs in a JSON document. For example: {\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\”}}\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ThingName" : {
          "documentation" : "<p>The name of the thing.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListThingsRequest" : {
      "c2jName" : "ListThingsRequest",
      "documentation" : "<p>The input for the ListThings operation.</p>",
      "shapeName" : "ListThingsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The token for the next value.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The token for the next value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The token for the next value.</p>\n@param nextToken The token for the next value.*/",
        "getterDocumentation" : "/**<p>The token for the next value.</p>\n@return The token for the next value.*/",
        "fluentSetterDocumentation" : "/**<p>The token for the next value.</p>\n@param nextToken The token for the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The token for the next value.</p>\n@param nextToken The token for the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The maximum number of results.</p>",
        "name" : "MaxResults",
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "variable" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "maxResults",
          "marshallLocationName" : "maxResults",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of results.</p>\n@param maxResults The maximum number of results.*/",
        "getterDocumentation" : "/**<p>The maximum number of results.</p>\n@return The maximum number of results.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of results.</p>\n@param maxResults The maximum number of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of results.</p>\n@param maxResults The maximum number of results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The attribute name.</p>",
        "name" : "AttributeName",
        "c2jName" : "attributeName",
        "c2jShape" : "AttributeName",
        "variable" : {
          "variableName" : "attributeName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The attribute name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "attributeName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "attributeName",
          "marshallLocationName" : "attributeName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The attribute name.</p>\n@param attributeName The attribute name.*/",
        "getterDocumentation" : "/**<p>The attribute name.</p>\n@return The attribute name.*/",
        "fluentSetterDocumentation" : "/**<p>The attribute name.</p>\n@param attributeName The attribute name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The attribute name.</p>\n@param attributeName The attribute name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The attribute value.</p>",
        "name" : "AttributeValue",
        "c2jName" : "attributeValue",
        "c2jShape" : "AttributeValue",
        "variable" : {
          "variableName" : "attributeValue",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The attribute value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "attributeValue",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "attributeValue",
          "marshallLocationName" : "attributeValue",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The attribute value.</p>\n@param attributeValue The attribute value.*/",
        "getterDocumentation" : "/**<p>The attribute value.</p>\n@return The attribute value.*/",
        "fluentSetterDocumentation" : "/**<p>The attribute value.</p>\n@param attributeValue The attribute value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The attribute value.</p>\n@param attributeValue The attribute value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listThingsRequest",
        "variableType" : "ListThingsRequest",
        "variableDeclarationType" : "ListThingsRequest",
        "documentation" : null,
        "simpleType" : "ListThingsRequest",
        "variableSetterType" : "ListThingsRequest"
      },
      "marshaller" : {
        "action" : "ListThings",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/things",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "<p>The token for the next value.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The token for the next value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The token for the next value.</p>\n@param nextToken The token for the next value.*/",
          "getterDocumentation" : "/**<p>The token for the next value.</p>\n@return The token for the next value.*/",
          "fluentSetterDocumentation" : "/**<p>The token for the next value.</p>\n@param nextToken The token for the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The token for the next value.</p>\n@param nextToken The token for the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AttributeName" : {
          "documentation" : "<p>The attribute name.</p>",
          "name" : "AttributeName",
          "c2jName" : "attributeName",
          "c2jShape" : "AttributeName",
          "variable" : {
            "variableName" : "attributeName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The attribute name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "attributeName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "attributeName",
            "marshallLocationName" : "attributeName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The attribute name.</p>\n@param attributeName The attribute name.*/",
          "getterDocumentation" : "/**<p>The attribute name.</p>\n@return The attribute name.*/",
          "fluentSetterDocumentation" : "/**<p>The attribute name.</p>\n@param attributeName The attribute name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The attribute name.</p>\n@param attributeName The attribute name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "MaxResults" : {
          "documentation" : "<p>The maximum number of results.</p>",
          "name" : "MaxResults",
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "variable" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "maxResults",
            "marshallLocationName" : "maxResults",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of results.</p>\n@param maxResults The maximum number of results.*/",
          "getterDocumentation" : "/**<p>The maximum number of results.</p>\n@return The maximum number of results.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of results.</p>\n@param maxResults The maximum number of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of results.</p>\n@param maxResults The maximum number of results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AttributeValue" : {
          "documentation" : "<p>The attribute value.</p>",
          "name" : "AttributeValue",
          "c2jName" : "attributeValue",
          "c2jShape" : "AttributeValue",
          "variable" : {
            "variableName" : "attributeValue",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The attribute value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "attributeValue",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "attributeValue",
            "marshallLocationName" : "attributeValue",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The attribute value.</p>\n@param attributeValue The attribute value.*/",
          "getterDocumentation" : "/**<p>The attribute value.</p>\n@return The attribute value.*/",
          "fluentSetterDocumentation" : "/**<p>The attribute value.</p>\n@param attributeValue The attribute value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The attribute value.</p>\n@param attributeValue The attribute value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListPolicyVersionsRequest" : {
      "c2jName" : "ListPolicyVersionsRequest",
      "documentation" : "<p>The input for the ListPolicyVersions operation.</p>",
      "shapeName" : "ListPolicyVersionsRequest",
      "deprecated" : false,
      "required" : [ "policyName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listPolicyVersionsRequest",
        "variableType" : "ListPolicyVersionsRequest",
        "variableDeclarationType" : "ListPolicyVersionsRequest",
        "documentation" : null,
        "simpleType" : "ListPolicyVersionsRequest",
        "variableSetterType" : "ListPolicyVersionsRequest"
      },
      "marshaller" : {
        "action" : "ListPolicyVersions",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/policies/{policyName}/version",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetPolicyResult" : {
      "c2jName" : "GetPolicyResponse",
      "documentation" : "<p>The output from the GetPolicy operation.</p>",
      "shapeName" : "GetPolicyResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The policy ARN.</p>",
        "name" : "PolicyArn",
        "c2jName" : "policyArn",
        "c2jShape" : "PolicyArn",
        "variable" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyArn",
          "marshallLocationName" : "policyArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
        "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
        "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "name" : "PolicyDocument",
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "variable" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyDocument",
          "marshallLocationName" : "policyDocument",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The default policy version ID.</p>",
        "name" : "DefaultVersionId",
        "c2jName" : "defaultVersionId",
        "c2jShape" : "PolicyVersionId",
        "variable" : {
          "variableName" : "defaultVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The default policy version ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "defaultVersionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "defaultVersionId",
          "marshallLocationName" : "defaultVersionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.*/",
        "getterDocumentation" : "/**<p>The default policy version ID.</p>\n@return The default policy version ID.*/",
        "fluentSetterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getPolicyResult",
        "variableType" : "GetPolicyResult",
        "variableDeclarationType" : "GetPolicyResult",
        "documentation" : null,
        "simpleType" : "GetPolicyResult",
        "variableSetterType" : "GetPolicyResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DefaultVersionId" : {
          "documentation" : "<p>The default policy version ID.</p>",
          "name" : "DefaultVersionId",
          "c2jName" : "defaultVersionId",
          "c2jShape" : "PolicyVersionId",
          "variable" : {
            "variableName" : "defaultVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The default policy version ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "defaultVersionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "defaultVersionId",
            "marshallLocationName" : "defaultVersionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.*/",
          "getterDocumentation" : "/**<p>The default policy version ID.</p>\n@return The default policy version ID.*/",
          "fluentSetterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The default policy version ID.</p>\n@param defaultVersionId The default policy version ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyArn" : {
          "documentation" : "<p>The policy ARN.</p>",
          "name" : "PolicyArn",
          "c2jName" : "policyArn",
          "c2jShape" : "PolicyArn",
          "variable" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyArn",
            "marshallLocationName" : "policyArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.*/",
          "getterDocumentation" : "/**<p>The policy ARN.</p>\n@return The policy ARN.*/",
          "fluentSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy ARN.</p>\n@param policyArn The policy ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyDocument" : {
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "name" : "PolicyDocument",
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "variable" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyDocument",
            "marshallLocationName" : "policyDocument",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteThingResult" : {
      "c2jName" : "DeleteThingResponse",
      "documentation" : "<p>The output of the DeleteThing operation.</p>",
      "shapeName" : "DeleteThingResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "deleteThingResult",
        "variableType" : "DeleteThingResult",
        "variableDeclarationType" : "DeleteThingResult",
        "documentation" : null,
        "simpleType" : "DeleteThingResult",
        "variableSetterType" : "DeleteThingResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ListThingsResult" : {
      "c2jName" : "ListThingsResponse",
      "documentation" : "<p>The output from the ListThings operation.</p>",
      "shapeName" : "ListThingsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The things.</p>",
        "name" : "Things",
        "c2jName" : "things",
        "c2jShape" : "ThingAttributeList",
        "variable" : {
          "variableName" : "things",
          "variableType" : "java.util.List<ThingAttribute>",
          "variableDeclarationType" : "java.util.List<ThingAttribute>",
          "documentation" : "<p>The things.</p>",
          "simpleType" : "List<ThingAttribute>",
          "variableSetterType" : "java.util.Collection<ThingAttribute>"
        },
        "setterModel" : {
          "variableName" : "things",
          "variableType" : "java.util.List<ThingAttribute>",
          "variableDeclarationType" : "java.util.List<ThingAttribute>",
          "documentation" : "",
          "simpleType" : "List<ThingAttribute>",
          "variableSetterType" : "java.util.Collection<ThingAttribute>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<ThingAttribute>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "things",
          "marshallLocationName" : "things",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "ThingAttribute",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "ThingAttribute",
            "variable" : {
              "variableName" : "member",
              "variableType" : "ThingAttribute",
              "variableDeclarationType" : "ThingAttribute",
              "documentation" : "",
              "simpleType" : "ThingAttribute",
              "variableSetterType" : "ThingAttribute"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "ThingAttribute",
              "variableDeclarationType" : "ThingAttribute",
              "documentation" : "",
              "simpleType" : "ThingAttribute",
              "variableSetterType" : "ThingAttribute"
            },
            "getterModel" : {
              "returnType" : "ThingAttribute",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "ThingAttribute",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<ThingAttribute>",
          "templateImplType" : "java.util.ArrayList<ThingAttribute>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The things.</p>\n@param things The things.*/",
        "getterDocumentation" : "/**<p>The things.</p>\n@return The things.*/",
        "fluentSetterDocumentation" : "/**<p>The things.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The things.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThings(java.util.Collection)} or {@link #withThings(java.util.Collection)} if you want to override the existing values.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A token used to retrieve the next value.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
        "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
        "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listThingsResult",
        "variableType" : "ListThingsResult",
        "variableDeclarationType" : "ListThingsResult",
        "documentation" : null,
        "simpleType" : "ListThingsResult",
        "variableSetterType" : "ListThingsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Things" : {
          "documentation" : "<p>The things.</p>",
          "name" : "Things",
          "c2jName" : "things",
          "c2jShape" : "ThingAttributeList",
          "variable" : {
            "variableName" : "things",
            "variableType" : "java.util.List<ThingAttribute>",
            "variableDeclarationType" : "java.util.List<ThingAttribute>",
            "documentation" : "<p>The things.</p>",
            "simpleType" : "List<ThingAttribute>",
            "variableSetterType" : "java.util.Collection<ThingAttribute>"
          },
          "setterModel" : {
            "variableName" : "things",
            "variableType" : "java.util.List<ThingAttribute>",
            "variableDeclarationType" : "java.util.List<ThingAttribute>",
            "documentation" : "",
            "simpleType" : "List<ThingAttribute>",
            "variableSetterType" : "java.util.Collection<ThingAttribute>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<ThingAttribute>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "things",
            "marshallLocationName" : "things",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "ThingAttribute",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "ThingAttribute",
              "variable" : {
                "variableName" : "member",
                "variableType" : "ThingAttribute",
                "variableDeclarationType" : "ThingAttribute",
                "documentation" : "",
                "simpleType" : "ThingAttribute",
                "variableSetterType" : "ThingAttribute"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "ThingAttribute",
                "variableDeclarationType" : "ThingAttribute",
                "documentation" : "",
                "simpleType" : "ThingAttribute",
                "variableSetterType" : "ThingAttribute"
              },
              "getterModel" : {
                "returnType" : "ThingAttribute",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "ThingAttribute",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<ThingAttribute>",
            "templateImplType" : "java.util.ArrayList<ThingAttribute>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The things.</p>\n@param things The things.*/",
          "getterDocumentation" : "/**<p>The things.</p>\n@return The things.*/",
          "fluentSetterDocumentation" : "/**<p>The things.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The things.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setThings(java.util.Collection)} or {@link #withThings(java.util.Collection)} if you want to override the existing values.</p>\n@param things The things.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NextToken" : {
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A token used to retrieve the next value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
          "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
          "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreatePolicyRequest" : {
      "c2jName" : "CreatePolicyRequest",
      "documentation" : "<p>The input for the CreatePolicy operation.</p>",
      "shapeName" : "CreatePolicyRequest",
      "deprecated" : false,
      "required" : [ "policyName", "policyDocument" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
        "name" : "PolicyDocument",
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "variable" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyDocument",
          "marshallLocationName" : "policyDocument",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.*/",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@return The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createPolicyRequest",
        "variableType" : "CreatePolicyRequest",
        "variableDeclarationType" : "CreatePolicyRequest",
        "documentation" : null,
        "simpleType" : "CreatePolicyRequest",
        "variableSetterType" : "CreatePolicyRequest"
      },
      "marshaller" : {
        "action" : "CreatePolicy",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/policies/{policyName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyDocument" : {
          "documentation" : "<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
          "name" : "PolicyDocument",
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "variable" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyDocument",
            "marshallLocationName" : "policyDocument",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.*/",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@return The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>\n@param policyDocument The JSON document that describes the policy. The length of the <b>policyDocument</b> must be a minimum length of 1, with a maximum length of 2048, excluding whitespace.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteThingRequest" : {
      "c2jName" : "DeleteThingRequest",
      "documentation" : "<p>The input for the DeleteThing operation.</p>",
      "shapeName" : "DeleteThingRequest",
      "deprecated" : false,
      "required" : [ "thingName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The thing name.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The thing name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.*/",
        "getterDocumentation" : "/**<p>The thing name.</p>\n@return The thing name.*/",
        "fluentSetterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteThingRequest",
        "variableType" : "DeleteThingRequest",
        "variableDeclarationType" : "DeleteThingRequest",
        "documentation" : null,
        "simpleType" : "DeleteThingRequest",
        "variableSetterType" : "DeleteThingRequest"
      },
      "marshaller" : {
        "action" : "DeleteThing",
        "verb" : "DELETE",
        "target" : null,
        "requestUri" : "/things/{thingName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ThingName" : {
          "documentation" : "<p>The thing name.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The thing name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.*/",
          "getterDocumentation" : "/**<p>The thing name.</p>\n@return The thing name.*/",
          "fluentSetterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The thing name.</p>\n@param thingName The thing name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListPoliciesResult" : {
      "c2jName" : "ListPoliciesResponse",
      "documentation" : "<p>The output from the ListPolicies operation.</p>",
      "shapeName" : "ListPoliciesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The descriptions of the policies.</p>",
        "name" : "Policies",
        "c2jName" : "policies",
        "c2jShape" : "Policies",
        "variable" : {
          "variableName" : "policies",
          "variableType" : "java.util.List<Policy>",
          "variableDeclarationType" : "java.util.List<Policy>",
          "documentation" : "<p>The descriptions of the policies.</p>",
          "simpleType" : "List<Policy>",
          "variableSetterType" : "java.util.Collection<Policy>"
        },
        "setterModel" : {
          "variableName" : "policies",
          "variableType" : "java.util.List<Policy>",
          "variableDeclarationType" : "java.util.List<Policy>",
          "documentation" : "",
          "simpleType" : "List<Policy>",
          "variableSetterType" : "java.util.Collection<Policy>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Policy>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policies",
          "marshallLocationName" : "policies",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Policy",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Policy",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Policy",
              "variableDeclarationType" : "Policy",
              "documentation" : "",
              "simpleType" : "Policy",
              "variableSetterType" : "Policy"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Policy",
              "variableDeclarationType" : "Policy",
              "documentation" : "",
              "simpleType" : "Policy",
              "variableSetterType" : "Policy"
            },
            "getterModel" : {
              "returnType" : "Policy",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Policy",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Policy>",
          "templateImplType" : "java.util.ArrayList<Policy>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@param policies The descriptions of the policies.*/",
        "getterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@return The descriptions of the policies.*/",
        "fluentSetterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@param policies The descriptions of the policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The descriptions of the policies.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicies(java.util.Collection)} or {@link #withPolicies(java.util.Collection)} if you want to override the existing values.</p>\n@param policies The descriptions of the policies.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
        "name" : "NextMarker",
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "variable" : {
          "variableName" : "nextMarker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextMarker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextMarker",
          "marshallLocationName" : "nextMarker",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
        "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listPoliciesResult",
        "variableType" : "ListPoliciesResult",
        "variableDeclarationType" : "ListPoliciesResult",
        "documentation" : null,
        "simpleType" : "ListPoliciesResult",
        "variableSetterType" : "ListPoliciesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Policies" : {
          "documentation" : "<p>The descriptions of the policies.</p>",
          "name" : "Policies",
          "c2jName" : "policies",
          "c2jShape" : "Policies",
          "variable" : {
            "variableName" : "policies",
            "variableType" : "java.util.List<Policy>",
            "variableDeclarationType" : "java.util.List<Policy>",
            "documentation" : "<p>The descriptions of the policies.</p>",
            "simpleType" : "List<Policy>",
            "variableSetterType" : "java.util.Collection<Policy>"
          },
          "setterModel" : {
            "variableName" : "policies",
            "variableType" : "java.util.List<Policy>",
            "variableDeclarationType" : "java.util.List<Policy>",
            "documentation" : "",
            "simpleType" : "List<Policy>",
            "variableSetterType" : "java.util.Collection<Policy>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Policy>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policies",
            "marshallLocationName" : "policies",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Policy",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Policy",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Policy",
                "variableDeclarationType" : "Policy",
                "documentation" : "",
                "simpleType" : "Policy",
                "variableSetterType" : "Policy"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Policy",
                "variableDeclarationType" : "Policy",
                "documentation" : "",
                "simpleType" : "Policy",
                "variableSetterType" : "Policy"
              },
              "getterModel" : {
                "returnType" : "Policy",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Policy",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Policy>",
            "templateImplType" : "java.util.ArrayList<Policy>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@param policies The descriptions of the policies.*/",
          "getterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@return The descriptions of the policies.*/",
          "fluentSetterDocumentation" : "/**<p>The descriptions of the policies.</p>\n@param policies The descriptions of the policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The descriptions of the policies.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicies(java.util.Collection)} or {@link #withPolicies(java.util.Collection)} if you want to override the existing values.</p>\n@param policies The descriptions of the policies.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NextMarker" : {
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "name" : "NextMarker",
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "variable" : {
            "variableName" : "nextMarker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextMarker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextMarker",
            "marshallLocationName" : "nextMarker",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
          "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListPrincipalPoliciesResult" : {
      "c2jName" : "ListPrincipalPoliciesResponse",
      "documentation" : "<p>The output from the ListPrincipalPolicies operation.</p>",
      "shapeName" : "ListPrincipalPoliciesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policies.</p>",
        "name" : "Policies",
        "c2jName" : "policies",
        "c2jShape" : "Policies",
        "variable" : {
          "variableName" : "policies",
          "variableType" : "java.util.List<Policy>",
          "variableDeclarationType" : "java.util.List<Policy>",
          "documentation" : "<p>The policies.</p>",
          "simpleType" : "List<Policy>",
          "variableSetterType" : "java.util.Collection<Policy>"
        },
        "setterModel" : {
          "variableName" : "policies",
          "variableType" : "java.util.List<Policy>",
          "variableDeclarationType" : "java.util.List<Policy>",
          "documentation" : "",
          "simpleType" : "List<Policy>",
          "variableSetterType" : "java.util.Collection<Policy>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Policy>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policies",
          "marshallLocationName" : "policies",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Policy",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Policy",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Policy",
              "variableDeclarationType" : "Policy",
              "documentation" : "",
              "simpleType" : "Policy",
              "variableSetterType" : "Policy"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Policy",
              "variableDeclarationType" : "Policy",
              "documentation" : "",
              "simpleType" : "Policy",
              "variableSetterType" : "Policy"
            },
            "getterModel" : {
              "returnType" : "Policy",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Policy",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Policy>",
          "templateImplType" : "java.util.ArrayList<Policy>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The policies.</p>\n@param policies The policies.*/",
        "getterDocumentation" : "/**<p>The policies.</p>\n@return The policies.*/",
        "fluentSetterDocumentation" : "/**<p>The policies.</p>\n@param policies The policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policies.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicies(java.util.Collection)} or {@link #withPolicies(java.util.Collection)} if you want to override the existing values.</p>\n@param policies The policies.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
        "name" : "NextMarker",
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "variable" : {
          "variableName" : "nextMarker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextMarker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextMarker",
          "marshallLocationName" : "nextMarker",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
        "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listPrincipalPoliciesResult",
        "variableType" : "ListPrincipalPoliciesResult",
        "variableDeclarationType" : "ListPrincipalPoliciesResult",
        "documentation" : null,
        "simpleType" : "ListPrincipalPoliciesResult",
        "variableSetterType" : "ListPrincipalPoliciesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Policies" : {
          "documentation" : "<p>The policies.</p>",
          "name" : "Policies",
          "c2jName" : "policies",
          "c2jShape" : "Policies",
          "variable" : {
            "variableName" : "policies",
            "variableType" : "java.util.List<Policy>",
            "variableDeclarationType" : "java.util.List<Policy>",
            "documentation" : "<p>The policies.</p>",
            "simpleType" : "List<Policy>",
            "variableSetterType" : "java.util.Collection<Policy>"
          },
          "setterModel" : {
            "variableName" : "policies",
            "variableType" : "java.util.List<Policy>",
            "variableDeclarationType" : "java.util.List<Policy>",
            "documentation" : "",
            "simpleType" : "List<Policy>",
            "variableSetterType" : "java.util.Collection<Policy>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Policy>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policies",
            "marshallLocationName" : "policies",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Policy",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Policy",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Policy",
                "variableDeclarationType" : "Policy",
                "documentation" : "",
                "simpleType" : "Policy",
                "variableSetterType" : "Policy"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Policy",
                "variableDeclarationType" : "Policy",
                "documentation" : "",
                "simpleType" : "Policy",
                "variableSetterType" : "Policy"
              },
              "getterModel" : {
                "returnType" : "Policy",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Policy",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Policy>",
            "templateImplType" : "java.util.ArrayList<Policy>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The policies.</p>\n@param policies The policies.*/",
          "getterDocumentation" : "/**<p>The policies.</p>\n@return The policies.*/",
          "fluentSetterDocumentation" : "/**<p>The policies.</p>\n@param policies The policies.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policies.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setPolicies(java.util.Collection)} or {@link #withPolicies(java.util.Collection)} if you want to override the existing values.</p>\n@param policies The policies.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NextMarker" : {
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "name" : "NextMarker",
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "variable" : {
            "variableName" : "nextMarker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextMarker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextMarker",
            "marshallLocationName" : "nextMarker",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
          "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeCertificateResult" : {
      "c2jName" : "DescribeCertificateResponse",
      "documentation" : "<p>The output of the DescribeCertificate operation.</p>",
      "shapeName" : "DescribeCertificateResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The description of the certificate.</p>",
        "name" : "CertificateDescription",
        "c2jName" : "certificateDescription",
        "c2jShape" : "CertificateDescription",
        "variable" : {
          "variableName" : "certificateDescription",
          "variableType" : "CertificateDescription",
          "variableDeclarationType" : "CertificateDescription",
          "documentation" : "<p>The description of the certificate.</p>",
          "simpleType" : "CertificateDescription",
          "variableSetterType" : "CertificateDescription"
        },
        "setterModel" : {
          "variableName" : "certificateDescription",
          "variableType" : "CertificateDescription",
          "variableDeclarationType" : "CertificateDescription",
          "documentation" : "",
          "simpleType" : "CertificateDescription",
          "variableSetterType" : "CertificateDescription"
        },
        "getterModel" : {
          "returnType" : "CertificateDescription",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateDescription",
          "marshallLocationName" : "certificateDescription",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.*/",
        "getterDocumentation" : "/**<p>The description of the certificate.</p>\n@return The description of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeCertificateResult",
        "variableType" : "DescribeCertificateResult",
        "variableDeclarationType" : "DescribeCertificateResult",
        "documentation" : null,
        "simpleType" : "DescribeCertificateResult",
        "variableSetterType" : "DescribeCertificateResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateDescription" : {
          "documentation" : "<p>The description of the certificate.</p>",
          "name" : "CertificateDescription",
          "c2jName" : "certificateDescription",
          "c2jShape" : "CertificateDescription",
          "variable" : {
            "variableName" : "certificateDescription",
            "variableType" : "CertificateDescription",
            "variableDeclarationType" : "CertificateDescription",
            "documentation" : "<p>The description of the certificate.</p>",
            "simpleType" : "CertificateDescription",
            "variableSetterType" : "CertificateDescription"
          },
          "setterModel" : {
            "variableName" : "certificateDescription",
            "variableType" : "CertificateDescription",
            "variableDeclarationType" : "CertificateDescription",
            "documentation" : "",
            "simpleType" : "CertificateDescription",
            "variableSetterType" : "CertificateDescription"
          },
          "getterModel" : {
            "returnType" : "CertificateDescription",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateDescription",
            "marshallLocationName" : "certificateDescription",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.*/",
          "getterDocumentation" : "/**<p>The description of the certificate.</p>\n@return The description of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The description of the certificate.</p>\n@param certificateDescription The description of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListPrincipalPoliciesRequest" : {
      "c2jName" : "ListPrincipalPoliciesRequest",
      "documentation" : "<p>The input for the ListPrincipalPolicies operation.</p>",
      "shapeName" : "ListPrincipalPoliciesRequest",
      "deprecated" : false,
      "required" : [ "principal" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The principal.</p>",
        "name" : "Principal",
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "variable" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The principal.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "x-amzn-iot-principal",
          "marshallLocationName" : "x-amzn-iot-principal",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "flattened" : false,
          "header" : true,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
        "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
        "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The marker for the next set of results.</p>",
        "name" : "Marker",
        "c2jName" : "marker",
        "c2jShape" : "Marker",
        "variable" : {
          "variableName" : "marker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The marker for the next set of results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "marker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "marker",
          "marshallLocationName" : "marker",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
        "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The result page size.</p>",
        "name" : "PageSize",
        "c2jName" : "pageSize",
        "c2jShape" : "PageSize",
        "variable" : {
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The result page size.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "pageSize",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "pageSize",
          "marshallLocationName" : "pageSize",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
        "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
        "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
        "name" : "AscendingOrder",
        "c2jName" : "ascendingOrder",
        "c2jShape" : "AscendingOrder",
        "variable" : {
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "ascendingOrder",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "isAscendingOrder",
          "marshallLocationName" : "isAscendingOrder",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.*/",
        "getterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, results are returned in ascending creation order.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listPrincipalPoliciesRequest",
        "variableType" : "ListPrincipalPoliciesRequest",
        "variableDeclarationType" : "ListPrincipalPoliciesRequest",
        "documentation" : null,
        "simpleType" : "ListPrincipalPoliciesRequest",
        "variableSetterType" : "ListPrincipalPoliciesRequest"
      },
      "marshaller" : {
        "action" : "ListPrincipalPolicies",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/principal-policies",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Principal" : {
          "documentation" : "<p>The principal.</p>",
          "name" : "Principal",
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "variable" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The principal.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "x-amzn-iot-principal",
            "marshallLocationName" : "x-amzn-iot-principal",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "flattened" : false,
            "header" : true,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.*/",
          "getterDocumentation" : "/**<p>The principal.</p>\n@return The principal.*/",
          "fluentSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The principal.</p>\n@param principal The principal.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PageSize" : {
          "documentation" : "<p>The result page size.</p>",
          "name" : "PageSize",
          "c2jName" : "pageSize",
          "c2jShape" : "PageSize",
          "variable" : {
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The result page size.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "pageSize",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "pageSize",
            "marshallLocationName" : "pageSize",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.*/",
          "getterDocumentation" : "/**<p>The result page size.</p>\n@return The result page size.*/",
          "fluentSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The result page size.</p>\n@param pageSize The result page size.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AscendingOrder" : {
          "documentation" : "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
          "name" : "AscendingOrder",
          "c2jName" : "ascendingOrder",
          "c2jShape" : "AscendingOrder",
          "variable" : {
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "ascendingOrder",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "isAscendingOrder",
            "marshallLocationName" : "isAscendingOrder",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.*/",
          "getterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@return Specifies the order for results. If true, results are returned in ascending creation order.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>\n@param ascendingOrder Specifies the order for results. If true, results are returned in ascending creation order.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Marker" : {
          "documentation" : "<p>The marker for the next set of results.</p>",
          "name" : "Marker",
          "c2jName" : "marker",
          "c2jShape" : "Marker",
          "variable" : {
            "variableName" : "marker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The marker for the next set of results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "marker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "marker",
            "marshallLocationName" : "marker",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.*/",
          "getterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@return The marker for the next set of results.*/",
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results.</p>\n@param marker The marker for the next set of results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ThingAttribute" : {
      "c2jName" : "ThingAttribute",
      "documentation" : "<p>Describes a thing attribute.</p>",
      "shapeName" : "ThingAttribute",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the thing.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The attributes.</p>",
        "name" : "Attributes",
        "c2jName" : "attributes",
        "c2jShape" : "Attributes",
        "variable" : {
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "<p>The attributes.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "setterModel" : {
          "variableName" : "attributes",
          "variableType" : "java.util.Map<String,String>",
          "variableDeclarationType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "attributes",
          "marshallLocationName" : "attributes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "String",
          "valueLocationName" : "value",
          "valueModel" : null,
          "keySimple" : true,
          "valueSimple" : true,
          "valueList" : false,
          "templateType" : "java.util.Map<String,String>",
          "templateImplType" : "java.util.HashMap<String,String>"
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>The attributes.</p>\n@param attributes The attributes.*/",
        "getterDocumentation" : "/**<p>The attributes.</p>\n@return The attributes.*/",
        "fluentSetterDocumentation" : "/**<p>The attributes.</p>\n@param attributes The attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The attributes.</p>\n@param attributes The attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "thingAttribute",
        "variableType" : "ThingAttribute",
        "variableDeclarationType" : "ThingAttribute",
        "documentation" : null,
        "simpleType" : "ThingAttribute",
        "variableSetterType" : "ThingAttribute"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Attributes" : {
          "documentation" : "<p>The attributes.</p>",
          "name" : "Attributes",
          "c2jName" : "attributes",
          "c2jShape" : "Attributes",
          "variable" : {
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "<p>The attributes.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "setterModel" : {
            "variableName" : "attributes",
            "variableType" : "java.util.Map<String,String>",
            "variableDeclarationType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "attributes",
            "marshallLocationName" : "attributes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "String",
            "valueLocationName" : "value",
            "valueModel" : null,
            "keySimple" : true,
            "valueSimple" : true,
            "valueList" : false,
            "templateType" : "java.util.Map<String,String>",
            "templateImplType" : "java.util.HashMap<String,String>"
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>The attributes.</p>\n@param attributes The attributes.*/",
          "getterDocumentation" : "/**<p>The attributes.</p>\n@return The attributes.*/",
          "fluentSetterDocumentation" : "/**<p>The attributes.</p>\n@param attributes The attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The attributes.</p>\n@param attributes The attributes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ThingName" : {
          "documentation" : "<p>The name of the thing.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CertificateStatus" : {
      "c2jName" : "CertificateStatus",
      "documentation" : "",
      "shapeName" : "CertificateStatus",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "ACTIVE",
        "value" : "ACTIVE"
      }, {
        "name" : "INACTIVE",
        "value" : "INACTIVE"
      }, {
        "name" : "REVOKED",
        "value" : "REVOKED"
      }, {
        "name" : "PENDING_TRANSFER",
        "value" : "PENDING_TRANSFER"
      } ],
      "variable" : {
        "variableName" : "certificateStatus",
        "variableType" : "CertificateStatus",
        "variableDeclarationType" : "CertificateStatus",
        "documentation" : null,
        "simpleType" : "CertificateStatus",
        "variableSetterType" : "CertificateStatus"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "TopicRuleListItem" : {
      "c2jName" : "TopicRuleListItem",
      "documentation" : "<p>Describes a rule.</p>",
      "shapeName" : "TopicRuleListItem",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the rule.</p>",
        "name" : "RuleName",
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "variable" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleName",
          "marshallLocationName" : "ruleName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The pattern for the topic names that apply.</p>",
        "name" : "TopicPattern",
        "c2jName" : "topicPattern",
        "c2jShape" : "TopicPattern",
        "variable" : {
          "variableName" : "topicPattern",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The pattern for the topic names that apply.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "topicPattern",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "topicPattern",
          "marshallLocationName" : "topicPattern",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.*/",
        "getterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@return The pattern for the topic names that apply.*/",
        "fluentSetterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The date and time the rule was created.</p>",
        "name" : "CreatedAt",
        "c2jName" : "createdAt",
        "c2jShape" : "CreatedAtDate",
        "variable" : {
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The date and time the rule was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "createdAt",
          "marshallLocationName" : "createdAt",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.*/",
        "getterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@return The date and time the rule was created.*/",
        "fluentSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the rule is disabled.</p>",
        "name" : "RuleDisabled",
        "c2jName" : "ruleDisabled",
        "c2jShape" : "IsDisabled",
        "variable" : {
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleDisabled",
          "marshallLocationName" : "ruleDisabled",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
        "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "topicRuleListItem",
        "variableType" : "TopicRuleListItem",
        "variableDeclarationType" : "TopicRuleListItem",
        "documentation" : null,
        "simpleType" : "TopicRuleListItem",
        "variableSetterType" : "TopicRuleListItem"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "TopicPattern" : {
          "documentation" : "<p>The pattern for the topic names that apply.</p>",
          "name" : "TopicPattern",
          "c2jName" : "topicPattern",
          "c2jShape" : "TopicPattern",
          "variable" : {
            "variableName" : "topicPattern",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The pattern for the topic names that apply.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "topicPattern",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "topicPattern",
            "marshallLocationName" : "topicPattern",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.*/",
          "getterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@return The pattern for the topic names that apply.*/",
          "fluentSetterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The pattern for the topic names that apply.</p>\n@param topicPattern The pattern for the topic names that apply.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RuleDisabled" : {
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "name" : "RuleDisabled",
          "c2jName" : "ruleDisabled",
          "c2jShape" : "IsDisabled",
          "variable" : {
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the rule is disabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleDisabled",
            "marshallLocationName" : "ruleDisabled",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
          "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RuleName" : {
          "documentation" : "<p>The name of the rule.</p>",
          "name" : "RuleName",
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "variable" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleName",
            "marshallLocationName" : "ruleName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CreatedAt" : {
          "documentation" : "<p>The date and time the rule was created.</p>",
          "name" : "CreatedAt",
          "c2jName" : "createdAt",
          "c2jShape" : "CreatedAtDate",
          "variable" : {
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The date and time the rule was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "createdAt",
            "marshallLocationName" : "createdAt",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.*/",
          "getterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@return The date and time the rule was created.*/",
          "fluentSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "KinesisAction" : {
      "c2jName" : "KinesisAction",
      "documentation" : "<p>Describes an action to write data to an Amazon Kinesis stream.</p>",
      "shapeName" : "KinesisAction",
      "deprecated" : false,
      "required" : [ "roleArn", "streamName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The name of the Kinesis stream.</p>",
        "name" : "StreamName",
        "c2jName" : "streamName",
        "c2jShape" : "StreamName",
        "variable" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the Kinesis stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "streamName",
          "marshallLocationName" : "streamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the Kinesis stream.</p>\n@param streamName The name of the Kinesis stream.*/",
        "getterDocumentation" : "/**<p>The name of the Kinesis stream.</p>\n@return The name of the Kinesis stream.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the Kinesis stream.</p>\n@param streamName The name of the Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the Kinesis stream.</p>\n@param streamName The name of the Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The partition key.</p>",
        "name" : "PartitionKey",
        "c2jName" : "partitionKey",
        "c2jShape" : "PartitionKey",
        "variable" : {
          "variableName" : "partitionKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The partition key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "partitionKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "partitionKey",
          "marshallLocationName" : "partitionKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.*/",
        "getterDocumentation" : "/**<p>The partition key.</p>\n@return The partition key.*/",
        "fluentSetterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "kinesisAction",
        "variableType" : "KinesisAction",
        "variableDeclarationType" : "KinesisAction",
        "documentation" : null,
        "simpleType" : "KinesisAction",
        "variableSetterType" : "KinesisAction"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StreamName" : {
          "documentation" : "<p>The name of the Kinesis stream.</p>",
          "name" : "StreamName",
          "c2jName" : "streamName",
          "c2jShape" : "StreamName",
          "variable" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the Kinesis stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "streamName",
            "marshallLocationName" : "streamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the Kinesis stream.</p>\n@param streamName The name of the Kinesis stream.*/",
          "getterDocumentation" : "/**<p>The name of the Kinesis stream.</p>\n@return The name of the Kinesis stream.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the Kinesis stream.</p>\n@param streamName The name of the Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the Kinesis stream.</p>\n@param streamName The name of the Kinesis stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PartitionKey" : {
          "documentation" : "<p>The partition key.</p>",
          "name" : "PartitionKey",
          "c2jName" : "partitionKey",
          "c2jShape" : "PartitionKey",
          "variable" : {
            "variableName" : "partitionKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The partition key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "partitionKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "partitionKey",
            "marshallLocationName" : "partitionKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.*/",
          "getterDocumentation" : "/**<p>The partition key.</p>\n@return The partition key.*/",
          "fluentSetterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The partition key.</p>\n@param partitionKey The partition key.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RoleArn" : {
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListCertificatesResult" : {
      "c2jName" : "ListCertificatesResponse",
      "documentation" : "<p>The output of the ListCertificates operation.</p>",
      "shapeName" : "ListCertificatesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The descriptions of the certificates.</p>",
        "name" : "Certificates",
        "c2jName" : "certificates",
        "c2jShape" : "Certificates",
        "variable" : {
          "variableName" : "certificates",
          "variableType" : "java.util.List<Certificate>",
          "variableDeclarationType" : "java.util.List<Certificate>",
          "documentation" : "<p>The descriptions of the certificates.</p>",
          "simpleType" : "List<Certificate>",
          "variableSetterType" : "java.util.Collection<Certificate>"
        },
        "setterModel" : {
          "variableName" : "certificates",
          "variableType" : "java.util.List<Certificate>",
          "variableDeclarationType" : "java.util.List<Certificate>",
          "documentation" : "",
          "simpleType" : "List<Certificate>",
          "variableSetterType" : "java.util.Collection<Certificate>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Certificate>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificates",
          "marshallLocationName" : "certificates",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Certificate",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Certificate",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Certificate",
              "variableDeclarationType" : "Certificate",
              "documentation" : "",
              "simpleType" : "Certificate",
              "variableSetterType" : "Certificate"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Certificate",
              "variableDeclarationType" : "Certificate",
              "documentation" : "",
              "simpleType" : "Certificate",
              "variableSetterType" : "Certificate"
            },
            "getterModel" : {
              "returnType" : "Certificate",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Certificate",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Certificate>",
          "templateImplType" : "java.util.ArrayList<Certificate>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@param certificates The descriptions of the certificates.*/",
        "getterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@return The descriptions of the certificates.*/",
        "fluentSetterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@param certificates The descriptions of the certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCertificates(java.util.Collection)} or {@link #withCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param certificates The descriptions of the certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
        "name" : "NextMarker",
        "c2jName" : "nextMarker",
        "c2jShape" : "Marker",
        "variable" : {
          "variableName" : "nextMarker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextMarker",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextMarker",
          "marshallLocationName" : "nextMarker",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
        "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
        "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listCertificatesResult",
        "variableType" : "ListCertificatesResult",
        "variableDeclarationType" : "ListCertificatesResult",
        "documentation" : null,
        "simpleType" : "ListCertificatesResult",
        "variableSetterType" : "ListCertificatesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Certificates" : {
          "documentation" : "<p>The descriptions of the certificates.</p>",
          "name" : "Certificates",
          "c2jName" : "certificates",
          "c2jShape" : "Certificates",
          "variable" : {
            "variableName" : "certificates",
            "variableType" : "java.util.List<Certificate>",
            "variableDeclarationType" : "java.util.List<Certificate>",
            "documentation" : "<p>The descriptions of the certificates.</p>",
            "simpleType" : "List<Certificate>",
            "variableSetterType" : "java.util.Collection<Certificate>"
          },
          "setterModel" : {
            "variableName" : "certificates",
            "variableType" : "java.util.List<Certificate>",
            "variableDeclarationType" : "java.util.List<Certificate>",
            "documentation" : "",
            "simpleType" : "List<Certificate>",
            "variableSetterType" : "java.util.Collection<Certificate>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Certificate>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificates",
            "marshallLocationName" : "certificates",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Certificate",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Certificate",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Certificate",
                "variableDeclarationType" : "Certificate",
                "documentation" : "",
                "simpleType" : "Certificate",
                "variableSetterType" : "Certificate"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Certificate",
                "variableDeclarationType" : "Certificate",
                "documentation" : "",
                "simpleType" : "Certificate",
                "variableSetterType" : "Certificate"
              },
              "getterModel" : {
                "returnType" : "Certificate",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Certificate",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Certificate>",
            "templateImplType" : "java.util.ArrayList<Certificate>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@param certificates The descriptions of the certificates.*/",
          "getterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@return The descriptions of the certificates.*/",
          "fluentSetterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n@param certificates The descriptions of the certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The descriptions of the certificates.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCertificates(java.util.Collection)} or {@link #withCertificates(java.util.Collection)} if you want to override the existing values.</p>\n@param certificates The descriptions of the certificates.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NextMarker" : {
          "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "name" : "NextMarker",
          "c2jName" : "nextMarker",
          "c2jShape" : "Marker",
          "variable" : {
            "variableName" : "nextMarker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The marker for the next set of results, or null if there are no additional results.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextMarker",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextMarker",
            "marshallLocationName" : "nextMarker",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.*/",
          "getterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@return The marker for the next set of results, or null if there are no additional results.*/",
          "fluentSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The marker for the next set of results, or null if there are no additional results.</p>\n@param nextMarker The marker for the next set of results, or null if there are no additional results.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "VersionsLimitExceededException" : {
      "c2jName" : "VersionsLimitExceededException",
      "documentation" : "<p>The number of policy versions exceeds the limit.</p>",
      "shapeName" : "VersionsLimitExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "versionsLimitExceededException",
        "variableType" : "VersionsLimitExceededException",
        "variableDeclarationType" : "VersionsLimitExceededException",
        "documentation" : null,
        "simpleType" : "VersionsLimitExceededException",
        "variableSetterType" : "VersionsLimitExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "VersionsLimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "TransferCertificateResult" : {
      "c2jName" : "TransferCertificateResponse",
      "documentation" : "<p>The output from the TransferCertificate operation.</p>",
      "shapeName" : "TransferCertificateResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the certificate.</p>",
        "name" : "TransferredCertificateArn",
        "c2jName" : "transferredCertificateArn",
        "c2jShape" : "CertificateArn",
        "variable" : {
          "variableName" : "transferredCertificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "transferredCertificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "transferredCertificateArn",
          "marshallLocationName" : "transferredCertificateArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.*/",
        "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "transferCertificateResult",
        "variableType" : "TransferCertificateResult",
        "variableDeclarationType" : "TransferCertificateResult",
        "documentation" : null,
        "simpleType" : "TransferCertificateResult",
        "variableSetterType" : "TransferCertificateResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "TransferredCertificateArn" : {
          "documentation" : "<p>The ARN of the certificate.</p>",
          "name" : "TransferredCertificateArn",
          "c2jName" : "transferredCertificateArn",
          "c2jShape" : "CertificateArn",
          "variable" : {
            "variableName" : "transferredCertificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "transferredCertificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "transferredCertificateArn",
            "marshallLocationName" : "transferredCertificateArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.*/",
          "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param transferredCertificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteConflictException" : {
      "c2jName" : "DeleteConflictException",
      "documentation" : "<p>You can't delete the resource because it is attached to one or more resources.</p>",
      "shapeName" : "DeleteConflictException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteConflictException",
        "variableType" : "DeleteConflictException",
        "variableDeclarationType" : "DeleteConflictException",
        "documentation" : null,
        "simpleType" : "DeleteConflictException",
        "variableSetterType" : "DeleteConflictException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "DeleteConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "InternalFailureException" : {
      "c2jName" : "InternalFailureException",
      "documentation" : "<p>An unexpected error has occurred.</p>",
      "shapeName" : "InternalFailureException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "internalFailureException",
        "variableType" : "InternalFailureException",
        "variableDeclarationType" : "InternalFailureException",
        "documentation" : null,
        "simpleType" : "InternalFailureException",
        "variableSetterType" : "InternalFailureException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InternalFailureException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "CreateCertificateFromCsrResult" : {
      "c2jName" : "CreateCertificateFromCsrResponse",
      "documentation" : "<p>The output from the CreateCertificateFromCsr operation.</p>",
      "shapeName" : "CreateCertificateFromCsrResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
        "name" : "CertificateArn",
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "variable" : {
          "variableName" : "certificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateArn",
          "marshallLocationName" : "certificateArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.*/",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@return The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.*/",
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@return The ID of the certificate. Certificate management operations only take a certificateId.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The certificate data, in PEM format.</p>",
        "name" : "CertificatePem",
        "c2jName" : "certificatePem",
        "c2jShape" : "CertificatePem",
        "variable" : {
          "variableName" : "certificatePem",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificatePem",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificatePem",
          "marshallLocationName" : "certificatePem",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
        "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
        "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createCertificateFromCsrResult",
        "variableType" : "CreateCertificateFromCsrResult",
        "variableDeclarationType" : "CreateCertificateFromCsrResult",
        "documentation" : null,
        "simpleType" : "CreateCertificateFromCsrResult",
        "variableSetterType" : "CreateCertificateFromCsrResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@return The ID of the certificate. Certificate management operations only take a certificateId.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>\n@param certificateId The ID of the certificate. Certificate management operations only take a certificateId.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CertificateArn" : {
          "documentation" : "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
          "name" : "CertificateArn",
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "variable" : {
            "variableName" : "certificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateArn",
            "marshallLocationName" : "certificateArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.*/",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@return The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.*/",
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>\n@param certificateArn The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CertificatePem" : {
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "name" : "CertificatePem",
          "c2jName" : "certificatePem",
          "c2jShape" : "CertificatePem",
          "variable" : {
            "variableName" : "certificatePem",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The certificate data, in PEM format.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificatePem",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificatePem",
            "marshallLocationName" : "certificatePem",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
          "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
          "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateKeysAndCertificateRequest" : {
      "c2jName" : "CreateKeysAndCertificateRequest",
      "documentation" : "<p>The input for the CreateKeysAndCertificate operation.</p>",
      "shapeName" : "CreateKeysAndCertificateRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>Specifies whether the certificate is active.</p>",
        "name" : "SetAsActive",
        "c2jName" : "setAsActive",
        "c2jShape" : "SetAsActive",
        "variable" : {
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "setAsActive",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "setAsActive",
          "marshallLocationName" : "setAsActive",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
        "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createKeysAndCertificateRequest",
        "variableType" : "CreateKeysAndCertificateRequest",
        "variableDeclarationType" : "CreateKeysAndCertificateRequest",
        "documentation" : null,
        "simpleType" : "CreateKeysAndCertificateRequest",
        "variableSetterType" : "CreateKeysAndCertificateRequest"
      },
      "marshaller" : {
        "action" : "CreateKeysAndCertificate",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/keys-and-certificate",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "SetAsActive" : {
          "documentation" : "<p>Specifies whether the certificate is active.</p>",
          "name" : "SetAsActive",
          "c2jName" : "setAsActive",
          "c2jShape" : "SetAsActive",
          "variable" : {
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the certificate is active.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "setAsActive",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "setAsActive",
            "marshallLocationName" : "setAsActive",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.*/",
          "getterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@return Specifies whether the certificate is active.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the certificate is active.</p>\n@param setAsActive Specifies whether the certificate is active.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateThingResult" : {
      "c2jName" : "CreateThingResponse",
      "documentation" : "<p>The output of the CreateThing operation.</p>",
      "shapeName" : "CreateThingResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the thing.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The thing ARN.</p>",
        "name" : "ThingArn",
        "c2jName" : "thingArn",
        "c2jShape" : "ThingArn",
        "variable" : {
          "variableName" : "thingArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The thing ARN.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingArn",
          "marshallLocationName" : "thingArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The thing ARN.</p>\n@param thingArn The thing ARN.*/",
        "getterDocumentation" : "/**<p>The thing ARN.</p>\n@return The thing ARN.*/",
        "fluentSetterDocumentation" : "/**<p>The thing ARN.</p>\n@param thingArn The thing ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The thing ARN.</p>\n@param thingArn The thing ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createThingResult",
        "variableType" : "CreateThingResult",
        "variableDeclarationType" : "CreateThingResult",
        "documentation" : null,
        "simpleType" : "CreateThingResult",
        "variableSetterType" : "CreateThingResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ThingName" : {
          "documentation" : "<p>The name of the thing.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ThingArn" : {
          "documentation" : "<p>The thing ARN.</p>",
          "name" : "ThingArn",
          "c2jName" : "thingArn",
          "c2jShape" : "ThingArn",
          "variable" : {
            "variableName" : "thingArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The thing ARN.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingArn",
            "marshallLocationName" : "thingArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The thing ARN.</p>\n@param thingArn The thing ARN.*/",
          "getterDocumentation" : "/**<p>The thing ARN.</p>\n@return The thing ARN.*/",
          "fluentSetterDocumentation" : "/**<p>The thing ARN.</p>\n@param thingArn The thing ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The thing ARN.</p>\n@param thingArn The thing ARN.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "LoggingOptionsPayload" : {
      "c2jName" : "LoggingOptionsPayload",
      "documentation" : "<p>Describes the logging options payload.</p>",
      "shapeName" : "LoggingOptionsPayload",
      "deprecated" : false,
      "required" : [ "roleArn" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The logging level.</p>",
        "name" : "LogLevel",
        "c2jName" : "logLevel",
        "c2jShape" : "LogLevel",
        "variable" : {
          "variableName" : "logLevel",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The logging level.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "logLevel",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "logLevel",
          "marshallLocationName" : "logLevel",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "LogLevel",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@see LogLevel*/",
        "getterDocumentation" : "/**<p>The logging level.</p>\n@return The logging level.\n@see LogLevel*/",
        "fluentSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
        "varargSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "loggingOptionsPayload",
        "variableType" : "LoggingOptionsPayload",
        "variableDeclarationType" : "LoggingOptionsPayload",
        "documentation" : null,
        "simpleType" : "LoggingOptionsPayload",
        "variableSetterType" : "LoggingOptionsPayload"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LogLevel" : {
          "documentation" : "<p>The logging level.</p>",
          "name" : "LogLevel",
          "c2jName" : "logLevel",
          "c2jShape" : "LogLevel",
          "variable" : {
            "variableName" : "logLevel",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The logging level.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "logLevel",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "logLevel",
            "marshallLocationName" : "logLevel",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "LogLevel",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@see LogLevel*/",
          "getterDocumentation" : "/**<p>The logging level.</p>\n@return The logging level.\n@see LogLevel*/",
          "fluentSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/",
          "varargSetterDocumentation" : "/**<p>The logging level.</p>\n@param logLevel The logging level.\n@return Returns a reference to this object so that method calls can be chained together.\n@see LogLevel*/"
        },
        "RoleArn" : {
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeThingRequest" : {
      "c2jName" : "DescribeThingRequest",
      "documentation" : "<p>The input for the DescribeThing operation.</p>",
      "shapeName" : "DescribeThingRequest",
      "deprecated" : false,
      "required" : [ "thingName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the thing.</p>",
        "name" : "ThingName",
        "c2jName" : "thingName",
        "c2jShape" : "ThingName",
        "variable" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the thing.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "thingName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "thingName",
          "marshallLocationName" : "thingName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
        "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeThingRequest",
        "variableType" : "DescribeThingRequest",
        "variableDeclarationType" : "DescribeThingRequest",
        "documentation" : null,
        "simpleType" : "DescribeThingRequest",
        "variableSetterType" : "DescribeThingRequest"
      },
      "marshaller" : {
        "action" : "DescribeThing",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/things/{thingName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ThingName" : {
          "documentation" : "<p>The name of the thing.</p>",
          "name" : "ThingName",
          "c2jName" : "thingName",
          "c2jShape" : "ThingName",
          "variable" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the thing.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "thingName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "thingName",
            "marshallLocationName" : "thingName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.*/",
          "getterDocumentation" : "/**<p>The name of the thing.</p>\n@return The name of the thing.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the thing.</p>\n@param thingName The name of the thing.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "S3Action" : {
      "c2jName" : "S3Action",
      "documentation" : "<p>Describes an action to write data to an Amazon S3 bucket.</p>",
      "shapeName" : "S3Action",
      "deprecated" : false,
      "required" : [ "roleArn", "bucketName", "key" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
        "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The S3 bucket.</p>",
        "name" : "BucketName",
        "c2jName" : "bucketName",
        "c2jShape" : "BucketName",
        "variable" : {
          "variableName" : "bucketName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The S3 bucket.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bucketName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bucketName",
          "marshallLocationName" : "bucketName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The S3 bucket.</p>\n@param bucketName The S3 bucket.*/",
        "getterDocumentation" : "/**<p>The S3 bucket.</p>\n@return The S3 bucket.*/",
        "fluentSetterDocumentation" : "/**<p>The S3 bucket.</p>\n@param bucketName The S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The S3 bucket.</p>\n@param bucketName The S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The object key.</p>",
        "name" : "Key",
        "c2jName" : "key",
        "c2jShape" : "Key",
        "variable" : {
          "variableName" : "key",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The object key.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "key",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "key",
          "marshallLocationName" : "key",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.*/",
        "getterDocumentation" : "/**<p>The object key.</p>\n@return The object key.*/",
        "fluentSetterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "s3Action",
        "variableType" : "S3Action",
        "variableDeclarationType" : "S3Action",
        "documentation" : null,
        "simpleType" : "S3Action",
        "variableSetterType" : "S3Action"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Key" : {
          "documentation" : "<p>The object key.</p>",
          "name" : "Key",
          "c2jName" : "key",
          "c2jShape" : "Key",
          "variable" : {
            "variableName" : "key",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The object key.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "key",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "key",
            "marshallLocationName" : "key",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.*/",
          "getterDocumentation" : "/**<p>The object key.</p>\n@return The object key.*/",
          "fluentSetterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The object key.</p>\n@param key The object key.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "BucketName" : {
          "documentation" : "<p>The S3 bucket.</p>",
          "name" : "BucketName",
          "c2jName" : "bucketName",
          "c2jShape" : "BucketName",
          "variable" : {
            "variableName" : "bucketName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The S3 bucket.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bucketName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bucketName",
            "marshallLocationName" : "bucketName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The S3 bucket.</p>\n@param bucketName The S3 bucket.*/",
          "getterDocumentation" : "/**<p>The S3 bucket.</p>\n@return The S3 bucket.*/",
          "fluentSetterDocumentation" : "/**<p>The S3 bucket.</p>\n@param bucketName The S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The S3 bucket.</p>\n@param bucketName The S3 bucket.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RoleArn" : {
          "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the IAM role that grants access.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.*/",
          "getterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@return The ARN of the IAM role that grants access.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the IAM role that grants access.</p>\n@param roleArn The ARN of the IAM role that grants access.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreatePolicyVersionRequest" : {
      "c2jName" : "CreatePolicyVersionRequest",
      "documentation" : "<p>The input for the CreatePolicyVersion operation.</p>",
      "shapeName" : "CreatePolicyVersionRequest",
      "deprecated" : false,
      "required" : [ "policyName", "policyDocument" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The JSON document that describes the policy.</p>",
        "name" : "PolicyDocument",
        "c2jName" : "policyDocument",
        "c2jShape" : "PolicyDocument",
        "variable" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyDocument",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyDocument",
          "marshallLocationName" : "policyDocument",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
        "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
        "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the policy version is set as the default.</p>",
        "name" : "SetAsDefault",
        "c2jName" : "setAsDefault",
        "c2jShape" : "SetAsDefault",
        "variable" : {
          "variableName" : "setAsDefault",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the policy version is set as the default.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "setAsDefault",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "setAsDefault",
          "marshallLocationName" : "setAsDefault",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the policy version is set as the default.</p>\n@param setAsDefault Specifies whether the policy version is set as the default.*/",
        "getterDocumentation" : "/**<p>Specifies whether the policy version is set as the default.</p>\n@return Specifies whether the policy version is set as the default.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is set as the default.</p>\n@param setAsDefault Specifies whether the policy version is set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is set as the default.</p>\n@param setAsDefault Specifies whether the policy version is set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createPolicyVersionRequest",
        "variableType" : "CreatePolicyVersionRequest",
        "variableDeclarationType" : "CreatePolicyVersionRequest",
        "documentation" : null,
        "simpleType" : "CreatePolicyVersionRequest",
        "variableSetterType" : "CreatePolicyVersionRequest"
      },
      "marshaller" : {
        "action" : "CreatePolicyVersion",
        "verb" : "POST",
        "target" : null,
        "requestUri" : "/policies/{policyName}/version",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyDocument" : {
          "documentation" : "<p>The JSON document that describes the policy.</p>",
          "name" : "PolicyDocument",
          "c2jName" : "policyDocument",
          "c2jShape" : "PolicyDocument",
          "variable" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The JSON document that describes the policy.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyDocument",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyDocument",
            "marshallLocationName" : "policyDocument",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.*/",
          "getterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@return The JSON document that describes the policy.*/",
          "fluentSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The JSON document that describes the policy.</p>\n@param policyDocument The JSON document that describes the policy.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SetAsDefault" : {
          "documentation" : "<p>Specifies whether the policy version is set as the default.</p>",
          "name" : "SetAsDefault",
          "c2jName" : "setAsDefault",
          "c2jShape" : "SetAsDefault",
          "variable" : {
            "variableName" : "setAsDefault",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the policy version is set as the default.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "setAsDefault",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "setAsDefault",
            "marshallLocationName" : "setAsDefault",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the policy version is set as the default.</p>\n@param setAsDefault Specifies whether the policy version is set as the default.*/",
          "getterDocumentation" : "/**<p>Specifies whether the policy version is set as the default.</p>\n@return Specifies whether the policy version is set as the default.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the policy version is set as the default.</p>\n@param setAsDefault Specifies whether the policy version is set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the policy version is set as the default.</p>\n@param setAsDefault Specifies whether the policy version is set as the default.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CertificateDescription" : {
      "c2jName" : "CertificateDescription",
      "documentation" : "<p>Describes a certificate.</p>",
      "shapeName" : "CertificateDescription",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The ARN of the certificate.</p>",
        "name" : "CertificateArn",
        "c2jName" : "certificateArn",
        "c2jShape" : "CertificateArn",
        "variable" : {
          "variableName" : "certificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateArn",
          "marshallLocationName" : "certificateArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
        "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ID of the certificate.</p>",
        "name" : "CertificateId",
        "c2jName" : "certificateId",
        "c2jShape" : "CertificateId",
        "variable" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificateId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificateId",
          "marshallLocationName" : "certificateId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The status of the certificate.</p>",
        "name" : "Status",
        "c2jName" : "status",
        "c2jShape" : "CertificateStatus",
        "variable" : {
          "variableName" : "status",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The status of the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "status",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "status",
          "marshallLocationName" : "status",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "CertificateStatus",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@see CertificateStatus*/",
        "getterDocumentation" : "/**<p>The status of the certificate.</p>\n@return The status of the certificate.\n@see CertificateStatus*/",
        "fluentSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
        "varargSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/"
      }, {
        "documentation" : "<p>The certificate data, in PEM format.</p>",
        "name" : "CertificatePem",
        "c2jName" : "certificatePem",
        "c2jShape" : "CertificatePem",
        "variable" : {
          "variableName" : "certificatePem",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "certificatePem",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "certificatePem",
          "marshallLocationName" : "certificatePem",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
        "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
        "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ID of the AWS account that owns the certificate.</p>",
        "name" : "OwnedBy",
        "c2jName" : "ownedBy",
        "c2jShape" : "AwsAccountId",
        "variable" : {
          "variableName" : "ownedBy",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ID of the AWS account that owns the certificate.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownedBy",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownedBy",
          "marshallLocationName" : "ownedBy",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.*/",
        "getterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@return The ID of the AWS account that owns the certificate.*/",
        "fluentSetterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The date and time the certificate was created.</p>",
        "name" : "CreationDate",
        "c2jName" : "creationDate",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The date and time the certificate was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "creationDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "creationDate",
          "marshallLocationName" : "creationDate",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.*/",
        "getterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@return The date and time the certificate was created.*/",
        "fluentSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The date and time the certificate was last modified.</p>",
        "name" : "LastModifiedDate",
        "c2jName" : "lastModifiedDate",
        "c2jShape" : "DateType",
        "variable" : {
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The date and time the certificate was last modified.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "lastModifiedDate",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "lastModifiedDate",
          "marshallLocationName" : "lastModifiedDate",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.*/",
        "getterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@return The date and time the certificate was last modified.*/",
        "fluentSetterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "certificateDescription",
        "variableType" : "CertificateDescription",
        "variableDeclarationType" : "CertificateDescription",
        "documentation" : null,
        "simpleType" : "CertificateDescription",
        "variableSetterType" : "CertificateDescription"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Status" : {
          "documentation" : "<p>The status of the certificate.</p>",
          "name" : "Status",
          "c2jName" : "status",
          "c2jShape" : "CertificateStatus",
          "variable" : {
            "variableName" : "status",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The status of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "status",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "status",
            "marshallLocationName" : "status",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "CertificateStatus",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@see CertificateStatus*/",
          "getterDocumentation" : "/**<p>The status of the certificate.</p>\n@return The status of the certificate.\n@see CertificateStatus*/",
          "fluentSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/",
          "varargSetterDocumentation" : "/**<p>The status of the certificate.</p>\n@param status The status of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.\n@see CertificateStatus*/"
        },
        "CertificateId" : {
          "documentation" : "<p>The ID of the certificate.</p>",
          "name" : "CertificateId",
          "c2jName" : "certificateId",
          "c2jShape" : "CertificateId",
          "variable" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateId",
            "marshallLocationName" : "certificateId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the certificate.</p>\n@return The ID of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the certificate.</p>\n@param certificateId The ID of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CertificateArn" : {
          "documentation" : "<p>The ARN of the certificate.</p>",
          "name" : "CertificateArn",
          "c2jName" : "certificateArn",
          "c2jShape" : "CertificateArn",
          "variable" : {
            "variableName" : "certificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN of the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificateArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificateArn",
            "marshallLocationName" : "certificateArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.*/",
          "getterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@return The ARN of the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN of the certificate.</p>\n@param certificateArn The ARN of the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CertificatePem" : {
          "documentation" : "<p>The certificate data, in PEM format.</p>",
          "name" : "CertificatePem",
          "c2jName" : "certificatePem",
          "c2jShape" : "CertificatePem",
          "variable" : {
            "variableName" : "certificatePem",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The certificate data, in PEM format.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "certificatePem",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "certificatePem",
            "marshallLocationName" : "certificatePem",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.*/",
          "getterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@return The certificate data, in PEM format.*/",
          "fluentSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The certificate data, in PEM format.</p>\n@param certificatePem The certificate data, in PEM format.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "LastModifiedDate" : {
          "documentation" : "<p>The date and time the certificate was last modified.</p>",
          "name" : "LastModifiedDate",
          "c2jName" : "lastModifiedDate",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The date and time the certificate was last modified.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "lastModifiedDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "lastModifiedDate",
            "marshallLocationName" : "lastModifiedDate",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.*/",
          "getterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@return The date and time the certificate was last modified.*/",
          "fluentSetterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The date and time the certificate was last modified.</p>\n@param lastModifiedDate The date and time the certificate was last modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CreationDate" : {
          "documentation" : "<p>The date and time the certificate was created.</p>",
          "name" : "CreationDate",
          "c2jName" : "creationDate",
          "c2jShape" : "DateType",
          "variable" : {
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The date and time the certificate was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "creationDate",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "creationDate",
            "marshallLocationName" : "creationDate",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.*/",
          "getterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@return The date and time the certificate was created.*/",
          "fluentSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The date and time the certificate was created.</p>\n@param creationDate The date and time the certificate was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OwnedBy" : {
          "documentation" : "<p>The ID of the AWS account that owns the certificate.</p>",
          "name" : "OwnedBy",
          "c2jName" : "ownedBy",
          "c2jShape" : "AwsAccountId",
          "variable" : {
            "variableName" : "ownedBy",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ID of the AWS account that owns the certificate.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownedBy",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownedBy",
            "marshallLocationName" : "ownedBy",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.*/",
          "getterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@return The ID of the AWS account that owns the certificate.*/",
          "fluentSetterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ID of the AWS account that owns the certificate.</p>\n@param ownedBy The ID of the AWS account that owns the certificate.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "TransferConflictException" : {
      "c2jName" : "TransferConflictException",
      "documentation" : "<p>You can't transfer the the certificate because authorization policies are still attached.</p>",
      "shapeName" : "TransferConflictException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "transferConflictException",
        "variableType" : "TransferConflictException",
        "variableDeclarationType" : "TransferConflictException",
        "documentation" : null,
        "simpleType" : "TransferConflictException",
        "variableSetterType" : "TransferConflictException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "TransferConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ListTopicRulesRequest" : {
      "c2jName" : "ListTopicRulesRequest",
      "documentation" : "<p>The input for the ListTopicRules operation.</p>",
      "shapeName" : "ListTopicRulesRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The topic.</p>",
        "name" : "Topic",
        "c2jName" : "topic",
        "c2jShape" : "Topic",
        "variable" : {
          "variableName" : "topic",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The topic.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "topic",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "topic",
          "marshallLocationName" : "topic",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.*/",
        "getterDocumentation" : "/**<p>The topic.</p>\n@return The topic.*/",
        "fluentSetterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The maximum number of results to return.</p>",
        "name" : "MaxResults",
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "variable" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of results to return.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "maxResults",
          "marshallLocationName" : "maxResults",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.*/",
        "getterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@return The maximum number of results to return.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A token used to retrieve the next value.</p>",
        "name" : "NextToken",
        "c2jName" : "nextToken",
        "c2jShape" : "NextToken",
        "variable" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextToken",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "nextToken",
          "marshallLocationName" : "nextToken",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
        "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
        "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the rule is disabled.</p>",
        "name" : "RuleDisabled",
        "c2jName" : "ruleDisabled",
        "c2jShape" : "IsDisabled",
        "variable" : {
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleDisabled",
          "marshallLocationName" : "ruleDisabled",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : true
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
        "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listTopicRulesRequest",
        "variableType" : "ListTopicRulesRequest",
        "variableDeclarationType" : "ListTopicRulesRequest",
        "documentation" : null,
        "simpleType" : "ListTopicRulesRequest",
        "variableSetterType" : "ListTopicRulesRequest"
      },
      "marshaller" : {
        "action" : "ListTopicRules",
        "verb" : "GET",
        "target" : null,
        "requestUri" : "/rules",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextToken" : {
          "documentation" : "<p>A token used to retrieve the next value.</p>",
          "name" : "NextToken",
          "c2jName" : "nextToken",
          "c2jShape" : "NextToken",
          "variable" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A token used to retrieve the next value.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextToken",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "nextToken",
            "marshallLocationName" : "nextToken",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.*/",
          "getterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@return A token used to retrieve the next value.*/",
          "fluentSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A token used to retrieve the next value.</p>\n@param nextToken A token used to retrieve the next value.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RuleDisabled" : {
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "name" : "RuleDisabled",
          "c2jName" : "ruleDisabled",
          "c2jShape" : "IsDisabled",
          "variable" : {
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the rule is disabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleDisabled",
            "marshallLocationName" : "ruleDisabled",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
          "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Topic" : {
          "documentation" : "<p>The topic.</p>",
          "name" : "Topic",
          "c2jName" : "topic",
          "c2jShape" : "Topic",
          "variable" : {
            "variableName" : "topic",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The topic.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "topic",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "topic",
            "marshallLocationName" : "topic",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.*/",
          "getterDocumentation" : "/**<p>The topic.</p>\n@return The topic.*/",
          "fluentSetterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The topic.</p>\n@param topic The topic.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "MaxResults" : {
          "documentation" : "<p>The maximum number of results to return.</p>",
          "name" : "MaxResults",
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "variable" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of results to return.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "maxResults",
            "marshallLocationName" : "maxResults",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : true
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.*/",
          "getterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@return The maximum number of results to return.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of results to return.</p>\n@param maxResults The maximum number of results to return.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "FirehoseAction" : {
      "c2jName" : "FirehoseAction",
      "documentation" : "",
      "shapeName" : "FirehoseAction",
      "deprecated" : false,
      "required" : [ "roleArn", "deliveryStreamName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "RoleArn",
        "c2jName" : "roleArn",
        "c2jShape" : "AwsArn",
        "variable" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "roleArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "roleArn",
          "marshallLocationName" : "roleArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param roleArn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param roleArn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param roleArn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "DeliveryStreamName",
        "c2jName" : "deliveryStreamName",
        "c2jShape" : "DeliveryStreamName",
        "variable" : {
          "variableName" : "deliveryStreamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "deliveryStreamName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "deliveryStreamName",
          "marshallLocationName" : "deliveryStreamName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param deliveryStreamName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param deliveryStreamName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param deliveryStreamName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "firehoseAction",
        "variableType" : "FirehoseAction",
        "variableDeclarationType" : "FirehoseAction",
        "documentation" : null,
        "simpleType" : "FirehoseAction",
        "variableSetterType" : "FirehoseAction"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "DeliveryStreamName" : {
          "documentation" : "",
          "name" : "DeliveryStreamName",
          "c2jName" : "deliveryStreamName",
          "c2jShape" : "DeliveryStreamName",
          "variable" : {
            "variableName" : "deliveryStreamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "deliveryStreamName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "deliveryStreamName",
            "marshallLocationName" : "deliveryStreamName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param deliveryStreamName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param deliveryStreamName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param deliveryStreamName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RoleArn" : {
          "documentation" : "",
          "name" : "RoleArn",
          "c2jName" : "roleArn",
          "c2jShape" : "AwsArn",
          "variable" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "roleArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "roleArn",
            "marshallLocationName" : "roleArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param roleArn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param roleArn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param roleArn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "documentation" : "<p>The rate exceeds the limit.</p>",
      "shapeName" : "ThrottlingException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "variableDeclarationType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DeletePolicyRequest" : {
      "c2jName" : "DeletePolicyRequest",
      "documentation" : "<p>The input for the DeletePolicy operation.</p>",
      "shapeName" : "DeletePolicyRequest",
      "deprecated" : false,
      "required" : [ "policyName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the policy to delete.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the policy to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.*/",
        "getterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@return The name of the policy to delete.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deletePolicyRequest",
        "variableType" : "DeletePolicyRequest",
        "variableDeclarationType" : "DeletePolicyRequest",
        "documentation" : null,
        "simpleType" : "DeletePolicyRequest",
        "variableSetterType" : "DeletePolicyRequest"
      },
      "marshaller" : {
        "action" : "DeletePolicy",
        "verb" : "DELETE",
        "target" : null,
        "requestUri" : "/policies/{policyName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "PolicyName" : {
          "documentation" : "<p>The name of the policy to delete.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the policy to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.*/",
          "getterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@return The name of the policy to delete.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the policy to delete.</p>\n@param policyName The name of the policy to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InvalidRequestException" : {
      "c2jName" : "InvalidRequestException",
      "documentation" : "<p>The request is not valid.</p>",
      "shapeName" : "InvalidRequestException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "invalidRequestException",
        "variableType" : "InvalidRequestException",
        "variableDeclarationType" : "InvalidRequestException",
        "documentation" : null,
        "simpleType" : "InvalidRequestException",
        "variableSetterType" : "InvalidRequestException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InvalidRequestException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "AttachPrincipalPolicyRequest" : {
      "c2jName" : "AttachPrincipalPolicyRequest",
      "documentation" : "<p>The input for the AttachPrincipalPolicy operation.</p>",
      "shapeName" : "AttachPrincipalPolicyRequest",
      "deprecated" : false,
      "required" : [ "policyName", "principal" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : true,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The policy name.</p>",
        "name" : "PolicyName",
        "c2jName" : "policyName",
        "c2jShape" : "PolicyName",
        "variable" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The policy name.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "policyName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "policyName",
          "marshallLocationName" : "policyName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "flattened" : false,
          "header" : false,
          "uri" : true,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
        "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
        "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>",
        "name" : "Principal",
        "c2jName" : "principal",
        "c2jShape" : "Principal",
        "variable" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "principal",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "x-amzn-iot-principal",
          "marshallLocationName" : "x-amzn-iot-principal",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "flattened" : false,
          "header" : true,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>\n@param principal The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.*/",
        "getterDocumentation" : "/**<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>\n@return The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.*/",
        "fluentSetterDocumentation" : "/**<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>\n@param principal The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>\n@param principal The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "attachPrincipalPolicyRequest",
        "variableType" : "AttachPrincipalPolicyRequest",
        "variableDeclarationType" : "AttachPrincipalPolicyRequest",
        "documentation" : null,
        "simpleType" : "AttachPrincipalPolicyRequest",
        "variableSetterType" : "AttachPrincipalPolicyRequest"
      },
      "marshaller" : {
        "action" : "AttachPrincipalPolicy",
        "verb" : "PUT",
        "target" : null,
        "requestUri" : "/principal-policies/{policyName}",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Principal" : {
          "documentation" : "<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>",
          "name" : "Principal",
          "c2jName" : "principal",
          "c2jShape" : "Principal",
          "variable" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "principal",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "x-amzn-iot-principal",
            "marshallLocationName" : "x-amzn-iot-principal",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "flattened" : false,
            "header" : true,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>\n@param principal The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.*/",
          "getterDocumentation" : "/**<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>\n@return The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.*/",
          "fluentSetterDocumentation" : "/**<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>\n@param principal The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.</p>\n@param principal The principal which can be a certificate ARN (as returned from the CreateCertificate operation) or a Cognito ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PolicyName" : {
          "documentation" : "<p>The policy name.</p>",
          "name" : "PolicyName",
          "c2jName" : "policyName",
          "c2jShape" : "PolicyName",
          "variable" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The policy name.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "policyName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "policyName",
            "marshallLocationName" : "policyName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "flattened" : false,
            "header" : false,
            "uri" : true,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.*/",
          "getterDocumentation" : "/**<p>The policy name.</p>\n@return The policy name.*/",
          "fluentSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The policy name.</p>\n@param policyName The policy name.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "TopicRule" : {
      "c2jName" : "TopicRule",
      "documentation" : "<p>Describes a rule.</p>",
      "shapeName" : "TopicRule",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the rule.</p>",
        "name" : "RuleName",
        "c2jName" : "ruleName",
        "c2jShape" : "RuleName",
        "variable" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ruleName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleName",
          "marshallLocationName" : "ruleName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
        "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>",
        "name" : "Sql",
        "c2jName" : "sql",
        "c2jShape" : "SQL",
        "variable" : {
          "variableName" : "sql",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sql",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "sql",
          "marshallLocationName" : "sql",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.*/",
        "getterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>\n@return The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.*/",
        "fluentSetterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The description of the rule.</p>",
        "name" : "Description",
        "c2jName" : "description",
        "c2jShape" : "Description",
        "variable" : {
          "variableName" : "description",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The description of the rule.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "description",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "description",
          "marshallLocationName" : "description",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.*/",
        "getterDocumentation" : "/**<p>The description of the rule.</p>\n@return The description of the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The date and time the rule was created.</p>",
        "name" : "CreatedAt",
        "c2jName" : "createdAt",
        "c2jShape" : "CreatedAtDate",
        "variable" : {
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The date and time the rule was created.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "createdAt",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "createdAt",
          "marshallLocationName" : "createdAt",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.*/",
        "getterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@return The date and time the rule was created.*/",
        "fluentSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The actions associated with the rule.</p>",
        "name" : "Actions",
        "c2jName" : "actions",
        "c2jShape" : "ActionList",
        "variable" : {
          "variableName" : "actions",
          "variableType" : "java.util.List<Action>",
          "variableDeclarationType" : "java.util.List<Action>",
          "documentation" : "<p>The actions associated with the rule.</p>",
          "simpleType" : "List<Action>",
          "variableSetterType" : "java.util.Collection<Action>"
        },
        "setterModel" : {
          "variableName" : "actions",
          "variableType" : "java.util.List<Action>",
          "variableDeclarationType" : "java.util.List<Action>",
          "documentation" : "",
          "simpleType" : "List<Action>",
          "variableSetterType" : "java.util.Collection<Action>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Action>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "actions",
          "marshallLocationName" : "actions",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Action",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Action",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Action",
              "variableDeclarationType" : "Action",
              "documentation" : "",
              "simpleType" : "Action",
              "variableSetterType" : "Action"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Action",
              "variableDeclarationType" : "Action",
              "documentation" : "",
              "simpleType" : "Action",
              "variableSetterType" : "Action"
            },
            "getterModel" : {
              "returnType" : "Action",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Action",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Action>",
          "templateImplType" : "java.util.ArrayList<Action>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.*/",
        "getterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@return The actions associated with the rule.*/",
        "fluentSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActions(java.util.Collection)} or {@link #withActions(java.util.Collection)} if you want to override the existing values.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Specifies whether the rule is disabled.</p>",
        "name" : "RuleDisabled",
        "c2jName" : "ruleDisabled",
        "c2jShape" : "IsDisabled",
        "variable" : {
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "ruleDisabled",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ruleDisabled",
          "marshallLocationName" : "ruleDisabled",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
        "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
        "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "topicRule",
        "variableType" : "TopicRule",
        "variableDeclarationType" : "TopicRule",
        "documentation" : null,
        "simpleType" : "TopicRule",
        "variableSetterType" : "TopicRule"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Description" : {
          "documentation" : "<p>The description of the rule.</p>",
          "name" : "Description",
          "c2jName" : "description",
          "c2jShape" : "Description",
          "variable" : {
            "variableName" : "description",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The description of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "description",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "description",
            "marshallLocationName" : "description",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.*/",
          "getterDocumentation" : "/**<p>The description of the rule.</p>\n@return The description of the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The description of the rule.</p>\n@param description The description of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RuleDisabled" : {
          "documentation" : "<p>Specifies whether the rule is disabled.</p>",
          "name" : "RuleDisabled",
          "c2jName" : "ruleDisabled",
          "c2jShape" : "IsDisabled",
          "variable" : {
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>Specifies whether the rule is disabled.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "ruleDisabled",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleDisabled",
            "marshallLocationName" : "ruleDisabled",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.*/",
          "getterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@return Specifies whether the rule is disabled.*/",
          "fluentSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Specifies whether the rule is disabled.</p>\n@param ruleDisabled Specifies whether the rule is disabled.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Actions" : {
          "documentation" : "<p>The actions associated with the rule.</p>",
          "name" : "Actions",
          "c2jName" : "actions",
          "c2jShape" : "ActionList",
          "variable" : {
            "variableName" : "actions",
            "variableType" : "java.util.List<Action>",
            "variableDeclarationType" : "java.util.List<Action>",
            "documentation" : "<p>The actions associated with the rule.</p>",
            "simpleType" : "List<Action>",
            "variableSetterType" : "java.util.Collection<Action>"
          },
          "setterModel" : {
            "variableName" : "actions",
            "variableType" : "java.util.List<Action>",
            "variableDeclarationType" : "java.util.List<Action>",
            "documentation" : "",
            "simpleType" : "List<Action>",
            "variableSetterType" : "java.util.Collection<Action>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Action>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "actions",
            "marshallLocationName" : "actions",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Action",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Action",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Action",
                "variableDeclarationType" : "Action",
                "documentation" : "",
                "simpleType" : "Action",
                "variableSetterType" : "Action"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Action",
                "variableDeclarationType" : "Action",
                "documentation" : "",
                "simpleType" : "Action",
                "variableSetterType" : "Action"
              },
              "getterModel" : {
                "returnType" : "Action",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Action",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Action>",
            "templateImplType" : "java.util.ArrayList<Action>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.*/",
          "getterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@return The actions associated with the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The actions associated with the rule.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActions(java.util.Collection)} or {@link #withActions(java.util.Collection)} if you want to override the existing values.</p>\n@param actions The actions associated with the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Sql" : {
          "documentation" : "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>",
          "name" : "Sql",
          "c2jName" : "sql",
          "c2jShape" : "SQL",
          "variable" : {
            "variableName" : "sql",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sql",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "sql",
            "marshallLocationName" : "sql",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.*/",
          "getterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>\n@return The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.*/",
          "fluentSetterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.</p>\n@param sql The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters properly.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RuleName" : {
          "documentation" : "<p>The name of the rule.</p>",
          "name" : "RuleName",
          "c2jName" : "ruleName",
          "c2jShape" : "RuleName",
          "variable" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the rule.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ruleName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ruleName",
            "marshallLocationName" : "ruleName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.*/",
          "getterDocumentation" : "/**<p>The name of the rule.</p>\n@return The name of the rule.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the rule.</p>\n@param ruleName The name of the rule.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CreatedAt" : {
          "documentation" : "<p>The date and time the rule was created.</p>",
          "name" : "CreatedAt",
          "c2jName" : "createdAt",
          "c2jShape" : "CreatedAtDate",
          "variable" : {
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The date and time the rule was created.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "createdAt",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "createdAt",
            "marshallLocationName" : "createdAt",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.*/",
          "getterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@return The date and time the rule was created.*/",
          "fluentSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The date and time the rule was created.</p>\n@param createdAt The date and time the rule was created.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    }
  },
  "customizationConfig" : {
    "requestMetrics" : null,
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "serviceClientHoldInputStream" : false,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customClientConfiguration" : null,
    "customResponseMetadataClassName" : null,
    "skipInterfaceAdditions" : false,
    "customServiceNameForRequest" : null,
    "requiredParamValidationEnabled" : false,
    "additionalShapeConstructors" : null,
    "simpleMethods" : null,
    "authPolicyActions" : {
      "skip" : true,
      "actionPrefix" : null,
      "fileNamePrefix" : null
    },
    "customCodeTemplates" : null,
    "operationModifiers" : null,
    "shapeSubstitutions" : null,
    "shapeModifiers" : null
  },
  "defaultClientConfiguration" : "com.amazonaws.PredefinedClientConfigurations.defaultConfig()"
}