{
  "metadata" : {
    "apiVersion" : "2012-10-25",
    "exceptionUnmarshallerImpl" : null,
    "protocol" : "json",
    "checksumFormat" : null,
    "documentation" : "<p>AWS Direct Connect makes it easy to establish a dedicated network connection from your premises to Amazon Web Services (AWS). Using AWS Direct Connect, you can establish private connectivity between AWS and your data center, office, or colocation environment, which in many cases can reduce your network costs, increase bandwidth throughput, and provide a more consistent network experience than Internet-based connections.</p> <p>The AWS Direct Connect API Reference provides descriptions, syntax, and usage examples for each of the actions and data types for AWS Direct Connect. Use the following links to get started using the <i>AWS Direct Connect API Reference</i>:</p> <ul> <li> <a href=\"http://docs.aws.amazon.com/directconnect/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all AWS Direct Connect actions.</li> <li> <a href=\"http://docs.aws.amazon.com/directconnect/latest/APIReference/API_Types.html\">Data Types</a>: An alphabetical list of all AWS Direct Connect data types.</li> <li> <a href=\"http://docs.aws.amazon.com/directconnect/latest/APIReference/CommonParameters.html\">Common Query Parameters</a>: Parameters that all Query actions can use.</li> <li> <a href=\"http://docs.aws.amazon.com/directconnect/latest/APIReference/CommonErrors.html\">Common Errors</a>: Client and server errors that all actions can return.</li> </ul>",
    "defaultEndpoint" : "https://directconnect.us-east-1.amazonaws.com/",
    "defaultEndpointWithoutHttpProtocol" : "directconnect.us-east-1.amazonaws.com/",
    "syncInterface" : "AmazonDirectConnect",
    "syncClient" : "AmazonDirectConnectClient",
    "asyncInterface" : "AmazonDirectConnectAsync",
    "asyncClient" : "AmazonDirectConnectAsyncClient",
    "packageName" : "com.amazonaws.services.directconnect",
    "packagePath" : "com/amazonaws/services/directconnect",
    "serviceAbbreviation" : null,
    "serviceFullName" : "AWS Direct Connect",
    "hasApiWithStreamInput" : false,
    "jsonContentVersion" : "application/x-amz-json-1.1",
    "endpointPrefix" : "directconnect",
    "signingName" : "directconnect",
    "serviceName" : "AWS Direct Connect",
    "jsonProtocol" : true,
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "protocolDefaultExceptionUnmarshallerType" : "JsonErrorUnmarshaller"
  },
  "operations" : {
    "AllocateConnectionOnInterconnect" : {
      "documentation" : "<p>Creates a hosted connection on an interconnect.</p> <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection on the given interconnect.</p>",
      "operationName" : "AllocateConnectionOnInterconnect",
      "deprecated" : false,
      "input" : {
        "variableName" : "allocateConnectionOnInterconnectRequest",
        "variableType" : "AllocateConnectionOnInterconnectRequest",
        "variableDeclarationType" : "AllocateConnectionOnInterconnectRequest",
        "documentation" : "<p>Container for the parameters to the AllocateConnectionOnInterconnect operation.</p>",
        "simpleType" : "AllocateConnectionOnInterconnectRequest",
        "variableSetterType" : "AllocateConnectionOnInterconnectRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "AllocateConnectionOnInterconnectResult",
        "documentation" : "<p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a hosted connection on an interconnect.</p> <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection on the given interconnect.</p>\n@param allocateConnectionOnInterconnectRequest Container for the parameters to the AllocateConnectionOnInterconnect operation.\n@return Result of the AllocateConnectionOnInterconnect operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Creates a hosted connection on an interconnect.</p> <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection on the given interconnect.</p>\n@param allocateConnectionOnInterconnectRequest Container for the parameters to the AllocateConnectionOnInterconnect operation.\n@return A Java Future containing the result of the AllocateConnectionOnInterconnect operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a hosted connection on an interconnect.</p> <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection on the given interconnect.</p>\n@param allocateConnectionOnInterconnectRequest Container for the parameters to the AllocateConnectionOnInterconnect operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the AllocateConnectionOnInterconnect operation returned by the service.*/",
      "syncReturnType" : "AllocateConnectionOnInterconnectResult",
      "asyncReturnType" : "AllocateConnectionOnInterconnectResult",
      "asyncFutureType" : "java.util.concurrent.Future<AllocateConnectionOnInterconnectResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<AllocateConnectionOnInterconnectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AllocateConnectionOnInterconnectRequest, AllocateConnectionOnInterconnectResult>",
      "methodName" : "allocateConnectionOnInterconnect"
    },
    "AllocatePrivateVirtualInterface" : {
      "documentation" : "<p>Provisions a private virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a private virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPrivateVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>",
      "operationName" : "AllocatePrivateVirtualInterface",
      "deprecated" : false,
      "input" : {
        "variableName" : "allocatePrivateVirtualInterfaceRequest",
        "variableType" : "AllocatePrivateVirtualInterfaceRequest",
        "variableDeclarationType" : "AllocatePrivateVirtualInterfaceRequest",
        "documentation" : "<p>Container for the parameters to the AllocatePrivateVirtualInterface operation.</p>",
        "simpleType" : "AllocatePrivateVirtualInterfaceRequest",
        "variableSetterType" : "AllocatePrivateVirtualInterfaceRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "AllocatePrivateVirtualInterfaceResult",
        "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Provisions a private virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a private virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPrivateVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>\n@param allocatePrivateVirtualInterfaceRequest Container for the parameters to the AllocatePrivateVirtualInterface operation.\n@return Result of the AllocatePrivateVirtualInterface operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Provisions a private virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a private virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPrivateVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>\n@param allocatePrivateVirtualInterfaceRequest Container for the parameters to the AllocatePrivateVirtualInterface operation.\n@return A Java Future containing the result of the AllocatePrivateVirtualInterface operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Provisions a private virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a private virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPrivateVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>\n@param allocatePrivateVirtualInterfaceRequest Container for the parameters to the AllocatePrivateVirtualInterface operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the AllocatePrivateVirtualInterface operation returned by the service.*/",
      "syncReturnType" : "AllocatePrivateVirtualInterfaceResult",
      "asyncReturnType" : "AllocatePrivateVirtualInterfaceResult",
      "asyncFutureType" : "java.util.concurrent.Future<AllocatePrivateVirtualInterfaceResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<AllocatePrivateVirtualInterfaceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AllocatePrivateVirtualInterfaceRequest, AllocatePrivateVirtualInterfaceResult>",
      "methodName" : "allocatePrivateVirtualInterface"
    },
    "AllocatePublicVirtualInterface" : {
      "documentation" : "<p>Provisions a public virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a public virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPublicVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>",
      "operationName" : "AllocatePublicVirtualInterface",
      "deprecated" : false,
      "input" : {
        "variableName" : "allocatePublicVirtualInterfaceRequest",
        "variableType" : "AllocatePublicVirtualInterfaceRequest",
        "variableDeclarationType" : "AllocatePublicVirtualInterfaceRequest",
        "documentation" : "<p>Container for the parameters to the AllocatePublicVirtualInterface operation.</p>",
        "simpleType" : "AllocatePublicVirtualInterfaceRequest",
        "variableSetterType" : "AllocatePublicVirtualInterfaceRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "AllocatePublicVirtualInterfaceResult",
        "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Provisions a public virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a public virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPublicVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>\n@param allocatePublicVirtualInterfaceRequest Container for the parameters to the AllocatePublicVirtualInterface operation.\n@return Result of the AllocatePublicVirtualInterface operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Provisions a public virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a public virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPublicVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>\n@param allocatePublicVirtualInterfaceRequest Container for the parameters to the AllocatePublicVirtualInterface operation.\n@return A Java Future containing the result of the AllocatePublicVirtualInterface operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Provisions a public virtual interface to be owned by a different customer.</p> <p>The owner of a connection calls this function to provision a public virtual interface which will be owned by another AWS customer.</p> <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPublicVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>\n@param allocatePublicVirtualInterfaceRequest Container for the parameters to the AllocatePublicVirtualInterface operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the AllocatePublicVirtualInterface operation returned by the service.*/",
      "syncReturnType" : "AllocatePublicVirtualInterfaceResult",
      "asyncReturnType" : "AllocatePublicVirtualInterfaceResult",
      "asyncFutureType" : "java.util.concurrent.Future<AllocatePublicVirtualInterfaceResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<AllocatePublicVirtualInterfaceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<AllocatePublicVirtualInterfaceRequest, AllocatePublicVirtualInterfaceResult>",
      "methodName" : "allocatePublicVirtualInterface"
    },
    "ConfirmConnection" : {
      "documentation" : "<p>Confirm the creation of a hosted connection on an interconnect.</p> <p>Upon creation, the hosted connection is initially in the 'Ordering' state, and will remain in this state until the owner calls ConfirmConnection to confirm creation of the hosted connection.</p>",
      "operationName" : "ConfirmConnection",
      "deprecated" : false,
      "input" : {
        "variableName" : "confirmConnectionRequest",
        "variableType" : "ConfirmConnectionRequest",
        "variableDeclarationType" : "ConfirmConnectionRequest",
        "documentation" : "<p>Container for the parameters to the ConfirmConnection operation.</p>",
        "simpleType" : "ConfirmConnectionRequest",
        "variableSetterType" : "ConfirmConnectionRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ConfirmConnectionResult",
        "documentation" : "<p>The response received when ConfirmConnection is called.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Confirm the creation of a hosted connection on an interconnect.</p> <p>Upon creation, the hosted connection is initially in the 'Ordering' state, and will remain in this state until the owner calls ConfirmConnection to confirm creation of the hosted connection.</p>\n@param confirmConnectionRequest Container for the parameters to the ConfirmConnection operation.\n@return Result of the ConfirmConnection operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Confirm the creation of a hosted connection on an interconnect.</p> <p>Upon creation, the hosted connection is initially in the 'Ordering' state, and will remain in this state until the owner calls ConfirmConnection to confirm creation of the hosted connection.</p>\n@param confirmConnectionRequest Container for the parameters to the ConfirmConnection operation.\n@return A Java Future containing the result of the ConfirmConnection operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Confirm the creation of a hosted connection on an interconnect.</p> <p>Upon creation, the hosted connection is initially in the 'Ordering' state, and will remain in this state until the owner calls ConfirmConnection to confirm creation of the hosted connection.</p>\n@param confirmConnectionRequest Container for the parameters to the ConfirmConnection operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ConfirmConnection operation returned by the service.*/",
      "syncReturnType" : "ConfirmConnectionResult",
      "asyncReturnType" : "ConfirmConnectionResult",
      "asyncFutureType" : "java.util.concurrent.Future<ConfirmConnectionResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ConfirmConnectionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ConfirmConnectionRequest, ConfirmConnectionResult>",
      "methodName" : "confirmConnection"
    },
    "ConfirmPrivateVirtualInterface" : {
      "documentation" : "<p>Accept ownership of a private virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the virtual interface will be created and attached to the given virtual private gateway, and will be available for handling traffic.</p>",
      "operationName" : "ConfirmPrivateVirtualInterface",
      "deprecated" : false,
      "input" : {
        "variableName" : "confirmPrivateVirtualInterfaceRequest",
        "variableType" : "ConfirmPrivateVirtualInterfaceRequest",
        "variableDeclarationType" : "ConfirmPrivateVirtualInterfaceRequest",
        "documentation" : "<p>Container for the parameters to the ConfirmPrivateVirtualInterface operation.</p>",
        "simpleType" : "ConfirmPrivateVirtualInterfaceRequest",
        "variableSetterType" : "ConfirmPrivateVirtualInterfaceRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ConfirmPrivateVirtualInterfaceResult",
        "documentation" : "<p>The response received when ConfirmPrivateVirtualInterface is called.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Accept ownership of a private virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the virtual interface will be created and attached to the given virtual private gateway, and will be available for handling traffic.</p>\n@param confirmPrivateVirtualInterfaceRequest Container for the parameters to the ConfirmPrivateVirtualInterface operation.\n@return Result of the ConfirmPrivateVirtualInterface operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Accept ownership of a private virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the virtual interface will be created and attached to the given virtual private gateway, and will be available for handling traffic.</p>\n@param confirmPrivateVirtualInterfaceRequest Container for the parameters to the ConfirmPrivateVirtualInterface operation.\n@return A Java Future containing the result of the ConfirmPrivateVirtualInterface operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Accept ownership of a private virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the virtual interface will be created and attached to the given virtual private gateway, and will be available for handling traffic.</p>\n@param confirmPrivateVirtualInterfaceRequest Container for the parameters to the ConfirmPrivateVirtualInterface operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ConfirmPrivateVirtualInterface operation returned by the service.*/",
      "syncReturnType" : "ConfirmPrivateVirtualInterfaceResult",
      "asyncReturnType" : "ConfirmPrivateVirtualInterfaceResult",
      "asyncFutureType" : "java.util.concurrent.Future<ConfirmPrivateVirtualInterfaceResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ConfirmPrivateVirtualInterfaceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ConfirmPrivateVirtualInterfaceRequest, ConfirmPrivateVirtualInterfaceResult>",
      "methodName" : "confirmPrivateVirtualInterface"
    },
    "ConfirmPublicVirtualInterface" : {
      "documentation" : "<p>Accept ownership of a public virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the specified virtual interface will be created and made available for handling traffic.</p>",
      "operationName" : "ConfirmPublicVirtualInterface",
      "deprecated" : false,
      "input" : {
        "variableName" : "confirmPublicVirtualInterfaceRequest",
        "variableType" : "ConfirmPublicVirtualInterfaceRequest",
        "variableDeclarationType" : "ConfirmPublicVirtualInterfaceRequest",
        "documentation" : "<p>Container for the parameters to the ConfirmPublicVirtualInterface operation.</p>",
        "simpleType" : "ConfirmPublicVirtualInterfaceRequest",
        "variableSetterType" : "ConfirmPublicVirtualInterfaceRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ConfirmPublicVirtualInterfaceResult",
        "documentation" : "<p>The response received when ConfirmPublicVirtualInterface is called.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Accept ownership of a public virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the specified virtual interface will be created and made available for handling traffic.</p>\n@param confirmPublicVirtualInterfaceRequest Container for the parameters to the ConfirmPublicVirtualInterface operation.\n@return Result of the ConfirmPublicVirtualInterface operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Accept ownership of a public virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the specified virtual interface will be created and made available for handling traffic.</p>\n@param confirmPublicVirtualInterfaceRequest Container for the parameters to the ConfirmPublicVirtualInterface operation.\n@return A Java Future containing the result of the ConfirmPublicVirtualInterface operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Accept ownership of a public virtual interface created by another customer.</p> <p>After the virtual interface owner calls this function, the specified virtual interface will be created and made available for handling traffic.</p>\n@param confirmPublicVirtualInterfaceRequest Container for the parameters to the ConfirmPublicVirtualInterface operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ConfirmPublicVirtualInterface operation returned by the service.*/",
      "syncReturnType" : "ConfirmPublicVirtualInterfaceResult",
      "asyncReturnType" : "ConfirmPublicVirtualInterfaceResult",
      "asyncFutureType" : "java.util.concurrent.Future<ConfirmPublicVirtualInterfaceResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ConfirmPublicVirtualInterfaceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ConfirmPublicVirtualInterfaceRequest, ConfirmPublicVirtualInterfaceResult>",
      "methodName" : "confirmPublicVirtualInterface"
    },
    "CreateConnection" : {
      "documentation" : "<p>Creates a new connection between the customer network and a specific AWS Direct Connect location.</p> <p>A connection links your internal network to an AWS Direct Connect location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. An AWS Direct Connect location provides access to Amazon Web Services in the region it is associated with. You can establish connections with AWS Direct Connect locations in multiple regions, but a connection in one region does not provide connectivity to other regions.</p>",
      "operationName" : "CreateConnection",
      "deprecated" : false,
      "input" : {
        "variableName" : "createConnectionRequest",
        "variableType" : "CreateConnectionRequest",
        "variableDeclarationType" : "CreateConnectionRequest",
        "documentation" : "<p>Container for the parameters to the CreateConnection operation.</p>",
        "simpleType" : "CreateConnectionRequest",
        "variableSetterType" : "CreateConnectionRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreateConnectionResult",
        "documentation" : "<p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a new connection between the customer network and a specific AWS Direct Connect location.</p> <p>A connection links your internal network to an AWS Direct Connect location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. An AWS Direct Connect location provides access to Amazon Web Services in the region it is associated with. You can establish connections with AWS Direct Connect locations in multiple regions, but a connection in one region does not provide connectivity to other regions.</p>\n@param createConnectionRequest Container for the parameters to the CreateConnection operation.\n@return Result of the CreateConnection operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Creates a new connection between the customer network and a specific AWS Direct Connect location.</p> <p>A connection links your internal network to an AWS Direct Connect location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. An AWS Direct Connect location provides access to Amazon Web Services in the region it is associated with. You can establish connections with AWS Direct Connect locations in multiple regions, but a connection in one region does not provide connectivity to other regions.</p>\n@param createConnectionRequest Container for the parameters to the CreateConnection operation.\n@return A Java Future containing the result of the CreateConnection operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a new connection between the customer network and a specific AWS Direct Connect location.</p> <p>A connection links your internal network to an AWS Direct Connect location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. An AWS Direct Connect location provides access to Amazon Web Services in the region it is associated with. You can establish connections with AWS Direct Connect locations in multiple regions, but a connection in one region does not provide connectivity to other regions.</p>\n@param createConnectionRequest Container for the parameters to the CreateConnection operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreateConnection operation returned by the service.*/",
      "syncReturnType" : "CreateConnectionResult",
      "asyncReturnType" : "CreateConnectionResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreateConnectionResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreateConnectionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateConnectionRequest, CreateConnectionResult>",
      "methodName" : "createConnection"
    },
    "CreateInterconnect" : {
      "documentation" : "<p>Creates a new interconnect between a AWS Direct Connect partner's network and a specific AWS Direct Connect location.</p> <p>An interconnect is a connection which is capable of hosting other connections. The AWS Direct Connect partner can use an interconnect to provide sub-1Gbps AWS Direct Connect service to tier 2 customers who do not have their own connections. Like a standard connection, an interconnect links the AWS Direct Connect partner's network to an AWS Direct Connect location over a standard 1 Gbps or 10 Gbps Ethernet fiber-optic cable. One end is connected to the partner's router, the other to an AWS Direct Connect router.</p> <p>For each end customer, the AWS Direct Connect partner provisions a connection on their interconnect by calling AllocateConnectionOnInterconnect. The end customer can then connect to AWS resources by creating a virtual interface on their connection, using the VLAN assigned to them by the AWS Direct Connect partner.</p>",
      "operationName" : "CreateInterconnect",
      "deprecated" : false,
      "input" : {
        "variableName" : "createInterconnectRequest",
        "variableType" : "CreateInterconnectRequest",
        "variableDeclarationType" : "CreateInterconnectRequest",
        "documentation" : "<p>Container for the parameters to the CreateInterconnect operation.</p>",
        "simpleType" : "CreateInterconnectRequest",
        "variableSetterType" : "CreateInterconnectRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreateInterconnectResult",
        "documentation" : "<p>An interconnect is a connection that can host other connections.</p> <p>Like a standard AWS Direct Connect connection, an interconnect represents the physical connection between an AWS Direct Connect partner's network and a specific Direct Connect location. An AWS Direct Connect partner who owns an interconnect can provision hosted connections on the interconnect for their end customers, thereby providing the end customers with connectivity to AWS services.</p> <p>The resources of the interconnect, including bandwidth and VLAN numbers, are shared by all of the hosted connections on the interconnect, and the owner of the interconnect determines how these resources are assigned.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a new interconnect between a AWS Direct Connect partner's network and a specific AWS Direct Connect location.</p> <p>An interconnect is a connection which is capable of hosting other connections. The AWS Direct Connect partner can use an interconnect to provide sub-1Gbps AWS Direct Connect service to tier 2 customers who do not have their own connections. Like a standard connection, an interconnect links the AWS Direct Connect partner's network to an AWS Direct Connect location over a standard 1 Gbps or 10 Gbps Ethernet fiber-optic cable. One end is connected to the partner's router, the other to an AWS Direct Connect router.</p> <p>For each end customer, the AWS Direct Connect partner provisions a connection on their interconnect by calling AllocateConnectionOnInterconnect. The end customer can then connect to AWS resources by creating a virtual interface on their connection, using the VLAN assigned to them by the AWS Direct Connect partner.</p>\n@param createInterconnectRequest Container for the parameters to the CreateInterconnect operation.\n@return Result of the CreateInterconnect operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Creates a new interconnect between a AWS Direct Connect partner's network and a specific AWS Direct Connect location.</p> <p>An interconnect is a connection which is capable of hosting other connections. The AWS Direct Connect partner can use an interconnect to provide sub-1Gbps AWS Direct Connect service to tier 2 customers who do not have their own connections. Like a standard connection, an interconnect links the AWS Direct Connect partner's network to an AWS Direct Connect location over a standard 1 Gbps or 10 Gbps Ethernet fiber-optic cable. One end is connected to the partner's router, the other to an AWS Direct Connect router.</p> <p>For each end customer, the AWS Direct Connect partner provisions a connection on their interconnect by calling AllocateConnectionOnInterconnect. The end customer can then connect to AWS resources by creating a virtual interface on their connection, using the VLAN assigned to them by the AWS Direct Connect partner.</p>\n@param createInterconnectRequest Container for the parameters to the CreateInterconnect operation.\n@return A Java Future containing the result of the CreateInterconnect operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a new interconnect between a AWS Direct Connect partner's network and a specific AWS Direct Connect location.</p> <p>An interconnect is a connection which is capable of hosting other connections. The AWS Direct Connect partner can use an interconnect to provide sub-1Gbps AWS Direct Connect service to tier 2 customers who do not have their own connections. Like a standard connection, an interconnect links the AWS Direct Connect partner's network to an AWS Direct Connect location over a standard 1 Gbps or 10 Gbps Ethernet fiber-optic cable. One end is connected to the partner's router, the other to an AWS Direct Connect router.</p> <p>For each end customer, the AWS Direct Connect partner provisions a connection on their interconnect by calling AllocateConnectionOnInterconnect. The end customer can then connect to AWS resources by creating a virtual interface on their connection, using the VLAN assigned to them by the AWS Direct Connect partner.</p>\n@param createInterconnectRequest Container for the parameters to the CreateInterconnect operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreateInterconnect operation returned by the service.*/",
      "syncReturnType" : "CreateInterconnectResult",
      "asyncReturnType" : "CreateInterconnectResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreateInterconnectResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreateInterconnectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreateInterconnectRequest, CreateInterconnectResult>",
      "methodName" : "createInterconnect"
    },
    "CreatePrivateVirtualInterface" : {
      "documentation" : "<p>Creates a new private virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A private virtual interface supports sending traffic to a single virtual private cloud (VPC).</p>",
      "operationName" : "CreatePrivateVirtualInterface",
      "deprecated" : false,
      "input" : {
        "variableName" : "createPrivateVirtualInterfaceRequest",
        "variableType" : "CreatePrivateVirtualInterfaceRequest",
        "variableDeclarationType" : "CreatePrivateVirtualInterfaceRequest",
        "documentation" : "<p>Container for the parameters to the CreatePrivateVirtualInterface operation.</p>",
        "simpleType" : "CreatePrivateVirtualInterfaceRequest",
        "variableSetterType" : "CreatePrivateVirtualInterfaceRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreatePrivateVirtualInterfaceResult",
        "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a new private virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A private virtual interface supports sending traffic to a single virtual private cloud (VPC).</p>\n@param createPrivateVirtualInterfaceRequest Container for the parameters to the CreatePrivateVirtualInterface operation.\n@return Result of the CreatePrivateVirtualInterface operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Creates a new private virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A private virtual interface supports sending traffic to a single virtual private cloud (VPC).</p>\n@param createPrivateVirtualInterfaceRequest Container for the parameters to the CreatePrivateVirtualInterface operation.\n@return A Java Future containing the result of the CreatePrivateVirtualInterface operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a new private virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A private virtual interface supports sending traffic to a single virtual private cloud (VPC).</p>\n@param createPrivateVirtualInterfaceRequest Container for the parameters to the CreatePrivateVirtualInterface operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreatePrivateVirtualInterface operation returned by the service.*/",
      "syncReturnType" : "CreatePrivateVirtualInterfaceResult",
      "asyncReturnType" : "CreatePrivateVirtualInterfaceResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreatePrivateVirtualInterfaceResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreatePrivateVirtualInterfaceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreatePrivateVirtualInterfaceRequest, CreatePrivateVirtualInterfaceResult>",
      "methodName" : "createPrivateVirtualInterface"
    },
    "CreatePublicVirtualInterface" : {
      "documentation" : "<p>Creates a new public virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A public virtual interface supports sending traffic to public services of AWS such as Amazon Simple Storage Service (Amazon S3).</p>",
      "operationName" : "CreatePublicVirtualInterface",
      "deprecated" : false,
      "input" : {
        "variableName" : "createPublicVirtualInterfaceRequest",
        "variableType" : "CreatePublicVirtualInterfaceRequest",
        "variableDeclarationType" : "CreatePublicVirtualInterfaceRequest",
        "documentation" : "<p>Container for the parameters to the CreatePublicVirtualInterface operation.</p>",
        "simpleType" : "CreatePublicVirtualInterfaceRequest",
        "variableSetterType" : "CreatePublicVirtualInterfaceRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "CreatePublicVirtualInterfaceResult",
        "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Creates a new public virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A public virtual interface supports sending traffic to public services of AWS such as Amazon Simple Storage Service (Amazon S3).</p>\n@param createPublicVirtualInterfaceRequest Container for the parameters to the CreatePublicVirtualInterface operation.\n@return Result of the CreatePublicVirtualInterface operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Creates a new public virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A public virtual interface supports sending traffic to public services of AWS such as Amazon Simple Storage Service (Amazon S3).</p>\n@param createPublicVirtualInterfaceRequest Container for the parameters to the CreatePublicVirtualInterface operation.\n@return A Java Future containing the result of the CreatePublicVirtualInterface operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Creates a new public virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A public virtual interface supports sending traffic to public services of AWS such as Amazon Simple Storage Service (Amazon S3).</p>\n@param createPublicVirtualInterfaceRequest Container for the parameters to the CreatePublicVirtualInterface operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the CreatePublicVirtualInterface operation returned by the service.*/",
      "syncReturnType" : "CreatePublicVirtualInterfaceResult",
      "asyncReturnType" : "CreatePublicVirtualInterfaceResult",
      "asyncFutureType" : "java.util.concurrent.Future<CreatePublicVirtualInterfaceResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<CreatePublicVirtualInterfaceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<CreatePublicVirtualInterfaceRequest, CreatePublicVirtualInterfaceResult>",
      "methodName" : "createPublicVirtualInterface"
    },
    "DeleteConnection" : {
      "documentation" : "<p>Deletes the connection.</p> <p>Deleting a connection only stops the AWS Direct Connect port hour and data transfer charges. You need to cancel separately with the providers any services or charges for cross-connects or network circuits that connect you to the AWS Direct Connect location.</p>",
      "operationName" : "DeleteConnection",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteConnectionRequest",
        "variableType" : "DeleteConnectionRequest",
        "variableDeclarationType" : "DeleteConnectionRequest",
        "documentation" : "<p>Container for the parameters to the DeleteConnection operation.</p>",
        "simpleType" : "DeleteConnectionRequest",
        "variableSetterType" : "DeleteConnectionRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteConnectionResult",
        "documentation" : "<p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes the connection.</p> <p>Deleting a connection only stops the AWS Direct Connect port hour and data transfer charges. You need to cancel separately with the providers any services or charges for cross-connects or network circuits that connect you to the AWS Direct Connect location.</p>\n@param deleteConnectionRequest Container for the parameters to the DeleteConnection operation.\n@return Result of the DeleteConnection operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Deletes the connection.</p> <p>Deleting a connection only stops the AWS Direct Connect port hour and data transfer charges. You need to cancel separately with the providers any services or charges for cross-connects or network circuits that connect you to the AWS Direct Connect location.</p>\n@param deleteConnectionRequest Container for the parameters to the DeleteConnection operation.\n@return A Java Future containing the result of the DeleteConnection operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes the connection.</p> <p>Deleting a connection only stops the AWS Direct Connect port hour and data transfer charges. You need to cancel separately with the providers any services or charges for cross-connects or network circuits that connect you to the AWS Direct Connect location.</p>\n@param deleteConnectionRequest Container for the parameters to the DeleteConnection operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DeleteConnection operation returned by the service.*/",
      "syncReturnType" : "DeleteConnectionResult",
      "asyncReturnType" : "DeleteConnectionResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteConnectionResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteConnectionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteConnectionRequest, DeleteConnectionResult>",
      "methodName" : "deleteConnection"
    },
    "DeleteInterconnect" : {
      "documentation" : "<p>Deletes the specified interconnect.</p>",
      "operationName" : "DeleteInterconnect",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteInterconnectRequest",
        "variableType" : "DeleteInterconnectRequest",
        "variableDeclarationType" : "DeleteInterconnectRequest",
        "documentation" : "<p>Container for the parameters to the DeleteInterconnect operation.</p>",
        "simpleType" : "DeleteInterconnectRequest",
        "variableSetterType" : "DeleteInterconnectRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteInterconnectResult",
        "documentation" : "<p>The response received when DeleteInterconnect is called.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes the specified interconnect.</p>\n@param deleteInterconnectRequest Container for the parameters to the DeleteInterconnect operation.\n@return Result of the DeleteInterconnect operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Deletes the specified interconnect.</p>\n@param deleteInterconnectRequest Container for the parameters to the DeleteInterconnect operation.\n@return A Java Future containing the result of the DeleteInterconnect operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes the specified interconnect.</p>\n@param deleteInterconnectRequest Container for the parameters to the DeleteInterconnect operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DeleteInterconnect operation returned by the service.*/",
      "syncReturnType" : "DeleteInterconnectResult",
      "asyncReturnType" : "DeleteInterconnectResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteInterconnectResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteInterconnectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteInterconnectRequest, DeleteInterconnectResult>",
      "methodName" : "deleteInterconnect"
    },
    "DeleteVirtualInterface" : {
      "documentation" : "<p>Deletes a virtual interface.</p>",
      "operationName" : "DeleteVirtualInterface",
      "deprecated" : false,
      "input" : {
        "variableName" : "deleteVirtualInterfaceRequest",
        "variableType" : "DeleteVirtualInterfaceRequest",
        "variableDeclarationType" : "DeleteVirtualInterfaceRequest",
        "documentation" : "<p>Container for the parameters to the DeleteVirtualInterface operation.</p>",
        "simpleType" : "DeleteVirtualInterfaceRequest",
        "variableSetterType" : "DeleteVirtualInterfaceRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DeleteVirtualInterfaceResult",
        "documentation" : "<p>The response received when DeleteVirtualInterface is called.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Deletes a virtual interface.</p>\n@param deleteVirtualInterfaceRequest Container for the parameters to the DeleteVirtualInterface operation.\n@return Result of the DeleteVirtualInterface operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Deletes a virtual interface.</p>\n@param deleteVirtualInterfaceRequest Container for the parameters to the DeleteVirtualInterface operation.\n@return A Java Future containing the result of the DeleteVirtualInterface operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Deletes a virtual interface.</p>\n@param deleteVirtualInterfaceRequest Container for the parameters to the DeleteVirtualInterface operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DeleteVirtualInterface operation returned by the service.*/",
      "syncReturnType" : "DeleteVirtualInterfaceResult",
      "asyncReturnType" : "DeleteVirtualInterfaceResult",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteVirtualInterfaceResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteVirtualInterfaceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteVirtualInterfaceRequest, DeleteVirtualInterfaceResult>",
      "methodName" : "deleteVirtualInterface"
    },
    "DescribeConnections" : {
      "documentation" : "<p>Displays all connections in this region.</p> <p>If a connection ID is provided, the call returns only that particular connection.</p>",
      "operationName" : "DescribeConnections",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeConnectionsRequest",
        "variableType" : "DescribeConnectionsRequest",
        "variableDeclarationType" : "DescribeConnectionsRequest",
        "documentation" : "<p>Container for the parameters to the DescribeConnections operation.</p>",
        "simpleType" : "DescribeConnectionsRequest",
        "variableSetterType" : "DescribeConnectionsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeConnectionsResult",
        "documentation" : "<p>A structure containing a list of connections.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Displays all connections in this region.</p> <p>If a connection ID is provided, the call returns only that particular connection.</p>\n@param describeConnectionsRequest Container for the parameters to the DescribeConnections operation.\n@return Result of the DescribeConnections operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Displays all connections in this region.</p> <p>If a connection ID is provided, the call returns only that particular connection.</p>\n@param describeConnectionsRequest Container for the parameters to the DescribeConnections operation.\n@return A Java Future containing the result of the DescribeConnections operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Displays all connections in this region.</p> <p>If a connection ID is provided, the call returns only that particular connection.</p>\n@param describeConnectionsRequest Container for the parameters to the DescribeConnections operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeConnections operation returned by the service.*/",
      "syncReturnType" : "DescribeConnectionsResult",
      "asyncReturnType" : "DescribeConnectionsResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeConnectionsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeConnectionsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeConnectionsRequest, DescribeConnectionsResult>",
      "methodName" : "describeConnections"
    },
    "DescribeConnectionsOnInterconnect" : {
      "documentation" : "<p>Return a list of connections that have been provisioned on the given interconnect.</p>",
      "operationName" : "DescribeConnectionsOnInterconnect",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeConnectionsOnInterconnectRequest",
        "variableType" : "DescribeConnectionsOnInterconnectRequest",
        "variableDeclarationType" : "DescribeConnectionsOnInterconnectRequest",
        "documentation" : "<p>Container for the parameters to the DescribeConnectionsOnInterconnect operation.</p>",
        "simpleType" : "DescribeConnectionsOnInterconnectRequest",
        "variableSetterType" : "DescribeConnectionsOnInterconnectRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeConnectionsOnInterconnectResult",
        "documentation" : "<p>A structure containing a list of connections.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Return a list of connections that have been provisioned on the given interconnect.</p>\n@param describeConnectionsOnInterconnectRequest Container for the parameters to the DescribeConnectionsOnInterconnect operation.\n@return Result of the DescribeConnectionsOnInterconnect operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Return a list of connections that have been provisioned on the given interconnect.</p>\n@param describeConnectionsOnInterconnectRequest Container for the parameters to the DescribeConnectionsOnInterconnect operation.\n@return A Java Future containing the result of the DescribeConnectionsOnInterconnect operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Return a list of connections that have been provisioned on the given interconnect.</p>\n@param describeConnectionsOnInterconnectRequest Container for the parameters to the DescribeConnectionsOnInterconnect operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeConnectionsOnInterconnect operation returned by the service.*/",
      "syncReturnType" : "DescribeConnectionsOnInterconnectResult",
      "asyncReturnType" : "DescribeConnectionsOnInterconnectResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeConnectionsOnInterconnectResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeConnectionsOnInterconnectResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeConnectionsOnInterconnectRequest, DescribeConnectionsOnInterconnectResult>",
      "methodName" : "describeConnectionsOnInterconnect"
    },
    "DescribeInterconnects" : {
      "documentation" : "<p>Returns a list of interconnects owned by the AWS account.</p> <p>If an interconnect ID is provided, it will only return this particular interconnect.</p>",
      "operationName" : "DescribeInterconnects",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeInterconnectsRequest",
        "variableType" : "DescribeInterconnectsRequest",
        "variableDeclarationType" : "DescribeInterconnectsRequest",
        "documentation" : "<p>Container for the parameters to the DescribeInterconnects operation.</p>",
        "simpleType" : "DescribeInterconnectsRequest",
        "variableSetterType" : "DescribeInterconnectsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeInterconnectsResult",
        "documentation" : "<p>A structure containing a list of interconnects.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Returns a list of interconnects owned by the AWS account.</p> <p>If an interconnect ID is provided, it will only return this particular interconnect.</p>\n@param describeInterconnectsRequest Container for the parameters to the DescribeInterconnects operation.\n@return Result of the DescribeInterconnects operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Returns a list of interconnects owned by the AWS account.</p> <p>If an interconnect ID is provided, it will only return this particular interconnect.</p>\n@param describeInterconnectsRequest Container for the parameters to the DescribeInterconnects operation.\n@return A Java Future containing the result of the DescribeInterconnects operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Returns a list of interconnects owned by the AWS account.</p> <p>If an interconnect ID is provided, it will only return this particular interconnect.</p>\n@param describeInterconnectsRequest Container for the parameters to the DescribeInterconnects operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeInterconnects operation returned by the service.*/",
      "syncReturnType" : "DescribeInterconnectsResult",
      "asyncReturnType" : "DescribeInterconnectsResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeInterconnectsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeInterconnectsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeInterconnectsRequest, DescribeInterconnectsResult>",
      "methodName" : "describeInterconnects"
    },
    "DescribeLocations" : {
      "documentation" : "<p>Returns the list of AWS Direct Connect locations in the current AWS region. These are the locations that may be selected when calling CreateConnection or CreateInterconnect.</p>",
      "operationName" : "DescribeLocations",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeLocationsRequest",
        "variableType" : "DescribeLocationsRequest",
        "variableDeclarationType" : "DescribeLocationsRequest",
        "documentation" : null,
        "simpleType" : "DescribeLocationsRequest",
        "variableSetterType" : "DescribeLocationsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeLocationsResult",
        "documentation" : null
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Returns the list of AWS Direct Connect locations in the current AWS region. These are the locations that may be selected when calling CreateConnection or CreateInterconnect.</p>\n@param describeLocationsRequest \n@return Result of the DescribeLocations operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Returns the list of AWS Direct Connect locations in the current AWS region. These are the locations that may be selected when calling CreateConnection or CreateInterconnect.</p>\n@param describeLocationsRequest \n@return A Java Future containing the result of the DescribeLocations operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Returns the list of AWS Direct Connect locations in the current AWS region. These are the locations that may be selected when calling CreateConnection or CreateInterconnect.</p>\n@param describeLocationsRequest \n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeLocations operation returned by the service.*/",
      "syncReturnType" : "DescribeLocationsResult",
      "asyncReturnType" : "DescribeLocationsResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeLocationsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeLocationsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeLocationsRequest, DescribeLocationsResult>",
      "methodName" : "describeLocations"
    },
    "DescribeVirtualGateways" : {
      "documentation" : "<p>Returns a list of virtual private gateways owned by the AWS account.</p> <p>You can create one or more AWS Direct Connect private virtual interfaces linking to a virtual private gateway. A virtual private gateway can be managed via Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p>",
      "operationName" : "DescribeVirtualGateways",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeVirtualGatewaysRequest",
        "variableType" : "DescribeVirtualGatewaysRequest",
        "variableDeclarationType" : "DescribeVirtualGatewaysRequest",
        "documentation" : null,
        "simpleType" : "DescribeVirtualGatewaysRequest",
        "variableSetterType" : "DescribeVirtualGatewaysRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeVirtualGatewaysResult",
        "documentation" : "<p>A structure containing a list of virtual private gateways.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Returns a list of virtual private gateways owned by the AWS account.</p> <p>You can create one or more AWS Direct Connect private virtual interfaces linking to a virtual private gateway. A virtual private gateway can be managed via Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p>\n@param describeVirtualGatewaysRequest \n@return Result of the DescribeVirtualGateways operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Returns a list of virtual private gateways owned by the AWS account.</p> <p>You can create one or more AWS Direct Connect private virtual interfaces linking to a virtual private gateway. A virtual private gateway can be managed via Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p>\n@param describeVirtualGatewaysRequest \n@return A Java Future containing the result of the DescribeVirtualGateways operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Returns a list of virtual private gateways owned by the AWS account.</p> <p>You can create one or more AWS Direct Connect private virtual interfaces linking to a virtual private gateway. A virtual private gateway can be managed via Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p>\n@param describeVirtualGatewaysRequest \n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeVirtualGateways operation returned by the service.*/",
      "syncReturnType" : "DescribeVirtualGatewaysResult",
      "asyncReturnType" : "DescribeVirtualGatewaysResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeVirtualGatewaysResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeVirtualGatewaysResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeVirtualGatewaysRequest, DescribeVirtualGatewaysResult>",
      "methodName" : "describeVirtualGateways"
    },
    "DescribeVirtualInterfaces" : {
      "documentation" : "<p>Displays all virtual interfaces for an AWS account. Virtual interfaces deleted fewer than 15 minutes before DescribeVirtualInterfaces is called are also returned. If a connection ID is included then only virtual interfaces associated with this connection will be returned. If a virtual interface ID is included then only a single virtual interface will be returned.</p> <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p> <p>If a connection ID is provided, only virtual interfaces provisioned on the specified connection will be returned. If a virtual interface ID is provided, only this particular virtual interface will be returned.</p>",
      "operationName" : "DescribeVirtualInterfaces",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeVirtualInterfacesRequest",
        "variableType" : "DescribeVirtualInterfacesRequest",
        "variableDeclarationType" : "DescribeVirtualInterfacesRequest",
        "documentation" : "<p>Container for the parameters to the DescribeVirtualInterfaces operation.</p>",
        "simpleType" : "DescribeVirtualInterfacesRequest",
        "variableSetterType" : "DescribeVirtualInterfacesRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeVirtualInterfacesResult",
        "documentation" : "<p>A structure containing a list of virtual interfaces.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "DirectConnectServerException",
        "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>"
      }, {
        "exceptionName" : "DirectConnectClientException",
        "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "syncDocumentation" : "/**<p>Displays all virtual interfaces for an AWS account. Virtual interfaces deleted fewer than 15 minutes before DescribeVirtualInterfaces is called are also returned. If a connection ID is included then only virtual interfaces associated with this connection will be returned. If a virtual interface ID is included then only a single virtual interface will be returned.</p> <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p> <p>If a connection ID is provided, only virtual interfaces provisioned on the specified connection will be returned. If a virtual interface ID is provided, only this particular virtual interface will be returned.</p>\n@param describeVirtualInterfacesRequest Container for the parameters to the DescribeVirtualInterfaces operation.\n@return Result of the DescribeVirtualInterfaces operation returned by the service.\n@throws DirectConnectServerException A server-side error occurred during the API call. The error message will contain additional details about the cause.\n@throws DirectConnectClientException The API was called with invalid parameters. The error message will contain additional details about the cause.*/",
      "asyncDocumentation" : "/**<p>Displays all virtual interfaces for an AWS account. Virtual interfaces deleted fewer than 15 minutes before DescribeVirtualInterfaces is called are also returned. If a connection ID is included then only virtual interfaces associated with this connection will be returned. If a virtual interface ID is included then only a single virtual interface will be returned.</p> <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p> <p>If a connection ID is provided, only virtual interfaces provisioned on the specified connection will be returned. If a virtual interface ID is provided, only this particular virtual interface will be returned.</p>\n@param describeVirtualInterfacesRequest Container for the parameters to the DescribeVirtualInterfaces operation.\n@return A Java Future containing the result of the DescribeVirtualInterfaces operation returned by the service.*/",
      "asyncDocumentationWithHandler" : "/**<p>Displays all virtual interfaces for an AWS account. Virtual interfaces deleted fewer than 15 minutes before DescribeVirtualInterfaces is called are also returned. If a connection ID is included then only virtual interfaces associated with this connection will be returned. If a virtual interface ID is included then only a single virtual interface will be returned.</p> <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p> <p>If a connection ID is provided, only virtual interfaces provisioned on the specified connection will be returned. If a virtual interface ID is provided, only this particular virtual interface will be returned.</p>\n@param describeVirtualInterfacesRequest Container for the parameters to the DescribeVirtualInterfaces operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeVirtualInterfaces operation returned by the service.*/",
      "syncReturnType" : "DescribeVirtualInterfacesResult",
      "asyncReturnType" : "DescribeVirtualInterfacesResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeVirtualInterfacesResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeVirtualInterfacesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeVirtualInterfacesRequest, DescribeVirtualInterfacesResult>",
      "methodName" : "describeVirtualInterfaces"
    }
  },
  "shapes" : {
    "ConfirmPrivateVirtualInterfaceResult" : {
      "c2jName" : "ConfirmPrivateVirtualInterfaceResponse",
      "documentation" : "<p>The response received when ConfirmPrivateVirtualInterface is called.</p>",
      "shapeName" : "ConfirmPrivateVirtualInterfaceResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceState",
        "c2jName" : "virtualInterfaceState",
        "c2jShape" : "VirtualInterfaceState",
        "variable" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceState",
          "marshallLocationName" : "virtualInterfaceState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "VirtualInterfaceState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
        "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "confirmPrivateVirtualInterfaceResult",
        "variableType" : "ConfirmPrivateVirtualInterfaceResult",
        "variableDeclarationType" : "ConfirmPrivateVirtualInterfaceResult",
        "documentation" : null,
        "simpleType" : "ConfirmPrivateVirtualInterfaceResult",
        "variableSetterType" : "ConfirmPrivateVirtualInterfaceResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceState" : {
          "documentation" : "",
          "name" : "VirtualInterfaceState",
          "c2jName" : "virtualInterfaceState",
          "c2jShape" : "VirtualInterfaceState",
          "variable" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceState",
            "marshallLocationName" : "virtualInterfaceState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "VirtualInterfaceState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
          "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
        }
      }
    },
    "ConfirmPublicVirtualInterfaceResult" : {
      "c2jName" : "ConfirmPublicVirtualInterfaceResponse",
      "documentation" : "<p>The response received when ConfirmPublicVirtualInterface is called.</p>",
      "shapeName" : "ConfirmPublicVirtualInterfaceResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceState",
        "c2jName" : "virtualInterfaceState",
        "c2jShape" : "VirtualInterfaceState",
        "variable" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceState",
          "marshallLocationName" : "virtualInterfaceState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "VirtualInterfaceState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
        "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "confirmPublicVirtualInterfaceResult",
        "variableType" : "ConfirmPublicVirtualInterfaceResult",
        "variableDeclarationType" : "ConfirmPublicVirtualInterfaceResult",
        "documentation" : null,
        "simpleType" : "ConfirmPublicVirtualInterfaceResult",
        "variableSetterType" : "ConfirmPublicVirtualInterfaceResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceState" : {
          "documentation" : "",
          "name" : "VirtualInterfaceState",
          "c2jName" : "virtualInterfaceState",
          "c2jShape" : "VirtualInterfaceState",
          "variable" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceState",
            "marshallLocationName" : "virtualInterfaceState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "VirtualInterfaceState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
          "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
        }
      }
    },
    "VirtualInterface" : {
      "c2jName" : "VirtualInterface",
      "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "VirtualInterface",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceType",
        "c2jName" : "virtualInterfaceType",
        "c2jShape" : "VirtualInterfaceType",
        "variable" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceType",
          "marshallLocationName" : "virtualInterfaceType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceType */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceState",
        "c2jName" : "virtualInterfaceState",
        "c2jShape" : "VirtualInterfaceState",
        "variable" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceState",
          "marshallLocationName" : "virtualInterfaceState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "VirtualInterfaceState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
        "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
      }, {
        "documentation" : "<p>Information for generating the customer router configuration.</p>",
        "name" : "CustomerRouterConfig",
        "c2jName" : "customerRouterConfig",
        "c2jShape" : "RouterConfig",
        "variable" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerRouterConfig",
          "marshallLocationName" : "customerRouterConfig",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
        "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
        "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualGatewayId",
        "c2jName" : "virtualGatewayId",
        "c2jShape" : "VirtualGatewayId",
        "variable" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayId",
          "marshallLocationName" : "virtualGatewayId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualGatewayId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "RouteFilterPrefixes",
        "c2jName" : "routeFilterPrefixes",
        "c2jShape" : "RouteFilterPrefixList",
        "variable" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "setterModel" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<RouteFilterPrefix>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "routeFilterPrefixes",
          "marshallLocationName" : "routeFilterPrefixes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "RouteFilterPrefix",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RouteFilterPrefix",
            "variable" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "getterModel" : {
              "returnType" : "RouteFilterPrefix",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "RouteFilterPrefix",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<RouteFilterPrefix>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "virtualInterface",
        "variableType" : "VirtualInterface",
        "variableDeclarationType" : "VirtualInterface",
        "documentation" : null,
        "simpleType" : "VirtualInterface",
        "variableSetterType" : "VirtualInterface"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceState" : {
          "documentation" : "",
          "name" : "VirtualInterfaceState",
          "c2jName" : "virtualInterfaceState",
          "c2jShape" : "VirtualInterfaceState",
          "variable" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceState",
            "marshallLocationName" : "virtualInterfaceState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "VirtualInterfaceState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
          "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RouteFilterPrefixes" : {
          "documentation" : "",
          "name" : "RouteFilterPrefixes",
          "c2jName" : "routeFilterPrefixes",
          "c2jShape" : "RouteFilterPrefixList",
          "variable" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "setterModel" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<RouteFilterPrefix>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "routeFilterPrefixes",
            "marshallLocationName" : "routeFilterPrefixes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "RouteFilterPrefix",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RouteFilterPrefix",
              "variable" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "getterModel" : {
                "returnType" : "RouteFilterPrefix",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "RouteFilterPrefix",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<RouteFilterPrefix>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerRouterConfig" : {
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "name" : "CustomerRouterConfig",
          "c2jName" : "customerRouterConfig",
          "c2jShape" : "RouterConfig",
          "variable" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Information for generating the customer router configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerRouterConfig",
            "marshallLocationName" : "customerRouterConfig",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
          "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
          "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceType" : {
          "documentation" : "",
          "name" : "VirtualInterfaceType",
          "c2jName" : "virtualInterfaceType",
          "c2jShape" : "VirtualInterfaceType",
          "variable" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceType",
            "marshallLocationName" : "virtualInterfaceType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceType */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualGatewayId" : {
          "documentation" : "",
          "name" : "VirtualGatewayId",
          "c2jName" : "virtualGatewayId",
          "c2jShape" : "VirtualGatewayId",
          "variable" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayId",
            "marshallLocationName" : "virtualGatewayId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualGatewayId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AllocatePrivateVirtualInterfaceResult" : {
      "c2jName" : "VirtualInterface",
      "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "AllocatePrivateVirtualInterfaceResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceType",
        "c2jName" : "virtualInterfaceType",
        "c2jShape" : "VirtualInterfaceType",
        "variable" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceType",
          "marshallLocationName" : "virtualInterfaceType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceType */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceState",
        "c2jName" : "virtualInterfaceState",
        "c2jShape" : "VirtualInterfaceState",
        "variable" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceState",
          "marshallLocationName" : "virtualInterfaceState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "VirtualInterfaceState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
        "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
      }, {
        "documentation" : "<p>Information for generating the customer router configuration.</p>",
        "name" : "CustomerRouterConfig",
        "c2jName" : "customerRouterConfig",
        "c2jShape" : "RouterConfig",
        "variable" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerRouterConfig",
          "marshallLocationName" : "customerRouterConfig",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
        "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
        "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualGatewayId",
        "c2jName" : "virtualGatewayId",
        "c2jShape" : "VirtualGatewayId",
        "variable" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayId",
          "marshallLocationName" : "virtualGatewayId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualGatewayId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "RouteFilterPrefixes",
        "c2jName" : "routeFilterPrefixes",
        "c2jShape" : "RouteFilterPrefixList",
        "variable" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "setterModel" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<RouteFilterPrefix>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "routeFilterPrefixes",
          "marshallLocationName" : "routeFilterPrefixes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "RouteFilterPrefix",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RouteFilterPrefix",
            "variable" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "getterModel" : {
              "returnType" : "RouteFilterPrefix",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "RouteFilterPrefix",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<RouteFilterPrefix>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "allocatePrivateVirtualInterfaceResult",
        "variableType" : "AllocatePrivateVirtualInterfaceResult",
        "variableDeclarationType" : "AllocatePrivateVirtualInterfaceResult",
        "documentation" : null,
        "simpleType" : "AllocatePrivateVirtualInterfaceResult",
        "variableSetterType" : "AllocatePrivateVirtualInterfaceResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceState" : {
          "documentation" : "",
          "name" : "VirtualInterfaceState",
          "c2jName" : "virtualInterfaceState",
          "c2jShape" : "VirtualInterfaceState",
          "variable" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceState",
            "marshallLocationName" : "virtualInterfaceState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "VirtualInterfaceState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
          "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RouteFilterPrefixes" : {
          "documentation" : "",
          "name" : "RouteFilterPrefixes",
          "c2jName" : "routeFilterPrefixes",
          "c2jShape" : "RouteFilterPrefixList",
          "variable" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "setterModel" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<RouteFilterPrefix>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "routeFilterPrefixes",
            "marshallLocationName" : "routeFilterPrefixes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "RouteFilterPrefix",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RouteFilterPrefix",
              "variable" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "getterModel" : {
                "returnType" : "RouteFilterPrefix",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "RouteFilterPrefix",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<RouteFilterPrefix>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerRouterConfig" : {
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "name" : "CustomerRouterConfig",
          "c2jName" : "customerRouterConfig",
          "c2jShape" : "RouterConfig",
          "variable" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Information for generating the customer router configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerRouterConfig",
            "marshallLocationName" : "customerRouterConfig",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
          "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
          "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceType" : {
          "documentation" : "",
          "name" : "VirtualInterfaceType",
          "c2jName" : "virtualInterfaceType",
          "c2jShape" : "VirtualInterfaceType",
          "variable" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceType",
            "marshallLocationName" : "virtualInterfaceType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceType */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualGatewayId" : {
          "documentation" : "",
          "name" : "VirtualGatewayId",
          "c2jName" : "virtualGatewayId",
          "c2jShape" : "VirtualGatewayId",
          "variable" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayId",
            "marshallLocationName" : "virtualGatewayId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualGatewayId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DirectConnectClientException" : {
      "c2jName" : "DirectConnectClientException",
      "documentation" : "<p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>",
      "shapeName" : "DirectConnectClientException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "directConnectClientException",
        "variableType" : "DirectConnectClientException",
        "variableDeclarationType" : "DirectConnectClientException",
        "documentation" : null,
        "simpleType" : "DirectConnectClientException",
        "variableSetterType" : "DirectConnectClientException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "DirectConnectClientException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "RouteFilterPrefix" : {
      "c2jName" : "RouteFilterPrefix",
      "documentation" : "<p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>",
      "shapeName" : "RouteFilterPrefix",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>",
        "name" : "Cidr",
        "c2jName" : "cidr",
        "c2jShape" : "CIDR",
        "variable" : {
          "variableName" : "cidr",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "cidr",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "cidr",
          "marshallLocationName" : "cidr",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>\n@param cidr CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24*/",
        "getterDocumentation" : "/**<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>\n@return CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24*/",
        "fluentSetterDocumentation" : "/**<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>\n@param cidr CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>\n@param cidr CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "routeFilterPrefix",
        "variableType" : "RouteFilterPrefix",
        "variableDeclarationType" : "RouteFilterPrefix",
        "documentation" : null,
        "simpleType" : "RouteFilterPrefix",
        "variableSetterType" : "RouteFilterPrefix"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Cidr" : {
          "documentation" : "<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>",
          "name" : "Cidr",
          "c2jName" : "cidr",
          "c2jShape" : "CIDR",
          "variable" : {
            "variableName" : "cidr",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "cidr",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "cidr",
            "marshallLocationName" : "cidr",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>\n@param cidr CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24*/",
          "getterDocumentation" : "/**<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>\n@return CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24*/",
          "fluentSetterDocumentation" : "/**<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>\n@param cidr CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24</p>\n@param cidr CIDR notation for the advertised route. Multiple routes are separated by commas.</p> <p>Example: 10.10.10.0/24,10.10.11.0/24\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeLocationsResult" : {
      "c2jName" : "Locations",
      "documentation" : "",
      "shapeName" : "DescribeLocationsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "Locations",
        "c2jName" : "locations",
        "c2jShape" : "LocationList",
        "variable" : {
          "variableName" : "locations",
          "variableType" : "java.util.List<Location>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Location>",
          "documentation" : "",
          "simpleType" : "List<Location>",
          "variableSetterType" : "java.util.Collection<Location>"
        },
        "setterModel" : {
          "variableName" : "locations",
          "variableType" : "java.util.List<Location>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Location>",
          "documentation" : "",
          "simpleType" : "List<Location>",
          "variableSetterType" : "java.util.Collection<Location>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Location>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "locations",
          "marshallLocationName" : "locations",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Location",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Location",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Location",
              "variableDeclarationType" : "Location",
              "documentation" : "",
              "simpleType" : "Location",
              "variableSetterType" : "Location"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Location",
              "variableDeclarationType" : "Location",
              "documentation" : "",
              "simpleType" : "Location",
              "variableSetterType" : "Location"
            },
            "getterModel" : {
              "returnType" : "Location",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Location",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Location>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Location>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param locations */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param locations \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLocations(java.util.Collection)} or {@link #withLocations(java.util.Collection)} if you want to override the existing values.</p>\n@param locations \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeLocationsResult",
        "variableType" : "DescribeLocationsResult",
        "variableDeclarationType" : "DescribeLocationsResult",
        "documentation" : null,
        "simpleType" : "DescribeLocationsResult",
        "variableSetterType" : "DescribeLocationsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Locations" : {
          "documentation" : "",
          "name" : "Locations",
          "c2jName" : "locations",
          "c2jShape" : "LocationList",
          "variable" : {
            "variableName" : "locations",
            "variableType" : "java.util.List<Location>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Location>",
            "documentation" : "",
            "simpleType" : "List<Location>",
            "variableSetterType" : "java.util.Collection<Location>"
          },
          "setterModel" : {
            "variableName" : "locations",
            "variableType" : "java.util.List<Location>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Location>",
            "documentation" : "",
            "simpleType" : "List<Location>",
            "variableSetterType" : "java.util.Collection<Location>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Location>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "locations",
            "marshallLocationName" : "locations",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Location",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Location",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Location",
                "variableDeclarationType" : "Location",
                "documentation" : "",
                "simpleType" : "Location",
                "variableSetterType" : "Location"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Location",
                "variableDeclarationType" : "Location",
                "documentation" : "",
                "simpleType" : "Location",
                "variableSetterType" : "Location"
              },
              "getterModel" : {
                "returnType" : "Location",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Location",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Location>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Location>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param locations */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param locations \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setLocations(java.util.Collection)} or {@link #withLocations(java.util.Collection)} if you want to override the existing values.</p>\n@param locations \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ConnectionState" : {
      "c2jName" : "ConnectionState",
      "documentation" : "State of the connection. <ul> <li> <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</li> <li> <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</li> <li> <b>Pending</b>: The connection has been approved, and is being initialized.</li> <li> <b>Available</b>: The network link is up, and the connection is ready for use.</li> <li> <b>Down</b>: The network link is down.</li> <li> <b>Deleted</b>: The connection has been deleted.</li> <li> <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</li> </ul>",
      "shapeName" : "ConnectionState",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "Ordering",
        "value" : "ordering"
      }, {
        "name" : "Requested",
        "value" : "requested"
      }, {
        "name" : "Pending",
        "value" : "pending"
      }, {
        "name" : "Available",
        "value" : "available"
      }, {
        "name" : "Down",
        "value" : "down"
      }, {
        "name" : "Deleting",
        "value" : "deleting"
      }, {
        "name" : "Deleted",
        "value" : "deleted"
      }, {
        "name" : "Rejected",
        "value" : "rejected"
      } ],
      "variable" : {
        "variableName" : "connectionState",
        "variableType" : "ConnectionState",
        "variableDeclarationType" : "ConnectionState",
        "documentation" : null,
        "simpleType" : "ConnectionState",
        "variableSetterType" : "ConnectionState"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "CreateConnectionResult" : {
      "c2jName" : "Connection",
      "documentation" : "<p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "CreateConnectionResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionName",
        "c2jName" : "connectionName",
        "c2jShape" : "ConnectionName",
        "variable" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionName",
          "marshallLocationName" : "connectionName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionState",
        "c2jName" : "connectionState",
        "c2jShape" : "ConnectionState",
        "variable" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionState",
          "marshallLocationName" : "connectionState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ConnectionState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
        "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
        "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
        "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
      }, {
        "documentation" : "",
        "name" : "Region",
        "c2jName" : "region",
        "c2jShape" : "Region",
        "variable" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "region",
          "marshallLocationName" : "region",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param region */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param bandwidth */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "PartnerName",
        "c2jName" : "partnerName",
        "c2jShape" : "PartnerName",
        "variable" : {
          "variableName" : "partnerName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "partnerName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "partnerName",
          "marshallLocationName" : "partnerName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param partnerName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createConnectionResult",
        "variableType" : "CreateConnectionResult",
        "variableDeclarationType" : "CreateConnectionResult",
        "documentation" : null,
        "simpleType" : "CreateConnectionResult",
        "variableSetterType" : "CreateConnectionResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Region" : {
          "documentation" : "",
          "name" : "Region",
          "c2jName" : "region",
          "c2jShape" : "Region",
          "variable" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "region",
            "marshallLocationName" : "region",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param region */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionName" : {
          "documentation" : "",
          "name" : "ConnectionName",
          "c2jName" : "connectionName",
          "c2jShape" : "ConnectionName",
          "variable" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionName",
            "marshallLocationName" : "connectionName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionState" : {
          "documentation" : "",
          "name" : "ConnectionState",
          "c2jName" : "connectionState",
          "c2jShape" : "ConnectionState",
          "variable" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionState",
            "marshallLocationName" : "connectionState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ConnectionState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
          "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
          "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
          "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PartnerName" : {
          "documentation" : "",
          "name" : "PartnerName",
          "c2jName" : "partnerName",
          "c2jShape" : "PartnerName",
          "variable" : {
            "variableName" : "partnerName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "partnerName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "partnerName",
            "marshallLocationName" : "partnerName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param partnerName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Bandwidth" : {
          "documentation" : "",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param bandwidth */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeConnectionsResult" : {
      "c2jName" : "Connections",
      "documentation" : "<p>A structure containing a list of connections.</p>",
      "shapeName" : "DescribeConnectionsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A list of connections.</p>",
        "name" : "Connections",
        "c2jName" : "connections",
        "c2jShape" : "ConnectionList",
        "variable" : {
          "variableName" : "connections",
          "variableType" : "java.util.List<Connection>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Connection>",
          "documentation" : "<p>A list of connections.</p>",
          "simpleType" : "List<Connection>",
          "variableSetterType" : "java.util.Collection<Connection>"
        },
        "setterModel" : {
          "variableName" : "connections",
          "variableType" : "java.util.List<Connection>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Connection>",
          "documentation" : "",
          "simpleType" : "List<Connection>",
          "variableSetterType" : "java.util.Collection<Connection>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Connection>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connections",
          "marshallLocationName" : "connections",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Connection",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Connection",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Connection",
              "variableDeclarationType" : "Connection",
              "documentation" : "",
              "simpleType" : "Connection",
              "variableSetterType" : "Connection"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Connection",
              "variableDeclarationType" : "Connection",
              "documentation" : "",
              "simpleType" : "Connection",
              "variableSetterType" : "Connection"
            },
            "getterModel" : {
              "returnType" : "Connection",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Connection",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Connection>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Connection>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of connections.</p>\n@param connections A list of connections.*/",
        "getterDocumentation" : "/**<p>A list of connections.</p>\n@return A list of connections.*/",
        "fluentSetterDocumentation" : "/**<p>A list of connections.</p>\n@param connections A list of connections.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of connections.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setConnections(java.util.Collection)} or {@link #withConnections(java.util.Collection)} if you want to override the existing values.</p>\n@param connections A list of connections.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeConnectionsResult",
        "variableType" : "DescribeConnectionsResult",
        "variableDeclarationType" : "DescribeConnectionsResult",
        "documentation" : null,
        "simpleType" : "DescribeConnectionsResult",
        "variableSetterType" : "DescribeConnectionsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Connections" : {
          "documentation" : "<p>A list of connections.</p>",
          "name" : "Connections",
          "c2jName" : "connections",
          "c2jShape" : "ConnectionList",
          "variable" : {
            "variableName" : "connections",
            "variableType" : "java.util.List<Connection>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Connection>",
            "documentation" : "<p>A list of connections.</p>",
            "simpleType" : "List<Connection>",
            "variableSetterType" : "java.util.Collection<Connection>"
          },
          "setterModel" : {
            "variableName" : "connections",
            "variableType" : "java.util.List<Connection>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Connection>",
            "documentation" : "",
            "simpleType" : "List<Connection>",
            "variableSetterType" : "java.util.Collection<Connection>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Connection>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connections",
            "marshallLocationName" : "connections",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Connection",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Connection",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Connection",
                "variableDeclarationType" : "Connection",
                "documentation" : "",
                "simpleType" : "Connection",
                "variableSetterType" : "Connection"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Connection",
                "variableDeclarationType" : "Connection",
                "documentation" : "",
                "simpleType" : "Connection",
                "variableSetterType" : "Connection"
              },
              "getterModel" : {
                "returnType" : "Connection",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Connection",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Connection>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Connection>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of connections.</p>\n@param connections A list of connections.*/",
          "getterDocumentation" : "/**<p>A list of connections.</p>\n@return A list of connections.*/",
          "fluentSetterDocumentation" : "/**<p>A list of connections.</p>\n@param connections A list of connections.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of connections.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setConnections(java.util.Collection)} or {@link #withConnections(java.util.Collection)} if you want to override the existing values.</p>\n@param connections A list of connections.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeVirtualInterfacesRequest" : {
      "c2jName" : "DescribeVirtualInterfacesRequest",
      "documentation" : "<p>Container for the parameters to the DescribeVirtualInterfaces operation.</p>",
      "shapeName" : "DescribeVirtualInterfacesRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeVirtualInterfacesRequest",
        "variableType" : "DescribeVirtualInterfacesRequest",
        "variableDeclarationType" : "DescribeVirtualInterfacesRequest",
        "documentation" : null,
        "simpleType" : "DescribeVirtualInterfacesRequest",
        "variableSetterType" : "DescribeVirtualInterfacesRequest"
      },
      "marshaller" : {
        "action" : "DescribeVirtualInterfaces",
        "verb" : "POST",
        "target" : "OvertureService.DescribeVirtualInterfaces",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreatePublicVirtualInterfaceResult" : {
      "c2jName" : "VirtualInterface",
      "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "CreatePublicVirtualInterfaceResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceType",
        "c2jName" : "virtualInterfaceType",
        "c2jShape" : "VirtualInterfaceType",
        "variable" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceType",
          "marshallLocationName" : "virtualInterfaceType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceType */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceState",
        "c2jName" : "virtualInterfaceState",
        "c2jShape" : "VirtualInterfaceState",
        "variable" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceState",
          "marshallLocationName" : "virtualInterfaceState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "VirtualInterfaceState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
        "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
      }, {
        "documentation" : "<p>Information for generating the customer router configuration.</p>",
        "name" : "CustomerRouterConfig",
        "c2jName" : "customerRouterConfig",
        "c2jShape" : "RouterConfig",
        "variable" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerRouterConfig",
          "marshallLocationName" : "customerRouterConfig",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
        "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
        "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualGatewayId",
        "c2jName" : "virtualGatewayId",
        "c2jShape" : "VirtualGatewayId",
        "variable" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayId",
          "marshallLocationName" : "virtualGatewayId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualGatewayId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "RouteFilterPrefixes",
        "c2jName" : "routeFilterPrefixes",
        "c2jShape" : "RouteFilterPrefixList",
        "variable" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "setterModel" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<RouteFilterPrefix>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "routeFilterPrefixes",
          "marshallLocationName" : "routeFilterPrefixes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "RouteFilterPrefix",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RouteFilterPrefix",
            "variable" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "getterModel" : {
              "returnType" : "RouteFilterPrefix",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "RouteFilterPrefix",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<RouteFilterPrefix>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createPublicVirtualInterfaceResult",
        "variableType" : "CreatePublicVirtualInterfaceResult",
        "variableDeclarationType" : "CreatePublicVirtualInterfaceResult",
        "documentation" : null,
        "simpleType" : "CreatePublicVirtualInterfaceResult",
        "variableSetterType" : "CreatePublicVirtualInterfaceResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceState" : {
          "documentation" : "",
          "name" : "VirtualInterfaceState",
          "c2jName" : "virtualInterfaceState",
          "c2jShape" : "VirtualInterfaceState",
          "variable" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceState",
            "marshallLocationName" : "virtualInterfaceState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "VirtualInterfaceState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
          "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RouteFilterPrefixes" : {
          "documentation" : "",
          "name" : "RouteFilterPrefixes",
          "c2jName" : "routeFilterPrefixes",
          "c2jShape" : "RouteFilterPrefixList",
          "variable" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "setterModel" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<RouteFilterPrefix>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "routeFilterPrefixes",
            "marshallLocationName" : "routeFilterPrefixes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "RouteFilterPrefix",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RouteFilterPrefix",
              "variable" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "getterModel" : {
                "returnType" : "RouteFilterPrefix",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "RouteFilterPrefix",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<RouteFilterPrefix>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerRouterConfig" : {
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "name" : "CustomerRouterConfig",
          "c2jName" : "customerRouterConfig",
          "c2jShape" : "RouterConfig",
          "variable" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Information for generating the customer router configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerRouterConfig",
            "marshallLocationName" : "customerRouterConfig",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
          "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
          "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceType" : {
          "documentation" : "",
          "name" : "VirtualInterfaceType",
          "c2jName" : "virtualInterfaceType",
          "c2jShape" : "VirtualInterfaceType",
          "variable" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceType",
            "marshallLocationName" : "virtualInterfaceType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceType */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualGatewayId" : {
          "documentation" : "",
          "name" : "VirtualGatewayId",
          "c2jName" : "virtualGatewayId",
          "c2jShape" : "VirtualGatewayId",
          "variable" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayId",
            "marshallLocationName" : "virtualGatewayId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualGatewayId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DirectConnectServerException" : {
      "c2jName" : "DirectConnectServerException",
      "documentation" : "<p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>",
      "shapeName" : "DirectConnectServerException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "directConnectServerException",
        "variableType" : "DirectConnectServerException",
        "variableDeclarationType" : "DirectConnectServerException",
        "documentation" : null,
        "simpleType" : "DirectConnectServerException",
        "variableSetterType" : "DirectConnectServerException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "DirectConnectServerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DescribeLocationsRequest" : {
      "c2jName" : "DescribeLocationsRequest",
      "documentation" : null,
      "shapeName" : "DescribeLocationsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "describeLocationsRequest",
        "variableType" : "DescribeLocationsRequest",
        "variableDeclarationType" : "DescribeLocationsRequest",
        "documentation" : null,
        "simpleType" : "DescribeLocationsRequest",
        "variableSetterType" : "DescribeLocationsRequest"
      },
      "marshaller" : {
        "action" : "DescribeLocations",
        "verb" : "POST",
        "target" : "OvertureService.DescribeLocations",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DeleteInterconnectRequest" : {
      "c2jName" : "DeleteInterconnectRequest",
      "documentation" : "<p>Container for the parameters to the DeleteInterconnect operation.</p>",
      "shapeName" : "DeleteInterconnectRequest",
      "deprecated" : false,
      "required" : [ "interconnectId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "InterconnectId",
        "c2jName" : "interconnectId",
        "c2jShape" : "InterconnectId",
        "variable" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectId",
          "marshallLocationName" : "interconnectId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteInterconnectRequest",
        "variableType" : "DeleteInterconnectRequest",
        "variableDeclarationType" : "DeleteInterconnectRequest",
        "documentation" : null,
        "simpleType" : "DeleteInterconnectRequest",
        "variableSetterType" : "DeleteInterconnectRequest"
      },
      "marshaller" : {
        "action" : "DeleteInterconnect",
        "verb" : "POST",
        "target" : "OvertureService.DeleteInterconnect",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "InterconnectId" : {
          "documentation" : "",
          "name" : "InterconnectId",
          "c2jName" : "interconnectId",
          "c2jShape" : "InterconnectId",
          "variable" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectId",
            "marshallLocationName" : "interconnectId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteVirtualInterfaceRequest" : {
      "c2jName" : "DeleteVirtualInterfaceRequest",
      "documentation" : "<p>Container for the parameters to the DeleteVirtualInterface operation.</p>",
      "shapeName" : "DeleteVirtualInterfaceRequest",
      "deprecated" : false,
      "required" : [ "virtualInterfaceId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteVirtualInterfaceRequest",
        "variableType" : "DeleteVirtualInterfaceRequest",
        "variableDeclarationType" : "DeleteVirtualInterfaceRequest",
        "documentation" : null,
        "simpleType" : "DeleteVirtualInterfaceRequest",
        "variableSetterType" : "DeleteVirtualInterfaceRequest"
      },
      "marshaller" : {
        "action" : "DeleteVirtualInterface",
        "verb" : "POST",
        "target" : "OvertureService.DeleteVirtualInterface",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateConnectionRequest" : {
      "c2jName" : "CreateConnectionRequest",
      "documentation" : "<p>Container for the parameters to the CreateConnection operation.</p>",
      "shapeName" : "CreateConnectionRequest",
      "deprecated" : false,
      "required" : [ "location", "bandwidth", "connectionName" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param bandwidth */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionName",
        "c2jName" : "connectionName",
        "c2jShape" : "ConnectionName",
        "variable" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionName",
          "marshallLocationName" : "connectionName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createConnectionRequest",
        "variableType" : "CreateConnectionRequest",
        "variableDeclarationType" : "CreateConnectionRequest",
        "documentation" : null,
        "simpleType" : "CreateConnectionRequest",
        "variableSetterType" : "CreateConnectionRequest"
      },
      "marshaller" : {
        "action" : "CreateConnection",
        "verb" : "POST",
        "target" : "OvertureService.CreateConnection",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionName" : {
          "documentation" : "",
          "name" : "ConnectionName",
          "c2jName" : "connectionName",
          "c2jShape" : "ConnectionName",
          "variable" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionName",
            "marshallLocationName" : "connectionName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Bandwidth" : {
          "documentation" : "",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param bandwidth */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NewPrivateVirtualInterface" : {
      "c2jName" : "NewPrivateVirtualInterface",
      "documentation" : "<p>A structure containing information about a new private virtual interface.</p>",
      "shapeName" : "NewPrivateVirtualInterface",
      "deprecated" : false,
      "required" : [ "virtualInterfaceName", "vlan", "asn", "virtualGatewayId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualGatewayId",
        "c2jName" : "virtualGatewayId",
        "c2jShape" : "VirtualGatewayId",
        "variable" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayId",
          "marshallLocationName" : "virtualGatewayId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualGatewayId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "newPrivateVirtualInterface",
        "variableType" : "NewPrivateVirtualInterface",
        "variableDeclarationType" : "NewPrivateVirtualInterface",
        "documentation" : null,
        "simpleType" : "NewPrivateVirtualInterface",
        "variableSetterType" : "NewPrivateVirtualInterface"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualGatewayId" : {
          "documentation" : "",
          "name" : "VirtualGatewayId",
          "c2jName" : "virtualGatewayId",
          "c2jShape" : "VirtualGatewayId",
          "variable" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayId",
            "marshallLocationName" : "virtualGatewayId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualGatewayId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteInterconnectResult" : {
      "c2jName" : "DeleteInterconnectResponse",
      "documentation" : "<p>The response received when DeleteInterconnect is called.</p>",
      "shapeName" : "DeleteInterconnectResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "InterconnectState",
        "c2jName" : "interconnectState",
        "c2jShape" : "InterconnectState",
        "variable" : {
          "variableName" : "interconnectState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectState",
          "marshallLocationName" : "interconnectState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "InterconnectState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectState \n@see InterconnectState*/",
        "getterDocumentation" : "/**\n@return \n@see InterconnectState*/",
        "fluentSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/",
        "varargSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteInterconnectResult",
        "variableType" : "DeleteInterconnectResult",
        "variableDeclarationType" : "DeleteInterconnectResult",
        "documentation" : null,
        "simpleType" : "DeleteInterconnectResult",
        "variableSetterType" : "DeleteInterconnectResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "InterconnectState" : {
          "documentation" : "",
          "name" : "InterconnectState",
          "c2jName" : "interconnectState",
          "c2jShape" : "InterconnectState",
          "variable" : {
            "variableName" : "interconnectState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectState",
            "marshallLocationName" : "interconnectState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "InterconnectState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectState \n@see InterconnectState*/",
          "getterDocumentation" : "/**\n@return \n@see InterconnectState*/",
          "fluentSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/",
          "varargSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/"
        }
      }
    },
    "CreatePrivateVirtualInterfaceResult" : {
      "c2jName" : "VirtualInterface",
      "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "CreatePrivateVirtualInterfaceResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceType",
        "c2jName" : "virtualInterfaceType",
        "c2jShape" : "VirtualInterfaceType",
        "variable" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceType",
          "marshallLocationName" : "virtualInterfaceType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceType */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceState",
        "c2jName" : "virtualInterfaceState",
        "c2jShape" : "VirtualInterfaceState",
        "variable" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceState",
          "marshallLocationName" : "virtualInterfaceState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "VirtualInterfaceState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
        "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
      }, {
        "documentation" : "<p>Information for generating the customer router configuration.</p>",
        "name" : "CustomerRouterConfig",
        "c2jName" : "customerRouterConfig",
        "c2jShape" : "RouterConfig",
        "variable" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerRouterConfig",
          "marshallLocationName" : "customerRouterConfig",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
        "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
        "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualGatewayId",
        "c2jName" : "virtualGatewayId",
        "c2jShape" : "VirtualGatewayId",
        "variable" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayId",
          "marshallLocationName" : "virtualGatewayId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualGatewayId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "RouteFilterPrefixes",
        "c2jName" : "routeFilterPrefixes",
        "c2jShape" : "RouteFilterPrefixList",
        "variable" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "setterModel" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<RouteFilterPrefix>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "routeFilterPrefixes",
          "marshallLocationName" : "routeFilterPrefixes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "RouteFilterPrefix",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RouteFilterPrefix",
            "variable" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "getterModel" : {
              "returnType" : "RouteFilterPrefix",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "RouteFilterPrefix",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<RouteFilterPrefix>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createPrivateVirtualInterfaceResult",
        "variableType" : "CreatePrivateVirtualInterfaceResult",
        "variableDeclarationType" : "CreatePrivateVirtualInterfaceResult",
        "documentation" : null,
        "simpleType" : "CreatePrivateVirtualInterfaceResult",
        "variableSetterType" : "CreatePrivateVirtualInterfaceResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceState" : {
          "documentation" : "",
          "name" : "VirtualInterfaceState",
          "c2jName" : "virtualInterfaceState",
          "c2jShape" : "VirtualInterfaceState",
          "variable" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceState",
            "marshallLocationName" : "virtualInterfaceState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "VirtualInterfaceState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
          "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RouteFilterPrefixes" : {
          "documentation" : "",
          "name" : "RouteFilterPrefixes",
          "c2jName" : "routeFilterPrefixes",
          "c2jShape" : "RouteFilterPrefixList",
          "variable" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "setterModel" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<RouteFilterPrefix>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "routeFilterPrefixes",
            "marshallLocationName" : "routeFilterPrefixes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "RouteFilterPrefix",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RouteFilterPrefix",
              "variable" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "getterModel" : {
                "returnType" : "RouteFilterPrefix",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "RouteFilterPrefix",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<RouteFilterPrefix>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerRouterConfig" : {
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "name" : "CustomerRouterConfig",
          "c2jName" : "customerRouterConfig",
          "c2jShape" : "RouterConfig",
          "variable" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Information for generating the customer router configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerRouterConfig",
            "marshallLocationName" : "customerRouterConfig",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
          "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
          "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceType" : {
          "documentation" : "",
          "name" : "VirtualInterfaceType",
          "c2jName" : "virtualInterfaceType",
          "c2jShape" : "VirtualInterfaceType",
          "variable" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceType",
            "marshallLocationName" : "virtualInterfaceType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceType */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualGatewayId" : {
          "documentation" : "",
          "name" : "VirtualGatewayId",
          "c2jName" : "virtualGatewayId",
          "c2jShape" : "VirtualGatewayId",
          "variable" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayId",
            "marshallLocationName" : "virtualGatewayId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualGatewayId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeConnectionsOnInterconnectResult" : {
      "c2jName" : "Connections",
      "documentation" : "<p>A structure containing a list of connections.</p>",
      "shapeName" : "DescribeConnectionsOnInterconnectResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A list of connections.</p>",
        "name" : "Connections",
        "c2jName" : "connections",
        "c2jShape" : "ConnectionList",
        "variable" : {
          "variableName" : "connections",
          "variableType" : "java.util.List<Connection>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Connection>",
          "documentation" : "<p>A list of connections.</p>",
          "simpleType" : "List<Connection>",
          "variableSetterType" : "java.util.Collection<Connection>"
        },
        "setterModel" : {
          "variableName" : "connections",
          "variableType" : "java.util.List<Connection>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Connection>",
          "documentation" : "",
          "simpleType" : "List<Connection>",
          "variableSetterType" : "java.util.Collection<Connection>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Connection>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connections",
          "marshallLocationName" : "connections",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Connection",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Connection",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Connection",
              "variableDeclarationType" : "Connection",
              "documentation" : "",
              "simpleType" : "Connection",
              "variableSetterType" : "Connection"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Connection",
              "variableDeclarationType" : "Connection",
              "documentation" : "",
              "simpleType" : "Connection",
              "variableSetterType" : "Connection"
            },
            "getterModel" : {
              "returnType" : "Connection",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Connection",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Connection>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Connection>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of connections.</p>\n@param connections A list of connections.*/",
        "getterDocumentation" : "/**<p>A list of connections.</p>\n@return A list of connections.*/",
        "fluentSetterDocumentation" : "/**<p>A list of connections.</p>\n@param connections A list of connections.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of connections.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setConnections(java.util.Collection)} or {@link #withConnections(java.util.Collection)} if you want to override the existing values.</p>\n@param connections A list of connections.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeConnectionsOnInterconnectResult",
        "variableType" : "DescribeConnectionsOnInterconnectResult",
        "variableDeclarationType" : "DescribeConnectionsOnInterconnectResult",
        "documentation" : null,
        "simpleType" : "DescribeConnectionsOnInterconnectResult",
        "variableSetterType" : "DescribeConnectionsOnInterconnectResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Connections" : {
          "documentation" : "<p>A list of connections.</p>",
          "name" : "Connections",
          "c2jName" : "connections",
          "c2jShape" : "ConnectionList",
          "variable" : {
            "variableName" : "connections",
            "variableType" : "java.util.List<Connection>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Connection>",
            "documentation" : "<p>A list of connections.</p>",
            "simpleType" : "List<Connection>",
            "variableSetterType" : "java.util.Collection<Connection>"
          },
          "setterModel" : {
            "variableName" : "connections",
            "variableType" : "java.util.List<Connection>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Connection>",
            "documentation" : "",
            "simpleType" : "List<Connection>",
            "variableSetterType" : "java.util.Collection<Connection>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Connection>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connections",
            "marshallLocationName" : "connections",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Connection",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Connection",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Connection",
                "variableDeclarationType" : "Connection",
                "documentation" : "",
                "simpleType" : "Connection",
                "variableSetterType" : "Connection"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Connection",
                "variableDeclarationType" : "Connection",
                "documentation" : "",
                "simpleType" : "Connection",
                "variableSetterType" : "Connection"
              },
              "getterModel" : {
                "returnType" : "Connection",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Connection",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Connection>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Connection>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of connections.</p>\n@param connections A list of connections.*/",
          "getterDocumentation" : "/**<p>A list of connections.</p>\n@return A list of connections.*/",
          "fluentSetterDocumentation" : "/**<p>A list of connections.</p>\n@param connections A list of connections.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of connections.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setConnections(java.util.Collection)} or {@link #withConnections(java.util.Collection)} if you want to override the existing values.</p>\n@param connections A list of connections.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreatePrivateVirtualInterfaceRequest" : {
      "c2jName" : "CreatePrivateVirtualInterfaceRequest",
      "documentation" : "<p>Container for the parameters to the CreatePrivateVirtualInterface operation.</p>",
      "shapeName" : "CreatePrivateVirtualInterfaceRequest",
      "deprecated" : false,
      "required" : [ "connectionId", "newPrivateVirtualInterface" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>",
        "name" : "NewPrivateVirtualInterface",
        "c2jName" : "newPrivateVirtualInterface",
        "c2jShape" : "NewPrivateVirtualInterface",
        "variable" : {
          "variableName" : "newPrivateVirtualInterface",
          "variableType" : "NewPrivateVirtualInterface",
          "variableDeclarationType" : "NewPrivateVirtualInterface",
          "documentation" : "<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>",
          "simpleType" : "NewPrivateVirtualInterface",
          "variableSetterType" : "NewPrivateVirtualInterface"
        },
        "setterModel" : {
          "variableName" : "newPrivateVirtualInterface",
          "variableType" : "NewPrivateVirtualInterface",
          "variableDeclarationType" : "NewPrivateVirtualInterface",
          "documentation" : "",
          "simpleType" : "NewPrivateVirtualInterface",
          "variableSetterType" : "NewPrivateVirtualInterface"
        },
        "getterModel" : {
          "returnType" : "NewPrivateVirtualInterface",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "newPrivateVirtualInterface",
          "marshallLocationName" : "newPrivateVirtualInterface",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>\n@param newPrivateVirtualInterface Detailed information for the private virtual interface to be created.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>\n@return Detailed information for the private virtual interface to be created.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>\n@param newPrivateVirtualInterface Detailed information for the private virtual interface to be created.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>\n@param newPrivateVirtualInterface Detailed information for the private virtual interface to be created.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createPrivateVirtualInterfaceRequest",
        "variableType" : "CreatePrivateVirtualInterfaceRequest",
        "variableDeclarationType" : "CreatePrivateVirtualInterfaceRequest",
        "documentation" : null,
        "simpleType" : "CreatePrivateVirtualInterfaceRequest",
        "variableSetterType" : "CreatePrivateVirtualInterfaceRequest"
      },
      "marshaller" : {
        "action" : "CreatePrivateVirtualInterface",
        "verb" : "POST",
        "target" : "OvertureService.CreatePrivateVirtualInterface",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NewPrivateVirtualInterface" : {
          "documentation" : "<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>",
          "name" : "NewPrivateVirtualInterface",
          "c2jName" : "newPrivateVirtualInterface",
          "c2jShape" : "NewPrivateVirtualInterface",
          "variable" : {
            "variableName" : "newPrivateVirtualInterface",
            "variableType" : "NewPrivateVirtualInterface",
            "variableDeclarationType" : "NewPrivateVirtualInterface",
            "documentation" : "<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>",
            "simpleType" : "NewPrivateVirtualInterface",
            "variableSetterType" : "NewPrivateVirtualInterface"
          },
          "setterModel" : {
            "variableName" : "newPrivateVirtualInterface",
            "variableType" : "NewPrivateVirtualInterface",
            "variableDeclarationType" : "NewPrivateVirtualInterface",
            "documentation" : "",
            "simpleType" : "NewPrivateVirtualInterface",
            "variableSetterType" : "NewPrivateVirtualInterface"
          },
          "getterModel" : {
            "returnType" : "NewPrivateVirtualInterface",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "newPrivateVirtualInterface",
            "marshallLocationName" : "newPrivateVirtualInterface",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>\n@param newPrivateVirtualInterface Detailed information for the private virtual interface to be created.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>\n@return Detailed information for the private virtual interface to be created.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>\n@param newPrivateVirtualInterface Detailed information for the private virtual interface to be created.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Detailed information for the private virtual interface to be created.</p> <p>Default: None</p>\n@param newPrivateVirtualInterface Detailed information for the private virtual interface to be created.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeVirtualGatewaysResult" : {
      "c2jName" : "VirtualGateways",
      "documentation" : "<p>A structure containing a list of virtual private gateways.</p>",
      "shapeName" : "DescribeVirtualGatewaysResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A list of virtual private gateways.</p>",
        "name" : "VirtualGateways",
        "c2jName" : "virtualGateways",
        "c2jShape" : "VirtualGatewayList",
        "variable" : {
          "variableName" : "virtualGateways",
          "variableType" : "java.util.List<VirtualGateway>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<VirtualGateway>",
          "documentation" : "<p>A list of virtual private gateways.</p>",
          "simpleType" : "List<VirtualGateway>",
          "variableSetterType" : "java.util.Collection<VirtualGateway>"
        },
        "setterModel" : {
          "variableName" : "virtualGateways",
          "variableType" : "java.util.List<VirtualGateway>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<VirtualGateway>",
          "documentation" : "",
          "simpleType" : "List<VirtualGateway>",
          "variableSetterType" : "java.util.Collection<VirtualGateway>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<VirtualGateway>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGateways",
          "marshallLocationName" : "virtualGateways",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "VirtualGateway",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "VirtualGateway",
            "variable" : {
              "variableName" : "member",
              "variableType" : "VirtualGateway",
              "variableDeclarationType" : "VirtualGateway",
              "documentation" : "",
              "simpleType" : "VirtualGateway",
              "variableSetterType" : "VirtualGateway"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "VirtualGateway",
              "variableDeclarationType" : "VirtualGateway",
              "documentation" : "",
              "simpleType" : "VirtualGateway",
              "variableSetterType" : "VirtualGateway"
            },
            "getterModel" : {
              "returnType" : "VirtualGateway",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "VirtualGateway",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<VirtualGateway>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<VirtualGateway>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of virtual private gateways.</p>\n@param virtualGateways A list of virtual private gateways.*/",
        "getterDocumentation" : "/**<p>A list of virtual private gateways.</p>\n@return A list of virtual private gateways.*/",
        "fluentSetterDocumentation" : "/**<p>A list of virtual private gateways.</p>\n@param virtualGateways A list of virtual private gateways.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of virtual private gateways.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setVirtualGateways(java.util.Collection)} or {@link #withVirtualGateways(java.util.Collection)} if you want to override the existing values.</p>\n@param virtualGateways A list of virtual private gateways.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeVirtualGatewaysResult",
        "variableType" : "DescribeVirtualGatewaysResult",
        "variableDeclarationType" : "DescribeVirtualGatewaysResult",
        "documentation" : null,
        "simpleType" : "DescribeVirtualGatewaysResult",
        "variableSetterType" : "DescribeVirtualGatewaysResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualGateways" : {
          "documentation" : "<p>A list of virtual private gateways.</p>",
          "name" : "VirtualGateways",
          "c2jName" : "virtualGateways",
          "c2jShape" : "VirtualGatewayList",
          "variable" : {
            "variableName" : "virtualGateways",
            "variableType" : "java.util.List<VirtualGateway>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<VirtualGateway>",
            "documentation" : "<p>A list of virtual private gateways.</p>",
            "simpleType" : "List<VirtualGateway>",
            "variableSetterType" : "java.util.Collection<VirtualGateway>"
          },
          "setterModel" : {
            "variableName" : "virtualGateways",
            "variableType" : "java.util.List<VirtualGateway>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<VirtualGateway>",
            "documentation" : "",
            "simpleType" : "List<VirtualGateway>",
            "variableSetterType" : "java.util.Collection<VirtualGateway>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<VirtualGateway>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGateways",
            "marshallLocationName" : "virtualGateways",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "VirtualGateway",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "VirtualGateway",
              "variable" : {
                "variableName" : "member",
                "variableType" : "VirtualGateway",
                "variableDeclarationType" : "VirtualGateway",
                "documentation" : "",
                "simpleType" : "VirtualGateway",
                "variableSetterType" : "VirtualGateway"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "VirtualGateway",
                "variableDeclarationType" : "VirtualGateway",
                "documentation" : "",
                "simpleType" : "VirtualGateway",
                "variableSetterType" : "VirtualGateway"
              },
              "getterModel" : {
                "returnType" : "VirtualGateway",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "VirtualGateway",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<VirtualGateway>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<VirtualGateway>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of virtual private gateways.</p>\n@param virtualGateways A list of virtual private gateways.*/",
          "getterDocumentation" : "/**<p>A list of virtual private gateways.</p>\n@return A list of virtual private gateways.*/",
          "fluentSetterDocumentation" : "/**<p>A list of virtual private gateways.</p>\n@param virtualGateways A list of virtual private gateways.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of virtual private gateways.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setVirtualGateways(java.util.Collection)} or {@link #withVirtualGateways(java.util.Collection)} if you want to override the existing values.</p>\n@param virtualGateways A list of virtual private gateways.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ConfirmConnectionRequest" : {
      "c2jName" : "ConfirmConnectionRequest",
      "documentation" : "<p>Container for the parameters to the ConfirmConnection operation.</p>",
      "shapeName" : "ConfirmConnectionRequest",
      "deprecated" : false,
      "required" : [ "connectionId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "confirmConnectionRequest",
        "variableType" : "ConfirmConnectionRequest",
        "variableDeclarationType" : "ConfirmConnectionRequest",
        "documentation" : null,
        "simpleType" : "ConfirmConnectionRequest",
        "variableSetterType" : "ConfirmConnectionRequest"
      },
      "marshaller" : {
        "action" : "ConfirmConnection",
        "verb" : "POST",
        "target" : "OvertureService.ConfirmConnection",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AllocateConnectionOnInterconnectResult" : {
      "c2jName" : "Connection",
      "documentation" : "<p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "AllocateConnectionOnInterconnectResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionName",
        "c2jName" : "connectionName",
        "c2jShape" : "ConnectionName",
        "variable" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionName",
          "marshallLocationName" : "connectionName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionState",
        "c2jName" : "connectionState",
        "c2jShape" : "ConnectionState",
        "variable" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionState",
          "marshallLocationName" : "connectionState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ConnectionState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
        "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
        "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
        "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
      }, {
        "documentation" : "",
        "name" : "Region",
        "c2jName" : "region",
        "c2jShape" : "Region",
        "variable" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "region",
          "marshallLocationName" : "region",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param region */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param bandwidth */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "PartnerName",
        "c2jName" : "partnerName",
        "c2jShape" : "PartnerName",
        "variable" : {
          "variableName" : "partnerName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "partnerName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "partnerName",
          "marshallLocationName" : "partnerName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param partnerName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "allocateConnectionOnInterconnectResult",
        "variableType" : "AllocateConnectionOnInterconnectResult",
        "variableDeclarationType" : "AllocateConnectionOnInterconnectResult",
        "documentation" : null,
        "simpleType" : "AllocateConnectionOnInterconnectResult",
        "variableSetterType" : "AllocateConnectionOnInterconnectResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Region" : {
          "documentation" : "",
          "name" : "Region",
          "c2jName" : "region",
          "c2jShape" : "Region",
          "variable" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "region",
            "marshallLocationName" : "region",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param region */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionName" : {
          "documentation" : "",
          "name" : "ConnectionName",
          "c2jName" : "connectionName",
          "c2jShape" : "ConnectionName",
          "variable" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionName",
            "marshallLocationName" : "connectionName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionState" : {
          "documentation" : "",
          "name" : "ConnectionState",
          "c2jName" : "connectionState",
          "c2jShape" : "ConnectionState",
          "variable" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionState",
            "marshallLocationName" : "connectionState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ConnectionState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
          "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
          "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
          "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PartnerName" : {
          "documentation" : "",
          "name" : "PartnerName",
          "c2jName" : "partnerName",
          "c2jShape" : "PartnerName",
          "variable" : {
            "variableName" : "partnerName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "partnerName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "partnerName",
            "marshallLocationName" : "partnerName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param partnerName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Bandwidth" : {
          "documentation" : "",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param bandwidth */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ConfirmConnectionResult" : {
      "c2jName" : "ConfirmConnectionResponse",
      "documentation" : "<p>The response received when ConfirmConnection is called.</p>",
      "shapeName" : "ConfirmConnectionResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "ConnectionState",
        "c2jName" : "connectionState",
        "c2jShape" : "ConnectionState",
        "variable" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionState",
          "marshallLocationName" : "connectionState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ConnectionState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
        "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
        "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
        "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "confirmConnectionResult",
        "variableType" : "ConfirmConnectionResult",
        "variableDeclarationType" : "ConfirmConnectionResult",
        "documentation" : null,
        "simpleType" : "ConfirmConnectionResult",
        "variableSetterType" : "ConfirmConnectionResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionState" : {
          "documentation" : "",
          "name" : "ConnectionState",
          "c2jName" : "connectionState",
          "c2jShape" : "ConnectionState",
          "variable" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionState",
            "marshallLocationName" : "connectionState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ConnectionState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
          "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
          "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
          "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
        }
      }
    },
    "AllocateConnectionOnInterconnectRequest" : {
      "c2jName" : "AllocateConnectionOnInterconnectRequest",
      "documentation" : "<p>Container for the parameters to the AllocateConnectionOnInterconnect operation.</p>",
      "shapeName" : "AllocateConnectionOnInterconnectRequest",
      "deprecated" : false,
      "required" : [ "bandwidth", "connectionName", "ownerAccount", "interconnectId", "vlan" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param bandwidth */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>",
        "name" : "ConnectionName",
        "c2jName" : "connectionName",
        "c2jShape" : "ConnectionName",
        "variable" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionName",
          "marshallLocationName" : "connectionName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>\n@param connectionName Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>\n@return Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>\n@param connectionName Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>\n@param connectionName Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>\n@param ownerAccount Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>\n@return Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>\n@param ownerAccount Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>\n@param ownerAccount Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>",
        "name" : "InterconnectId",
        "c2jName" : "interconnectId",
        "c2jShape" : "InterconnectId",
        "variable" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectId",
          "marshallLocationName" : "interconnectId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>\n@return ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>\n@param vlan The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>\n@return The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>\n@param vlan The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>\n@param vlan The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "allocateConnectionOnInterconnectRequest",
        "variableType" : "AllocateConnectionOnInterconnectRequest",
        "variableDeclarationType" : "AllocateConnectionOnInterconnectRequest",
        "documentation" : null,
        "simpleType" : "AllocateConnectionOnInterconnectRequest",
        "variableSetterType" : "AllocateConnectionOnInterconnectRequest"
      },
      "marshaller" : {
        "action" : "AllocateConnectionOnInterconnect",
        "verb" : "POST",
        "target" : "OvertureService.AllocateConnectionOnInterconnect",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "InterconnectId" : {
          "documentation" : "<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>",
          "name" : "InterconnectId",
          "c2jName" : "interconnectId",
          "c2jShape" : "InterconnectId",
          "variable" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectId",
            "marshallLocationName" : "interconnectId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>\n@return ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which the connection will be provisioned.</p> <p>Example: dxcon-456abc78</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionName" : {
          "documentation" : "<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>",
          "name" : "ConnectionName",
          "c2jName" : "connectionName",
          "c2jShape" : "ConnectionName",
          "variable" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionName",
            "marshallLocationName" : "connectionName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>\n@param connectionName Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>\n@return Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>\n@param connectionName Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None</p>\n@param connectionName Name of the provisioned connection.</p> <p>Example: \"<i>500M Connection to AWS</i>\"</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OwnerAccount" : {
          "documentation" : "<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>\n@param ownerAccount Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>\n@return Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>\n@param ownerAccount Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None</p>\n@param ownerAccount Numeric account Id of the customer for whom the connection will be provisioned.</p> <p>Example: 123443215678</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>\n@param vlan The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>\n@return The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>\n@param vlan The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None</p>\n@param vlan The dedicated VLAN provisioned to the connection.</p> <p>Example: 101</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Bandwidth" : {
          "documentation" : "",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param bandwidth */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteConnectionResult" : {
      "c2jName" : "Connection",
      "documentation" : "<p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "DeleteConnectionResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionName",
        "c2jName" : "connectionName",
        "c2jShape" : "ConnectionName",
        "variable" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionName",
          "marshallLocationName" : "connectionName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionState",
        "c2jName" : "connectionState",
        "c2jShape" : "ConnectionState",
        "variable" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionState",
          "marshallLocationName" : "connectionState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ConnectionState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
        "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
        "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
        "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
      }, {
        "documentation" : "",
        "name" : "Region",
        "c2jName" : "region",
        "c2jShape" : "Region",
        "variable" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "region",
          "marshallLocationName" : "region",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param region */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param bandwidth */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "PartnerName",
        "c2jName" : "partnerName",
        "c2jShape" : "PartnerName",
        "variable" : {
          "variableName" : "partnerName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "partnerName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "partnerName",
          "marshallLocationName" : "partnerName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param partnerName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteConnectionResult",
        "variableType" : "DeleteConnectionResult",
        "variableDeclarationType" : "DeleteConnectionResult",
        "documentation" : null,
        "simpleType" : "DeleteConnectionResult",
        "variableSetterType" : "DeleteConnectionResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Region" : {
          "documentation" : "",
          "name" : "Region",
          "c2jName" : "region",
          "c2jShape" : "Region",
          "variable" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "region",
            "marshallLocationName" : "region",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param region */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionName" : {
          "documentation" : "",
          "name" : "ConnectionName",
          "c2jName" : "connectionName",
          "c2jShape" : "ConnectionName",
          "variable" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionName",
            "marshallLocationName" : "connectionName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionState" : {
          "documentation" : "",
          "name" : "ConnectionState",
          "c2jName" : "connectionState",
          "c2jShape" : "ConnectionState",
          "variable" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionState",
            "marshallLocationName" : "connectionState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ConnectionState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
          "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
          "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
          "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PartnerName" : {
          "documentation" : "",
          "name" : "PartnerName",
          "c2jName" : "partnerName",
          "c2jShape" : "PartnerName",
          "variable" : {
            "variableName" : "partnerName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "partnerName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "partnerName",
            "marshallLocationName" : "partnerName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param partnerName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Bandwidth" : {
          "documentation" : "",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param bandwidth */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NewPrivateVirtualInterfaceAllocation" : {
      "c2jName" : "NewPrivateVirtualInterfaceAllocation",
      "documentation" : "<p>A structure containing information about a private virtual interface that will be provisioned on a connection.</p>",
      "shapeName" : "NewPrivateVirtualInterfaceAllocation",
      "deprecated" : false,
      "required" : [ "virtualInterfaceName", "vlan", "asn" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "newPrivateVirtualInterfaceAllocation",
        "variableType" : "NewPrivateVirtualInterfaceAllocation",
        "variableDeclarationType" : "NewPrivateVirtualInterfaceAllocation",
        "documentation" : null,
        "simpleType" : "NewPrivateVirtualInterfaceAllocation",
        "variableSetterType" : "NewPrivateVirtualInterfaceAllocation"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeInterconnectsRequest" : {
      "c2jName" : "DescribeInterconnectsRequest",
      "documentation" : "<p>Container for the parameters to the DescribeInterconnects operation.</p>",
      "shapeName" : "DescribeInterconnectsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "InterconnectId",
        "c2jName" : "interconnectId",
        "c2jShape" : "InterconnectId",
        "variable" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectId",
          "marshallLocationName" : "interconnectId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeInterconnectsRequest",
        "variableType" : "DescribeInterconnectsRequest",
        "variableDeclarationType" : "DescribeInterconnectsRequest",
        "documentation" : null,
        "simpleType" : "DescribeInterconnectsRequest",
        "variableSetterType" : "DescribeInterconnectsRequest"
      },
      "marshaller" : {
        "action" : "DescribeInterconnects",
        "verb" : "POST",
        "target" : "OvertureService.DescribeInterconnects",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "InterconnectId" : {
          "documentation" : "",
          "name" : "InterconnectId",
          "c2jName" : "interconnectId",
          "c2jShape" : "InterconnectId",
          "variable" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectId",
            "marshallLocationName" : "interconnectId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Interconnect" : {
      "c2jName" : "Interconnect",
      "documentation" : "<p>An interconnect is a connection that can host other connections.</p> <p>Like a standard AWS Direct Connect connection, an interconnect represents the physical connection between an AWS Direct Connect partner's network and a specific Direct Connect location. An AWS Direct Connect partner who owns an interconnect can provision hosted connections on the interconnect for their end customers, thereby providing the end customers with connectivity to AWS services.</p> <p>The resources of the interconnect, including bandwidth and VLAN numbers, are shared by all of the hosted connections on the interconnect, and the owner of the interconnect determines how these resources are assigned.</p>",
      "shapeName" : "Interconnect",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "InterconnectId",
        "c2jName" : "interconnectId",
        "c2jShape" : "InterconnectId",
        "variable" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectId",
          "marshallLocationName" : "interconnectId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "InterconnectName",
        "c2jName" : "interconnectName",
        "c2jShape" : "InterconnectName",
        "variable" : {
          "variableName" : "interconnectName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectName",
          "marshallLocationName" : "interconnectName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param interconnectName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param interconnectName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "InterconnectState",
        "c2jName" : "interconnectState",
        "c2jShape" : "InterconnectState",
        "variable" : {
          "variableName" : "interconnectState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectState",
          "marshallLocationName" : "interconnectState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "InterconnectState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectState \n@see InterconnectState*/",
        "getterDocumentation" : "/**\n@return \n@see InterconnectState*/",
        "fluentSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/",
        "varargSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/"
      }, {
        "documentation" : "",
        "name" : "Region",
        "c2jName" : "region",
        "c2jShape" : "Region",
        "variable" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "region",
          "marshallLocationName" : "region",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param region */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param bandwidth */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "interconnect",
        "variableType" : "Interconnect",
        "variableDeclarationType" : "Interconnect",
        "documentation" : null,
        "simpleType" : "Interconnect",
        "variableSetterType" : "Interconnect"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "InterconnectName" : {
          "documentation" : "",
          "name" : "InterconnectName",
          "c2jName" : "interconnectName",
          "c2jShape" : "InterconnectName",
          "variable" : {
            "variableName" : "interconnectName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectName",
            "marshallLocationName" : "interconnectName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param interconnectName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param interconnectName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Region" : {
          "documentation" : "",
          "name" : "Region",
          "c2jName" : "region",
          "c2jShape" : "Region",
          "variable" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "region",
            "marshallLocationName" : "region",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param region */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "InterconnectId" : {
          "documentation" : "",
          "name" : "InterconnectId",
          "c2jName" : "interconnectId",
          "c2jShape" : "InterconnectId",
          "variable" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectId",
            "marshallLocationName" : "interconnectId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "InterconnectState" : {
          "documentation" : "",
          "name" : "InterconnectState",
          "c2jName" : "interconnectState",
          "c2jShape" : "InterconnectState",
          "variable" : {
            "variableName" : "interconnectState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectState",
            "marshallLocationName" : "interconnectState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "InterconnectState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectState \n@see InterconnectState*/",
          "getterDocumentation" : "/**\n@return \n@see InterconnectState*/",
          "fluentSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/",
          "varargSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/"
        },
        "Bandwidth" : {
          "documentation" : "",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param bandwidth */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AllocatePublicVirtualInterfaceRequest" : {
      "c2jName" : "AllocatePublicVirtualInterfaceRequest",
      "documentation" : "<p>Container for the parameters to the AllocatePublicVirtualInterface operation.</p>",
      "shapeName" : "AllocatePublicVirtualInterfaceRequest",
      "deprecated" : false,
      "required" : [ "connectionId", "ownerAccount", "newPublicVirtualInterfaceAllocation" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>\n@return The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new public virtual interface.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>\n@return The AWS account that will own the new public virtual interface.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new public virtual interface.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new public virtual interface.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>",
        "name" : "NewPublicVirtualInterfaceAllocation",
        "c2jName" : "newPublicVirtualInterfaceAllocation",
        "c2jShape" : "NewPublicVirtualInterfaceAllocation",
        "variable" : {
          "variableName" : "newPublicVirtualInterfaceAllocation",
          "variableType" : "NewPublicVirtualInterfaceAllocation",
          "variableDeclarationType" : "NewPublicVirtualInterfaceAllocation",
          "documentation" : "<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>",
          "simpleType" : "NewPublicVirtualInterfaceAllocation",
          "variableSetterType" : "NewPublicVirtualInterfaceAllocation"
        },
        "setterModel" : {
          "variableName" : "newPublicVirtualInterfaceAllocation",
          "variableType" : "NewPublicVirtualInterfaceAllocation",
          "variableDeclarationType" : "NewPublicVirtualInterfaceAllocation",
          "documentation" : "",
          "simpleType" : "NewPublicVirtualInterfaceAllocation",
          "variableSetterType" : "NewPublicVirtualInterfaceAllocation"
        },
        "getterModel" : {
          "returnType" : "NewPublicVirtualInterfaceAllocation",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "newPublicVirtualInterfaceAllocation",
          "marshallLocationName" : "newPublicVirtualInterfaceAllocation",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPublicVirtualInterfaceAllocation Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>\n@return Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPublicVirtualInterfaceAllocation Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPublicVirtualInterfaceAllocation Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "allocatePublicVirtualInterfaceRequest",
        "variableType" : "AllocatePublicVirtualInterfaceRequest",
        "variableDeclarationType" : "AllocatePublicVirtualInterfaceRequest",
        "documentation" : null,
        "simpleType" : "AllocatePublicVirtualInterfaceRequest",
        "variableSetterType" : "AllocatePublicVirtualInterfaceRequest"
      },
      "marshaller" : {
        "action" : "AllocatePublicVirtualInterface",
        "verb" : "POST",
        "target" : "OvertureService.AllocatePublicVirtualInterface",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>\n@return The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the public virtual interface is provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OwnerAccount" : {
          "documentation" : "<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new public virtual interface.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>\n@return The AWS account that will own the new public virtual interface.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new public virtual interface.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account that will own the new public virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new public virtual interface.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NewPublicVirtualInterfaceAllocation" : {
          "documentation" : "<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>",
          "name" : "NewPublicVirtualInterfaceAllocation",
          "c2jName" : "newPublicVirtualInterfaceAllocation",
          "c2jShape" : "NewPublicVirtualInterfaceAllocation",
          "variable" : {
            "variableName" : "newPublicVirtualInterfaceAllocation",
            "variableType" : "NewPublicVirtualInterfaceAllocation",
            "variableDeclarationType" : "NewPublicVirtualInterfaceAllocation",
            "documentation" : "<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>",
            "simpleType" : "NewPublicVirtualInterfaceAllocation",
            "variableSetterType" : "NewPublicVirtualInterfaceAllocation"
          },
          "setterModel" : {
            "variableName" : "newPublicVirtualInterfaceAllocation",
            "variableType" : "NewPublicVirtualInterfaceAllocation",
            "variableDeclarationType" : "NewPublicVirtualInterfaceAllocation",
            "documentation" : "",
            "simpleType" : "NewPublicVirtualInterfaceAllocation",
            "variableSetterType" : "NewPublicVirtualInterfaceAllocation"
          },
          "getterModel" : {
            "returnType" : "NewPublicVirtualInterfaceAllocation",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "newPublicVirtualInterfaceAllocation",
            "marshallLocationName" : "newPublicVirtualInterfaceAllocation",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPublicVirtualInterfaceAllocation Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>\n@return Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPublicVirtualInterfaceAllocation Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPublicVirtualInterfaceAllocation Detailed information for the public virtual interface to be provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NewPublicVirtualInterface" : {
      "c2jName" : "NewPublicVirtualInterface",
      "documentation" : "<p>A structure containing information about a new public virtual interface.</p>",
      "shapeName" : "NewPublicVirtualInterface",
      "deprecated" : false,
      "required" : [ "virtualInterfaceName", "vlan", "asn", "amazonAddress", "customerAddress", "routeFilterPrefixes" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "RouteFilterPrefixes",
        "c2jName" : "routeFilterPrefixes",
        "c2jShape" : "RouteFilterPrefixList",
        "variable" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "setterModel" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<RouteFilterPrefix>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "routeFilterPrefixes",
          "marshallLocationName" : "routeFilterPrefixes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "RouteFilterPrefix",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RouteFilterPrefix",
            "variable" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "getterModel" : {
              "returnType" : "RouteFilterPrefix",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "RouteFilterPrefix",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<RouteFilterPrefix>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "newPublicVirtualInterface",
        "variableType" : "NewPublicVirtualInterface",
        "variableDeclarationType" : "NewPublicVirtualInterface",
        "documentation" : null,
        "simpleType" : "NewPublicVirtualInterface",
        "variableSetterType" : "NewPublicVirtualInterface"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RouteFilterPrefixes" : {
          "documentation" : "",
          "name" : "RouteFilterPrefixes",
          "c2jName" : "routeFilterPrefixes",
          "c2jShape" : "RouteFilterPrefixList",
          "variable" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "setterModel" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<RouteFilterPrefix>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "routeFilterPrefixes",
            "marshallLocationName" : "routeFilterPrefixes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "RouteFilterPrefix",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RouteFilterPrefix",
              "variable" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "getterModel" : {
                "returnType" : "RouteFilterPrefix",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "RouteFilterPrefix",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<RouteFilterPrefix>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateInterconnectRequest" : {
      "c2jName" : "CreateInterconnectRequest",
      "documentation" : "<p>Container for the parameters to the CreateInterconnect operation.</p>",
      "shapeName" : "CreateInterconnectRequest",
      "deprecated" : false,
      "required" : [ "interconnectName", "bandwidth", "location" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>",
        "name" : "InterconnectName",
        "c2jName" : "interconnectName",
        "c2jShape" : "InterconnectName",
        "variable" : {
          "variableName" : "interconnectName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectName",
          "marshallLocationName" : "interconnectName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>\n@param interconnectName The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>\n@return The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>\n@param interconnectName The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>\n@param interconnectName The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>\n@param bandwidth The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps*/",
        "getterDocumentation" : "/**<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>\n@return The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps*/",
        "fluentSetterDocumentation" : "/**<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>\n@param bandwidth The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>\n@param bandwidth The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>\n@param location Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>\n@return Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>\n@param location Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>\n@param location Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createInterconnectRequest",
        "variableType" : "CreateInterconnectRequest",
        "variableDeclarationType" : "CreateInterconnectRequest",
        "documentation" : null,
        "simpleType" : "CreateInterconnectRequest",
        "variableSetterType" : "CreateInterconnectRequest"
      },
      "marshaller" : {
        "action" : "CreateInterconnect",
        "verb" : "POST",
        "target" : "OvertureService.CreateInterconnect",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "InterconnectName" : {
          "documentation" : "<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>",
          "name" : "InterconnectName",
          "c2jName" : "interconnectName",
          "c2jShape" : "InterconnectName",
          "variable" : {
            "variableName" : "interconnectName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectName",
            "marshallLocationName" : "interconnectName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>\n@param interconnectName The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>\n@return The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>\n@param interconnectName The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None</p>\n@param interconnectName The name of the interconnect.</p> <p>Example: \"<i>1G Interconnect to AWS</i>\"</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>\n@param location Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>\n@return Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>\n@param location Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None</p>\n@param location Where the interconnect is located</p> <p>Example: EqSV5</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Bandwidth" : {
          "documentation" : "<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>\n@param bandwidth The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps*/",
          "getterDocumentation" : "/**<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>\n@return The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps*/",
          "fluentSetterDocumentation" : "/**<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>\n@param bandwidth The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps</p>\n@param bandwidth The port bandwidth</p> <p>Example: 1Gbps</p> <p>Default: None</p> <p>Available values: 1Gbps,10Gbps\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Connection" : {
      "c2jName" : "Connection",
      "documentation" : "<p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "Connection",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionName",
        "c2jName" : "connectionName",
        "c2jShape" : "ConnectionName",
        "variable" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionName",
          "marshallLocationName" : "connectionName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionState",
        "c2jName" : "connectionState",
        "c2jShape" : "ConnectionState",
        "variable" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionState",
          "marshallLocationName" : "connectionState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ConnectionState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
        "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
        "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
        "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
      }, {
        "documentation" : "",
        "name" : "Region",
        "c2jName" : "region",
        "c2jShape" : "Region",
        "variable" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "region",
          "marshallLocationName" : "region",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param region */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param bandwidth */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "PartnerName",
        "c2jName" : "partnerName",
        "c2jShape" : "PartnerName",
        "variable" : {
          "variableName" : "partnerName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "partnerName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "partnerName",
          "marshallLocationName" : "partnerName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param partnerName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "connection",
        "variableType" : "Connection",
        "variableDeclarationType" : "Connection",
        "documentation" : null,
        "simpleType" : "Connection",
        "variableSetterType" : "Connection"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Region" : {
          "documentation" : "",
          "name" : "Region",
          "c2jName" : "region",
          "c2jShape" : "Region",
          "variable" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "region",
            "marshallLocationName" : "region",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param region */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionName" : {
          "documentation" : "",
          "name" : "ConnectionName",
          "c2jName" : "connectionName",
          "c2jShape" : "ConnectionName",
          "variable" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionName",
            "marshallLocationName" : "connectionName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionState" : {
          "documentation" : "",
          "name" : "ConnectionState",
          "c2jName" : "connectionState",
          "c2jShape" : "ConnectionState",
          "variable" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionState",
            "marshallLocationName" : "connectionState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ConnectionState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionState \n@see ConnectionState*/",
          "getterDocumentation" : "/**\n@return \n@see ConnectionState*/",
          "fluentSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/",
          "varargSetterDocumentation" : "/**\n@param connectionState \n@return Returns a reference to this object so that method calls can be chained together.\n@see ConnectionState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "PartnerName" : {
          "documentation" : "",
          "name" : "PartnerName",
          "c2jName" : "partnerName",
          "c2jShape" : "PartnerName",
          "variable" : {
            "variableName" : "partnerName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "partnerName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "partnerName",
            "marshallLocationName" : "partnerName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param partnerName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param partnerName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Bandwidth" : {
          "documentation" : "",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param bandwidth */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreatePublicVirtualInterfaceRequest" : {
      "c2jName" : "CreatePublicVirtualInterfaceRequest",
      "documentation" : "<p>Container for the parameters to the CreatePublicVirtualInterface operation.</p>",
      "shapeName" : "CreatePublicVirtualInterfaceRequest",
      "deprecated" : false,
      "required" : [ "connectionId", "newPublicVirtualInterface" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>",
        "name" : "NewPublicVirtualInterface",
        "c2jName" : "newPublicVirtualInterface",
        "c2jShape" : "NewPublicVirtualInterface",
        "variable" : {
          "variableName" : "newPublicVirtualInterface",
          "variableType" : "NewPublicVirtualInterface",
          "variableDeclarationType" : "NewPublicVirtualInterface",
          "documentation" : "<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>",
          "simpleType" : "NewPublicVirtualInterface",
          "variableSetterType" : "NewPublicVirtualInterface"
        },
        "setterModel" : {
          "variableName" : "newPublicVirtualInterface",
          "variableType" : "NewPublicVirtualInterface",
          "variableDeclarationType" : "NewPublicVirtualInterface",
          "documentation" : "",
          "simpleType" : "NewPublicVirtualInterface",
          "variableSetterType" : "NewPublicVirtualInterface"
        },
        "getterModel" : {
          "returnType" : "NewPublicVirtualInterface",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "newPublicVirtualInterface",
          "marshallLocationName" : "newPublicVirtualInterface",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>\n@param newPublicVirtualInterface Detailed information for the public virtual interface to be created.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>\n@return Detailed information for the public virtual interface to be created.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>\n@param newPublicVirtualInterface Detailed information for the public virtual interface to be created.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>\n@param newPublicVirtualInterface Detailed information for the public virtual interface to be created.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createPublicVirtualInterfaceRequest",
        "variableType" : "CreatePublicVirtualInterfaceRequest",
        "variableDeclarationType" : "CreatePublicVirtualInterfaceRequest",
        "documentation" : null,
        "simpleType" : "CreatePublicVirtualInterfaceRequest",
        "variableSetterType" : "CreatePublicVirtualInterfaceRequest"
      },
      "marshaller" : {
        "action" : "CreatePublicVirtualInterface",
        "verb" : "POST",
        "target" : "OvertureService.CreatePublicVirtualInterface",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NewPublicVirtualInterface" : {
          "documentation" : "<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>",
          "name" : "NewPublicVirtualInterface",
          "c2jName" : "newPublicVirtualInterface",
          "c2jShape" : "NewPublicVirtualInterface",
          "variable" : {
            "variableName" : "newPublicVirtualInterface",
            "variableType" : "NewPublicVirtualInterface",
            "variableDeclarationType" : "NewPublicVirtualInterface",
            "documentation" : "<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>",
            "simpleType" : "NewPublicVirtualInterface",
            "variableSetterType" : "NewPublicVirtualInterface"
          },
          "setterModel" : {
            "variableName" : "newPublicVirtualInterface",
            "variableType" : "NewPublicVirtualInterface",
            "variableDeclarationType" : "NewPublicVirtualInterface",
            "documentation" : "",
            "simpleType" : "NewPublicVirtualInterface",
            "variableSetterType" : "NewPublicVirtualInterface"
          },
          "getterModel" : {
            "returnType" : "NewPublicVirtualInterface",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "newPublicVirtualInterface",
            "marshallLocationName" : "newPublicVirtualInterface",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>\n@param newPublicVirtualInterface Detailed information for the public virtual interface to be created.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>\n@return Detailed information for the public virtual interface to be created.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>\n@param newPublicVirtualInterface Detailed information for the public virtual interface to be created.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Detailed information for the public virtual interface to be created.</p> <p>Default: None</p>\n@param newPublicVirtualInterface Detailed information for the public virtual interface to be created.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeConnectionsRequest" : {
      "c2jName" : "DescribeConnectionsRequest",
      "documentation" : "<p>Container for the parameters to the DescribeConnections operation.</p>",
      "shapeName" : "DescribeConnectionsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeConnectionsRequest",
        "variableType" : "DescribeConnectionsRequest",
        "variableDeclarationType" : "DescribeConnectionsRequest",
        "documentation" : null,
        "simpleType" : "DescribeConnectionsRequest",
        "variableSetterType" : "DescribeConnectionsRequest"
      },
      "marshaller" : {
        "action" : "DescribeConnections",
        "verb" : "POST",
        "target" : "OvertureService.DescribeConnections",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AllocatePublicVirtualInterfaceResult" : {
      "c2jName" : "VirtualInterface",
      "documentation" : "<p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>",
      "shapeName" : "AllocatePublicVirtualInterfaceResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param ownerAccount */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceType",
        "c2jName" : "virtualInterfaceType",
        "c2jShape" : "VirtualInterfaceType",
        "variable" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceType",
          "marshallLocationName" : "virtualInterfaceType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceType */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualInterfaceState",
        "c2jName" : "virtualInterfaceState",
        "c2jShape" : "VirtualInterfaceState",
        "variable" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceState",
          "marshallLocationName" : "virtualInterfaceState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "VirtualInterfaceState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
        "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
      }, {
        "documentation" : "<p>Information for generating the customer router configuration.</p>",
        "name" : "CustomerRouterConfig",
        "c2jName" : "customerRouterConfig",
        "c2jShape" : "RouterConfig",
        "variable" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerRouterConfig",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerRouterConfig",
          "marshallLocationName" : "customerRouterConfig",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
        "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
        "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualGatewayId",
        "c2jName" : "virtualGatewayId",
        "c2jShape" : "VirtualGatewayId",
        "variable" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayId",
          "marshallLocationName" : "virtualGatewayId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualGatewayId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "RouteFilterPrefixes",
        "c2jName" : "routeFilterPrefixes",
        "c2jShape" : "RouteFilterPrefixList",
        "variable" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "setterModel" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<RouteFilterPrefix>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "routeFilterPrefixes",
          "marshallLocationName" : "routeFilterPrefixes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "RouteFilterPrefix",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RouteFilterPrefix",
            "variable" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "getterModel" : {
              "returnType" : "RouteFilterPrefix",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "RouteFilterPrefix",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<RouteFilterPrefix>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "allocatePublicVirtualInterfaceResult",
        "variableType" : "AllocatePublicVirtualInterfaceResult",
        "variableDeclarationType" : "AllocatePublicVirtualInterfaceResult",
        "documentation" : null,
        "simpleType" : "AllocatePublicVirtualInterfaceResult",
        "variableSetterType" : "AllocatePublicVirtualInterfaceResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceState" : {
          "documentation" : "",
          "name" : "VirtualInterfaceState",
          "c2jName" : "virtualInterfaceState",
          "c2jShape" : "VirtualInterfaceState",
          "variable" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceState",
            "marshallLocationName" : "virtualInterfaceState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "VirtualInterfaceState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
          "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
        },
        "OwnerAccount" : {
          "documentation" : "",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param ownerAccount */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param ownerAccount \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RouteFilterPrefixes" : {
          "documentation" : "",
          "name" : "RouteFilterPrefixes",
          "c2jName" : "routeFilterPrefixes",
          "c2jShape" : "RouteFilterPrefixList",
          "variable" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "setterModel" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<RouteFilterPrefix>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "routeFilterPrefixes",
            "marshallLocationName" : "routeFilterPrefixes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "RouteFilterPrefix",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RouteFilterPrefix",
              "variable" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "getterModel" : {
                "returnType" : "RouteFilterPrefix",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "RouteFilterPrefix",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<RouteFilterPrefix>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerRouterConfig" : {
          "documentation" : "<p>Information for generating the customer router configuration.</p>",
          "name" : "CustomerRouterConfig",
          "c2jName" : "customerRouterConfig",
          "c2jShape" : "RouterConfig",
          "variable" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Information for generating the customer router configuration.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerRouterConfig",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerRouterConfig",
            "marshallLocationName" : "customerRouterConfig",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.*/",
          "getterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@return Information for generating the customer router configuration.*/",
          "fluentSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Information for generating the customer router configuration.</p>\n@param customerRouterConfig Information for generating the customer router configuration.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceType" : {
          "documentation" : "",
          "name" : "VirtualInterfaceType",
          "c2jName" : "virtualInterfaceType",
          "c2jShape" : "VirtualInterfaceType",
          "variable" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceType",
            "marshallLocationName" : "virtualInterfaceType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceType */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceType \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualGatewayId" : {
          "documentation" : "",
          "name" : "VirtualGatewayId",
          "c2jName" : "virtualGatewayId",
          "c2jShape" : "VirtualGatewayId",
          "variable" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayId",
            "marshallLocationName" : "virtualGatewayId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualGatewayId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ConfirmPublicVirtualInterfaceRequest" : {
      "c2jName" : "ConfirmPublicVirtualInterfaceRequest",
      "documentation" : "<p>Container for the parameters to the ConfirmPublicVirtualInterface operation.</p>",
      "shapeName" : "ConfirmPublicVirtualInterfaceRequest",
      "deprecated" : false,
      "required" : [ "virtualInterfaceId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "confirmPublicVirtualInterfaceRequest",
        "variableType" : "ConfirmPublicVirtualInterfaceRequest",
        "variableDeclarationType" : "ConfirmPublicVirtualInterfaceRequest",
        "documentation" : null,
        "simpleType" : "ConfirmPublicVirtualInterfaceRequest",
        "variableSetterType" : "ConfirmPublicVirtualInterfaceRequest"
      },
      "marshaller" : {
        "action" : "ConfirmPublicVirtualInterface",
        "verb" : "POST",
        "target" : "OvertureService.ConfirmPublicVirtualInterface",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "VirtualGateway" : {
      "c2jName" : "VirtualGateway",
      "documentation" : "<p>You can create one or more AWS Direct Connect private virtual interfaces linking to your virtual private gateway.</p> <p>Virtual private gateways can be managed using the Amazon Virtual Private Cloud (Amazon VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">Amazon EC2 CreateVpnGateway action</a>.</p>",
      "shapeName" : "VirtualGateway",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualGatewayId",
        "c2jName" : "virtualGatewayId",
        "c2jShape" : "VirtualGatewayId",
        "variable" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayId",
          "marshallLocationName" : "virtualGatewayId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualGatewayId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "VirtualGatewayState",
        "c2jName" : "virtualGatewayState",
        "c2jShape" : "VirtualGatewayState",
        "variable" : {
          "variableName" : "virtualGatewayState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayState",
          "marshallLocationName" : "virtualGatewayState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualGatewayState */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualGatewayState \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualGatewayState \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "virtualGateway",
        "variableType" : "VirtualGateway",
        "variableDeclarationType" : "VirtualGateway",
        "documentation" : null,
        "simpleType" : "VirtualGateway",
        "variableSetterType" : "VirtualGateway"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualGatewayState" : {
          "documentation" : "",
          "name" : "VirtualGatewayState",
          "c2jName" : "virtualGatewayState",
          "c2jShape" : "VirtualGatewayState",
          "variable" : {
            "variableName" : "virtualGatewayState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayState",
            "marshallLocationName" : "virtualGatewayState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualGatewayState */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualGatewayState \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualGatewayState \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualGatewayId" : {
          "documentation" : "",
          "name" : "VirtualGatewayId",
          "c2jName" : "virtualGatewayId",
          "c2jShape" : "VirtualGatewayId",
          "variable" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayId",
            "marshallLocationName" : "virtualGatewayId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualGatewayId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualGatewayId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "AllocatePrivateVirtualInterfaceRequest" : {
      "c2jName" : "AllocatePrivateVirtualInterfaceRequest",
      "documentation" : "<p>Container for the parameters to the AllocatePrivateVirtualInterface operation.</p>",
      "shapeName" : "AllocatePrivateVirtualInterfaceRequest",
      "deprecated" : false,
      "required" : [ "connectionId", "ownerAccount", "newPrivateVirtualInterfaceAllocation" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>\n@return The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>",
        "name" : "OwnerAccount",
        "c2jName" : "ownerAccount",
        "c2jShape" : "OwnerAccount",
        "variable" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "ownerAccount",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ownerAccount",
          "marshallLocationName" : "ownerAccount",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new private virtual interface.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>\n@return The AWS account that will own the new private virtual interface.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new private virtual interface.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new private virtual interface.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>",
        "name" : "NewPrivateVirtualInterfaceAllocation",
        "c2jName" : "newPrivateVirtualInterfaceAllocation",
        "c2jShape" : "NewPrivateVirtualInterfaceAllocation",
        "variable" : {
          "variableName" : "newPrivateVirtualInterfaceAllocation",
          "variableType" : "NewPrivateVirtualInterfaceAllocation",
          "variableDeclarationType" : "NewPrivateVirtualInterfaceAllocation",
          "documentation" : "<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>",
          "simpleType" : "NewPrivateVirtualInterfaceAllocation",
          "variableSetterType" : "NewPrivateVirtualInterfaceAllocation"
        },
        "setterModel" : {
          "variableName" : "newPrivateVirtualInterfaceAllocation",
          "variableType" : "NewPrivateVirtualInterfaceAllocation",
          "variableDeclarationType" : "NewPrivateVirtualInterfaceAllocation",
          "documentation" : "",
          "simpleType" : "NewPrivateVirtualInterfaceAllocation",
          "variableSetterType" : "NewPrivateVirtualInterfaceAllocation"
        },
        "getterModel" : {
          "returnType" : "NewPrivateVirtualInterfaceAllocation",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "newPrivateVirtualInterfaceAllocation",
          "marshallLocationName" : "newPrivateVirtualInterfaceAllocation",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPrivateVirtualInterfaceAllocation Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>\n@return Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPrivateVirtualInterfaceAllocation Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPrivateVirtualInterfaceAllocation Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "allocatePrivateVirtualInterfaceRequest",
        "variableType" : "AllocatePrivateVirtualInterfaceRequest",
        "variableDeclarationType" : "AllocatePrivateVirtualInterfaceRequest",
        "documentation" : null,
        "simpleType" : "AllocatePrivateVirtualInterfaceRequest",
        "variableSetterType" : "AllocatePrivateVirtualInterfaceRequest"
      },
      "marshaller" : {
        "action" : "AllocatePrivateVirtualInterface",
        "verb" : "POST",
        "target" : "OvertureService.AllocatePrivateVirtualInterface",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>\n@return The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None</p>\n@param connectionId The connection ID on which the private virtual interface is provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NewPrivateVirtualInterfaceAllocation" : {
          "documentation" : "<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>",
          "name" : "NewPrivateVirtualInterfaceAllocation",
          "c2jName" : "newPrivateVirtualInterfaceAllocation",
          "c2jShape" : "NewPrivateVirtualInterfaceAllocation",
          "variable" : {
            "variableName" : "newPrivateVirtualInterfaceAllocation",
            "variableType" : "NewPrivateVirtualInterfaceAllocation",
            "variableDeclarationType" : "NewPrivateVirtualInterfaceAllocation",
            "documentation" : "<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>",
            "simpleType" : "NewPrivateVirtualInterfaceAllocation",
            "variableSetterType" : "NewPrivateVirtualInterfaceAllocation"
          },
          "setterModel" : {
            "variableName" : "newPrivateVirtualInterfaceAllocation",
            "variableType" : "NewPrivateVirtualInterfaceAllocation",
            "variableDeclarationType" : "NewPrivateVirtualInterfaceAllocation",
            "documentation" : "",
            "simpleType" : "NewPrivateVirtualInterfaceAllocation",
            "variableSetterType" : "NewPrivateVirtualInterfaceAllocation"
          },
          "getterModel" : {
            "returnType" : "NewPrivateVirtualInterfaceAllocation",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "newPrivateVirtualInterfaceAllocation",
            "marshallLocationName" : "newPrivateVirtualInterfaceAllocation",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPrivateVirtualInterfaceAllocation Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>\n@return Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPrivateVirtualInterfaceAllocation Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None</p>\n@param newPrivateVirtualInterfaceAllocation Detailed information for the private virtual interface to be provisioned.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OwnerAccount" : {
          "documentation" : "<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>",
          "name" : "OwnerAccount",
          "c2jName" : "ownerAccount",
          "c2jShape" : "OwnerAccount",
          "variable" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "ownerAccount",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ownerAccount",
            "marshallLocationName" : "ownerAccount",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new private virtual interface.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>\n@return The AWS account that will own the new private virtual interface.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new private virtual interface.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS account that will own the new private virtual interface.</p> <p>Default: None</p>\n@param ownerAccount The AWS account that will own the new private virtual interface.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DeleteConnectionRequest" : {
      "c2jName" : "DeleteConnectionRequest",
      "documentation" : "<p>Container for the parameters to the DeleteConnection operation.</p>",
      "shapeName" : "DeleteConnectionRequest",
      "deprecated" : false,
      "required" : [ "connectionId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "ConnectionId",
        "c2jName" : "connectionId",
        "c2jShape" : "ConnectionId",
        "variable" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "connectionId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "connectionId",
          "marshallLocationName" : "connectionId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param connectionId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteConnectionRequest",
        "variableType" : "DeleteConnectionRequest",
        "variableDeclarationType" : "DeleteConnectionRequest",
        "documentation" : null,
        "simpleType" : "DeleteConnectionRequest",
        "variableSetterType" : "DeleteConnectionRequest"
      },
      "marshaller" : {
        "action" : "DeleteConnection",
        "verb" : "POST",
        "target" : "OvertureService.DeleteConnection",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ConnectionId" : {
          "documentation" : "",
          "name" : "ConnectionId",
          "c2jName" : "connectionId",
          "c2jShape" : "ConnectionId",
          "variable" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "connectionId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "connectionId",
            "marshallLocationName" : "connectionId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param connectionId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param connectionId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ConfirmPrivateVirtualInterfaceRequest" : {
      "c2jName" : "ConfirmPrivateVirtualInterfaceRequest",
      "documentation" : "<p>Container for the parameters to the ConfirmPrivateVirtualInterface operation.</p>",
      "shapeName" : "ConfirmPrivateVirtualInterfaceRequest",
      "deprecated" : false,
      "required" : [ "virtualInterfaceId", "virtualGatewayId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceId",
        "c2jName" : "virtualInterfaceId",
        "c2jShape" : "VirtualInterfaceId",
        "variable" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceId",
          "marshallLocationName" : "virtualInterfaceId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>",
        "name" : "VirtualGatewayId",
        "c2jName" : "virtualGatewayId",
        "c2jShape" : "VirtualGatewayId",
        "variable" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualGatewayId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualGatewayId",
          "marshallLocationName" : "virtualGatewayId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>\n@param virtualGatewayId ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>\n@return ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>\n@param virtualGatewayId ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>\n@param virtualGatewayId ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "confirmPrivateVirtualInterfaceRequest",
        "variableType" : "ConfirmPrivateVirtualInterfaceRequest",
        "variableDeclarationType" : "ConfirmPrivateVirtualInterfaceRequest",
        "documentation" : null,
        "simpleType" : "ConfirmPrivateVirtualInterfaceRequest",
        "variableSetterType" : "ConfirmPrivateVirtualInterfaceRequest"
      },
      "marshaller" : {
        "action" : "ConfirmPrivateVirtualInterface",
        "verb" : "POST",
        "target" : "OvertureService.ConfirmPrivateVirtualInterface",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceId" : {
          "documentation" : "",
          "name" : "VirtualInterfaceId",
          "c2jName" : "virtualInterfaceId",
          "c2jShape" : "VirtualInterfaceId",
          "variable" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceId",
            "marshallLocationName" : "virtualInterfaceId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualGatewayId" : {
          "documentation" : "<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>",
          "name" : "VirtualGatewayId",
          "c2jName" : "virtualGatewayId",
          "c2jShape" : "VirtualGatewayId",
          "variable" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualGatewayId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualGatewayId",
            "marshallLocationName" : "virtualGatewayId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>\n@param virtualGatewayId ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>\n@return ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>\n@param virtualGatewayId ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None</p>\n@param virtualGatewayId ID of the virtual private gateway that will be attached to the virtual interface.</p> <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeConnectionsOnInterconnectRequest" : {
      "c2jName" : "DescribeConnectionsOnInterconnectRequest",
      "documentation" : "<p>Container for the parameters to the DescribeConnectionsOnInterconnect operation.</p>",
      "shapeName" : "DescribeConnectionsOnInterconnectRequest",
      "deprecated" : false,
      "required" : [ "interconnectId" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>",
        "name" : "InterconnectId",
        "c2jName" : "interconnectId",
        "c2jShape" : "InterconnectId",
        "variable" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectId",
          "marshallLocationName" : "interconnectId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None*/",
        "getterDocumentation" : "/**<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>\n@return ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None*/",
        "fluentSetterDocumentation" : "/**<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeConnectionsOnInterconnectRequest",
        "variableType" : "DescribeConnectionsOnInterconnectRequest",
        "variableDeclarationType" : "DescribeConnectionsOnInterconnectRequest",
        "documentation" : null,
        "simpleType" : "DescribeConnectionsOnInterconnectRequest",
        "variableSetterType" : "DescribeConnectionsOnInterconnectRequest"
      },
      "marshaller" : {
        "action" : "DescribeConnectionsOnInterconnect",
        "verb" : "POST",
        "target" : "OvertureService.DescribeConnectionsOnInterconnect",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "InterconnectId" : {
          "documentation" : "<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>",
          "name" : "InterconnectId",
          "c2jName" : "interconnectId",
          "c2jShape" : "InterconnectId",
          "variable" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectId",
            "marshallLocationName" : "interconnectId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None*/",
          "getterDocumentation" : "/**<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>\n@return ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None*/",
          "fluentSetterDocumentation" : "/**<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None</p>\n@param interconnectId ID of the interconnect on which a list of connection is provisioned.</p> <p>Example: dxcon-abc123</p> <p>Default: None\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "CreateInterconnectResult" : {
      "c2jName" : "Interconnect",
      "documentation" : "<p>An interconnect is a connection that can host other connections.</p> <p>Like a standard AWS Direct Connect connection, an interconnect represents the physical connection between an AWS Direct Connect partner's network and a specific Direct Connect location. An AWS Direct Connect partner who owns an interconnect can provision hosted connections on the interconnect for their end customers, thereby providing the end customers with connectivity to AWS services.</p> <p>The resources of the interconnect, including bandwidth and VLAN numbers, are shared by all of the hosted connections on the interconnect, and the owner of the interconnect determines how these resources are assigned.</p>",
      "shapeName" : "CreateInterconnectResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "InterconnectId",
        "c2jName" : "interconnectId",
        "c2jShape" : "InterconnectId",
        "variable" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectId",
          "marshallLocationName" : "interconnectId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectId */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "InterconnectName",
        "c2jName" : "interconnectName",
        "c2jShape" : "InterconnectName",
        "variable" : {
          "variableName" : "interconnectName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectName",
          "marshallLocationName" : "interconnectName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param interconnectName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param interconnectName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "InterconnectState",
        "c2jName" : "interconnectState",
        "c2jShape" : "InterconnectState",
        "variable" : {
          "variableName" : "interconnectState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "interconnectState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnectState",
          "marshallLocationName" : "interconnectState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "InterconnectState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param interconnectState \n@see InterconnectState*/",
        "getterDocumentation" : "/**\n@return \n@see InterconnectState*/",
        "fluentSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/",
        "varargSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/"
      }, {
        "documentation" : "",
        "name" : "Region",
        "c2jName" : "region",
        "c2jShape" : "Region",
        "variable" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "region",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "region",
          "marshallLocationName" : "region",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param region */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Location",
        "c2jName" : "location",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "location",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "location",
          "marshallLocationName" : "location",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param location */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Bandwidth",
        "c2jName" : "bandwidth",
        "c2jShape" : "Bandwidth",
        "variable" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "bandwidth",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "bandwidth",
          "marshallLocationName" : "bandwidth",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param bandwidth */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "createInterconnectResult",
        "variableType" : "CreateInterconnectResult",
        "variableDeclarationType" : "CreateInterconnectResult",
        "documentation" : null,
        "simpleType" : "CreateInterconnectResult",
        "variableSetterType" : "CreateInterconnectResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "InterconnectName" : {
          "documentation" : "",
          "name" : "InterconnectName",
          "c2jName" : "interconnectName",
          "c2jShape" : "InterconnectName",
          "variable" : {
            "variableName" : "interconnectName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectName",
            "marshallLocationName" : "interconnectName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param interconnectName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param interconnectName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Region" : {
          "documentation" : "",
          "name" : "Region",
          "c2jName" : "region",
          "c2jShape" : "Region",
          "variable" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "region",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "region",
            "marshallLocationName" : "region",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param region */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param region \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "InterconnectId" : {
          "documentation" : "",
          "name" : "InterconnectId",
          "c2jName" : "interconnectId",
          "c2jShape" : "InterconnectId",
          "variable" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectId",
            "marshallLocationName" : "interconnectId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectId */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param interconnectId \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Location" : {
          "documentation" : "",
          "name" : "Location",
          "c2jName" : "location",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "location",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "location",
            "marshallLocationName" : "location",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param location */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param location \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "InterconnectState" : {
          "documentation" : "",
          "name" : "InterconnectState",
          "c2jName" : "interconnectState",
          "c2jShape" : "InterconnectState",
          "variable" : {
            "variableName" : "interconnectState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "interconnectState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnectState",
            "marshallLocationName" : "interconnectState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "InterconnectState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param interconnectState \n@see InterconnectState*/",
          "getterDocumentation" : "/**\n@return \n@see InterconnectState*/",
          "fluentSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/",
          "varargSetterDocumentation" : "/**\n@param interconnectState \n@return Returns a reference to this object so that method calls can be chained together.\n@see InterconnectState*/"
        },
        "Bandwidth" : {
          "documentation" : "",
          "name" : "Bandwidth",
          "c2jName" : "bandwidth",
          "c2jShape" : "Bandwidth",
          "variable" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "bandwidth",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "bandwidth",
            "marshallLocationName" : "bandwidth",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param bandwidth */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param bandwidth \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "VirtualInterfaceState" : {
      "c2jName" : "VirtualInterfaceState",
      "documentation" : "State of the virtual interface. <ul> <li> <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</li> <li> <b>Verifying</b>: This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.</li> <li> <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</li> <li> <b>Available</b>: A virtual interface that is able to forward traffic.</li> <li> <b>Deleting</b>: A virtual interface is in this state immediately after calling <i>DeleteVirtualInterface</i> until it can no longer forward traffic.</li> <li> <b>Deleted</b>: A virtual interface that cannot forward traffic.</li> <li> <b>Rejected</b>: The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</li> </ul>",
      "shapeName" : "VirtualInterfaceState",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "Confirming",
        "value" : "confirming"
      }, {
        "name" : "Verifying",
        "value" : "verifying"
      }, {
        "name" : "Pending",
        "value" : "pending"
      }, {
        "name" : "Available",
        "value" : "available"
      }, {
        "name" : "Deleting",
        "value" : "deleting"
      }, {
        "name" : "Deleted",
        "value" : "deleted"
      }, {
        "name" : "Rejected",
        "value" : "rejected"
      } ],
      "variable" : {
        "variableName" : "virtualInterfaceState",
        "variableType" : "VirtualInterfaceState",
        "variableDeclarationType" : "VirtualInterfaceState",
        "documentation" : null,
        "simpleType" : "VirtualInterfaceState",
        "variableSetterType" : "VirtualInterfaceState"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "Location" : {
      "c2jName" : "Location",
      "documentation" : "<p>An AWS Direct Connect location where connections and interconnects can be requested.</p>",
      "shapeName" : "Location",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The code used to indicate the AWS Direct Connect location.</p>",
        "name" : "LocationCode",
        "c2jName" : "locationCode",
        "c2jShape" : "LocationCode",
        "variable" : {
          "variableName" : "locationCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The code used to indicate the AWS Direct Connect location.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "locationCode",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "locationCode",
          "marshallLocationName" : "locationCode",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The code used to indicate the AWS Direct Connect location.</p>\n@param locationCode The code used to indicate the AWS Direct Connect location.*/",
        "getterDocumentation" : "/**<p>The code used to indicate the AWS Direct Connect location.</p>\n@return The code used to indicate the AWS Direct Connect location.*/",
        "fluentSetterDocumentation" : "/**<p>The code used to indicate the AWS Direct Connect location.</p>\n@param locationCode The code used to indicate the AWS Direct Connect location.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The code used to indicate the AWS Direct Connect location.</p>\n@param locationCode The code used to indicate the AWS Direct Connect location.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>",
        "name" : "LocationName",
        "c2jName" : "locationName",
        "c2jShape" : "LocationName",
        "variable" : {
          "variableName" : "locationName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "locationName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "locationName",
          "marshallLocationName" : "locationName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n@param locationName The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.*/",
        "getterDocumentation" : "/**<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n@return The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.*/",
        "fluentSetterDocumentation" : "/**<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n@param locationName The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n@param locationName The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "location",
        "variableType" : "Location",
        "variableDeclarationType" : "Location",
        "documentation" : null,
        "simpleType" : "Location",
        "variableSetterType" : "Location"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LocationCode" : {
          "documentation" : "<p>The code used to indicate the AWS Direct Connect location.</p>",
          "name" : "LocationCode",
          "c2jName" : "locationCode",
          "c2jShape" : "LocationCode",
          "variable" : {
            "variableName" : "locationCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The code used to indicate the AWS Direct Connect location.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "locationCode",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "locationCode",
            "marshallLocationName" : "locationCode",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The code used to indicate the AWS Direct Connect location.</p>\n@param locationCode The code used to indicate the AWS Direct Connect location.*/",
          "getterDocumentation" : "/**<p>The code used to indicate the AWS Direct Connect location.</p>\n@return The code used to indicate the AWS Direct Connect location.*/",
          "fluentSetterDocumentation" : "/**<p>The code used to indicate the AWS Direct Connect location.</p>\n@param locationCode The code used to indicate the AWS Direct Connect location.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The code used to indicate the AWS Direct Connect location.</p>\n@param locationCode The code used to indicate the AWS Direct Connect location.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "LocationName" : {
          "documentation" : "<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>",
          "name" : "LocationName",
          "c2jName" : "locationName",
          "c2jShape" : "LocationName",
          "variable" : {
            "variableName" : "locationName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "locationName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "locationName",
            "marshallLocationName" : "locationName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n@param locationName The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.*/",
          "getterDocumentation" : "/**<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n@return The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.*/",
          "fluentSetterDocumentation" : "/**<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n@param locationName The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n@param locationName The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeVirtualGatewaysRequest" : {
      "c2jName" : "DescribeVirtualGatewaysRequest",
      "documentation" : null,
      "shapeName" : "DescribeVirtualGatewaysRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : null,
      "variable" : {
        "variableName" : "describeVirtualGatewaysRequest",
        "variableType" : "DescribeVirtualGatewaysRequest",
        "variableDeclarationType" : "DescribeVirtualGatewaysRequest",
        "documentation" : null,
        "simpleType" : "DescribeVirtualGatewaysRequest",
        "variableSetterType" : "DescribeVirtualGatewaysRequest"
      },
      "marshaller" : {
        "action" : "DescribeVirtualGateways",
        "verb" : "POST",
        "target" : "OvertureService.DescribeVirtualGateways",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DescribeInterconnectsResult" : {
      "c2jName" : "Interconnects",
      "documentation" : "<p>A structure containing a list of interconnects.</p>",
      "shapeName" : "DescribeInterconnectsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A list of interconnects.</p>",
        "name" : "Interconnects",
        "c2jName" : "interconnects",
        "c2jShape" : "InterconnectList",
        "variable" : {
          "variableName" : "interconnects",
          "variableType" : "java.util.List<Interconnect>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Interconnect>",
          "documentation" : "<p>A list of interconnects.</p>",
          "simpleType" : "List<Interconnect>",
          "variableSetterType" : "java.util.Collection<Interconnect>"
        },
        "setterModel" : {
          "variableName" : "interconnects",
          "variableType" : "java.util.List<Interconnect>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Interconnect>",
          "documentation" : "",
          "simpleType" : "List<Interconnect>",
          "variableSetterType" : "java.util.Collection<Interconnect>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Interconnect>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "interconnects",
          "marshallLocationName" : "interconnects",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Interconnect",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Interconnect",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Interconnect",
              "variableDeclarationType" : "Interconnect",
              "documentation" : "",
              "simpleType" : "Interconnect",
              "variableSetterType" : "Interconnect"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Interconnect",
              "variableDeclarationType" : "Interconnect",
              "documentation" : "",
              "simpleType" : "Interconnect",
              "variableSetterType" : "Interconnect"
            },
            "getterModel" : {
              "returnType" : "Interconnect",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Interconnect",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Interconnect>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<Interconnect>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of interconnects.</p>\n@param interconnects A list of interconnects.*/",
        "getterDocumentation" : "/**<p>A list of interconnects.</p>\n@return A list of interconnects.*/",
        "fluentSetterDocumentation" : "/**<p>A list of interconnects.</p>\n@param interconnects A list of interconnects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of interconnects.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setInterconnects(java.util.Collection)} or {@link #withInterconnects(java.util.Collection)} if you want to override the existing values.</p>\n@param interconnects A list of interconnects.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeInterconnectsResult",
        "variableType" : "DescribeInterconnectsResult",
        "variableDeclarationType" : "DescribeInterconnectsResult",
        "documentation" : null,
        "simpleType" : "DescribeInterconnectsResult",
        "variableSetterType" : "DescribeInterconnectsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "Interconnects" : {
          "documentation" : "<p>A list of interconnects.</p>",
          "name" : "Interconnects",
          "c2jName" : "interconnects",
          "c2jShape" : "InterconnectList",
          "variable" : {
            "variableName" : "interconnects",
            "variableType" : "java.util.List<Interconnect>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Interconnect>",
            "documentation" : "<p>A list of interconnects.</p>",
            "simpleType" : "List<Interconnect>",
            "variableSetterType" : "java.util.Collection<Interconnect>"
          },
          "setterModel" : {
            "variableName" : "interconnects",
            "variableType" : "java.util.List<Interconnect>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<Interconnect>",
            "documentation" : "",
            "simpleType" : "List<Interconnect>",
            "variableSetterType" : "java.util.Collection<Interconnect>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Interconnect>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "interconnects",
            "marshallLocationName" : "interconnects",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Interconnect",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Interconnect",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Interconnect",
                "variableDeclarationType" : "Interconnect",
                "documentation" : "",
                "simpleType" : "Interconnect",
                "variableSetterType" : "Interconnect"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Interconnect",
                "variableDeclarationType" : "Interconnect",
                "documentation" : "",
                "simpleType" : "Interconnect",
                "variableSetterType" : "Interconnect"
              },
              "getterModel" : {
                "returnType" : "Interconnect",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Interconnect",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Interconnect>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<Interconnect>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of interconnects.</p>\n@param interconnects A list of interconnects.*/",
          "getterDocumentation" : "/**<p>A list of interconnects.</p>\n@return A list of interconnects.*/",
          "fluentSetterDocumentation" : "/**<p>A list of interconnects.</p>\n@param interconnects A list of interconnects.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of interconnects.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setInterconnects(java.util.Collection)} or {@link #withInterconnects(java.util.Collection)} if you want to override the existing values.</p>\n@param interconnects A list of interconnects.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeVirtualInterfacesResult" : {
      "c2jName" : "VirtualInterfaces",
      "documentation" : "<p>A structure containing a list of virtual interfaces.</p>",
      "shapeName" : "DescribeVirtualInterfacesResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A list of virtual interfaces.</p>",
        "name" : "VirtualInterfaces",
        "c2jName" : "virtualInterfaces",
        "c2jShape" : "VirtualInterfaceList",
        "variable" : {
          "variableName" : "virtualInterfaces",
          "variableType" : "java.util.List<VirtualInterface>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<VirtualInterface>",
          "documentation" : "<p>A list of virtual interfaces.</p>",
          "simpleType" : "List<VirtualInterface>",
          "variableSetterType" : "java.util.Collection<VirtualInterface>"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaces",
          "variableType" : "java.util.List<VirtualInterface>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<VirtualInterface>",
          "documentation" : "",
          "simpleType" : "List<VirtualInterface>",
          "variableSetterType" : "java.util.Collection<VirtualInterface>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<VirtualInterface>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaces",
          "marshallLocationName" : "virtualInterfaces",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "VirtualInterface",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "VirtualInterface",
            "variable" : {
              "variableName" : "member",
              "variableType" : "VirtualInterface",
              "variableDeclarationType" : "VirtualInterface",
              "documentation" : "",
              "simpleType" : "VirtualInterface",
              "variableSetterType" : "VirtualInterface"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "VirtualInterface",
              "variableDeclarationType" : "VirtualInterface",
              "documentation" : "",
              "simpleType" : "VirtualInterface",
              "variableSetterType" : "VirtualInterface"
            },
            "getterModel" : {
              "returnType" : "VirtualInterface",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "VirtualInterface",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<VirtualInterface>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<VirtualInterface>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of virtual interfaces.</p>\n@param virtualInterfaces A list of virtual interfaces.*/",
        "getterDocumentation" : "/**<p>A list of virtual interfaces.</p>\n@return A list of virtual interfaces.*/",
        "fluentSetterDocumentation" : "/**<p>A list of virtual interfaces.</p>\n@param virtualInterfaces A list of virtual interfaces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of virtual interfaces.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setVirtualInterfaces(java.util.Collection)} or {@link #withVirtualInterfaces(java.util.Collection)} if you want to override the existing values.</p>\n@param virtualInterfaces A list of virtual interfaces.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeVirtualInterfacesResult",
        "variableType" : "DescribeVirtualInterfacesResult",
        "variableDeclarationType" : "DescribeVirtualInterfacesResult",
        "documentation" : null,
        "simpleType" : "DescribeVirtualInterfacesResult",
        "variableSetterType" : "DescribeVirtualInterfacesResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaces" : {
          "documentation" : "<p>A list of virtual interfaces.</p>",
          "name" : "VirtualInterfaces",
          "c2jName" : "virtualInterfaces",
          "c2jShape" : "VirtualInterfaceList",
          "variable" : {
            "variableName" : "virtualInterfaces",
            "variableType" : "java.util.List<VirtualInterface>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<VirtualInterface>",
            "documentation" : "<p>A list of virtual interfaces.</p>",
            "simpleType" : "List<VirtualInterface>",
            "variableSetterType" : "java.util.Collection<VirtualInterface>"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaces",
            "variableType" : "java.util.List<VirtualInterface>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<VirtualInterface>",
            "documentation" : "",
            "simpleType" : "List<VirtualInterface>",
            "variableSetterType" : "java.util.Collection<VirtualInterface>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<VirtualInterface>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaces",
            "marshallLocationName" : "virtualInterfaces",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "VirtualInterface",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "VirtualInterface",
              "variable" : {
                "variableName" : "member",
                "variableType" : "VirtualInterface",
                "variableDeclarationType" : "VirtualInterface",
                "documentation" : "",
                "simpleType" : "VirtualInterface",
                "variableSetterType" : "VirtualInterface"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "VirtualInterface",
                "variableDeclarationType" : "VirtualInterface",
                "documentation" : "",
                "simpleType" : "VirtualInterface",
                "variableSetterType" : "VirtualInterface"
              },
              "getterModel" : {
                "returnType" : "VirtualInterface",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "VirtualInterface",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<VirtualInterface>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<VirtualInterface>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of virtual interfaces.</p>\n@param virtualInterfaces A list of virtual interfaces.*/",
          "getterDocumentation" : "/**<p>A list of virtual interfaces.</p>\n@return A list of virtual interfaces.*/",
          "fluentSetterDocumentation" : "/**<p>A list of virtual interfaces.</p>\n@param virtualInterfaces A list of virtual interfaces.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of virtual interfaces.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setVirtualInterfaces(java.util.Collection)} or {@link #withVirtualInterfaces(java.util.Collection)} if you want to override the existing values.</p>\n@param virtualInterfaces A list of virtual interfaces.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "NewPublicVirtualInterfaceAllocation" : {
      "c2jName" : "NewPublicVirtualInterfaceAllocation",
      "documentation" : "<p>A structure containing information about a public virtual interface that will be provisioned on a connection.</p>",
      "shapeName" : "NewPublicVirtualInterfaceAllocation",
      "deprecated" : false,
      "required" : [ "virtualInterfaceName", "vlan", "asn", "amazonAddress", "customerAddress", "routeFilterPrefixes" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceName",
        "c2jName" : "virtualInterfaceName",
        "c2jShape" : "VirtualInterfaceName",
        "variable" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceName",
          "marshallLocationName" : "virtualInterfaceName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceName */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Vlan",
        "c2jName" : "vlan",
        "c2jShape" : "VLAN",
        "variable" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "vlan",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "vlan",
          "marshallLocationName" : "vlan",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param vlan */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "Asn",
        "c2jName" : "asn",
        "c2jShape" : "ASN",
        "variable" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "asn",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "asn",
          "marshallLocationName" : "asn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param asn */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AuthKey",
        "c2jName" : "authKey",
        "c2jShape" : "BGPAuthKey",
        "variable" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "authKey",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "authKey",
          "marshallLocationName" : "authKey",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param authKey */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "AmazonAddress",
        "c2jName" : "amazonAddress",
        "c2jShape" : "AmazonAddress",
        "variable" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "amazonAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "amazonAddress",
          "marshallLocationName" : "amazonAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param amazonAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "CustomerAddress",
        "c2jName" : "customerAddress",
        "c2jShape" : "CustomerAddress",
        "variable" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "customerAddress",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "customerAddress",
          "marshallLocationName" : "customerAddress",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param customerAddress */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "",
        "name" : "RouteFilterPrefixes",
        "c2jName" : "routeFilterPrefixes",
        "c2jShape" : "RouteFilterPrefixList",
        "variable" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "setterModel" : {
          "variableName" : "routeFilterPrefixes",
          "variableType" : "java.util.List<RouteFilterPrefix>",
          "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
          "documentation" : "",
          "simpleType" : "List<RouteFilterPrefix>",
          "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<RouteFilterPrefix>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "routeFilterPrefixes",
          "marshallLocationName" : "routeFilterPrefixes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "RouteFilterPrefix",
          "memberLocationName" : null,
          "implType" : "com.amazonaws.internal.SdkInternalList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "RouteFilterPrefix",
            "variable" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "RouteFilterPrefix",
              "variableDeclarationType" : "RouteFilterPrefix",
              "documentation" : "",
              "simpleType" : "RouteFilterPrefix",
              "variableSetterType" : "RouteFilterPrefix"
            },
            "getterModel" : {
              "returnType" : "RouteFilterPrefix",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "RouteFilterPrefix",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<RouteFilterPrefix>",
          "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
        "getterDocumentation" : "/**\n@return */",
        "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "newPublicVirtualInterfaceAllocation",
        "variableType" : "NewPublicVirtualInterfaceAllocation",
        "variableDeclarationType" : "NewPublicVirtualInterfaceAllocation",
        "documentation" : null,
        "simpleType" : "NewPublicVirtualInterfaceAllocation",
        "variableSetterType" : "NewPublicVirtualInterfaceAllocation"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "CustomerAddress" : {
          "documentation" : "",
          "name" : "CustomerAddress",
          "c2jName" : "customerAddress",
          "c2jShape" : "CustomerAddress",
          "variable" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "customerAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "customerAddress",
            "marshallLocationName" : "customerAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param customerAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param customerAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AuthKey" : {
          "documentation" : "",
          "name" : "AuthKey",
          "c2jName" : "authKey",
          "c2jShape" : "BGPAuthKey",
          "variable" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "authKey",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "authKey",
            "marshallLocationName" : "authKey",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param authKey */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param authKey \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AmazonAddress" : {
          "documentation" : "",
          "name" : "AmazonAddress",
          "c2jName" : "amazonAddress",
          "c2jShape" : "AmazonAddress",
          "variable" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "amazonAddress",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "amazonAddress",
            "marshallLocationName" : "amazonAddress",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param amazonAddress */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param amazonAddress \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Asn" : {
          "documentation" : "",
          "name" : "Asn",
          "c2jName" : "asn",
          "c2jShape" : "ASN",
          "variable" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "asn",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "asn",
            "marshallLocationName" : "asn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param asn */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param asn \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Vlan" : {
          "documentation" : "",
          "name" : "Vlan",
          "c2jName" : "vlan",
          "c2jShape" : "VLAN",
          "variable" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "vlan",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "vlan",
            "marshallLocationName" : "vlan",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param vlan */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param vlan \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "VirtualInterfaceName" : {
          "documentation" : "",
          "name" : "VirtualInterfaceName",
          "c2jName" : "virtualInterfaceName",
          "c2jShape" : "VirtualInterfaceName",
          "variable" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceName",
            "marshallLocationName" : "virtualInterfaceName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceName */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceName \n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "RouteFilterPrefixes" : {
          "documentation" : "",
          "name" : "RouteFilterPrefixes",
          "c2jName" : "routeFilterPrefixes",
          "c2jShape" : "RouteFilterPrefixList",
          "variable" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "setterModel" : {
            "variableName" : "routeFilterPrefixes",
            "variableType" : "java.util.List<RouteFilterPrefix>",
            "variableDeclarationType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>",
            "documentation" : "",
            "simpleType" : "List<RouteFilterPrefix>",
            "variableSetterType" : "java.util.Collection<RouteFilterPrefix>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<RouteFilterPrefix>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "routeFilterPrefixes",
            "marshallLocationName" : "routeFilterPrefixes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "RouteFilterPrefix",
            "memberLocationName" : null,
            "implType" : "com.amazonaws.internal.SdkInternalList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "RouteFilterPrefix",
              "variable" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "RouteFilterPrefix",
                "variableDeclarationType" : "RouteFilterPrefix",
                "documentation" : "",
                "simpleType" : "RouteFilterPrefix",
                "variableSetterType" : "RouteFilterPrefix"
              },
              "getterModel" : {
                "returnType" : "RouteFilterPrefix",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "RouteFilterPrefix",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<RouteFilterPrefix>",
            "templateImplType" : "com.amazonaws.internal.SdkInternalList<RouteFilterPrefix>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**\n@param routeFilterPrefixes */",
          "getterDocumentation" : "/**\n@return */",
          "fluentSetterDocumentation" : "/**\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRouteFilterPrefixes(java.util.Collection)} or {@link #withRouteFilterPrefixes(java.util.Collection)} if you want to override the existing values.</p>\n@param routeFilterPrefixes \n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InterconnectState" : {
      "c2jName" : "InterconnectState",
      "documentation" : "State of the interconnect. <ul> <li> <b>Requested</b>: The initial state of an interconnect. The interconnect stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</li> <li> <b>Pending</b>: The interconnect has been approved, and is being initialized.</li> <li> <b>Available</b>: The network link is up, and the interconnect is ready for use.</li> <li> <b>Down</b>: The network link is down.</li> <li> <b>Deleted</b>: The interconnect has been deleted.</li> </ul>",
      "shapeName" : "InterconnectState",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "Requested",
        "value" : "requested"
      }, {
        "name" : "Pending",
        "value" : "pending"
      }, {
        "name" : "Available",
        "value" : "available"
      }, {
        "name" : "Down",
        "value" : "down"
      }, {
        "name" : "Deleting",
        "value" : "deleting"
      }, {
        "name" : "Deleted",
        "value" : "deleted"
      } ],
      "variable" : {
        "variableName" : "interconnectState",
        "variableType" : "InterconnectState",
        "variableDeclarationType" : "InterconnectState",
        "documentation" : null,
        "simpleType" : "InterconnectState",
        "variableSetterType" : "InterconnectState"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "DeleteVirtualInterfaceResult" : {
      "c2jName" : "DeleteVirtualInterfaceResponse",
      "documentation" : "<p>The response received when DeleteVirtualInterface is called.</p>",
      "shapeName" : "DeleteVirtualInterfaceResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "",
        "name" : "VirtualInterfaceState",
        "c2jName" : "virtualInterfaceState",
        "c2jShape" : "VirtualInterfaceState",
        "variable" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "virtualInterfaceState",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "virtualInterfaceState",
          "marshallLocationName" : "virtualInterfaceState",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "VirtualInterfaceState",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
        "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
        "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
        "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "deleteVirtualInterfaceResult",
        "variableType" : "DeleteVirtualInterfaceResult",
        "variableDeclarationType" : "DeleteVirtualInterfaceResult",
        "documentation" : null,
        "simpleType" : "DeleteVirtualInterfaceResult",
        "variableSetterType" : "DeleteVirtualInterfaceResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "VirtualInterfaceState" : {
          "documentation" : "",
          "name" : "VirtualInterfaceState",
          "c2jName" : "virtualInterfaceState",
          "c2jShape" : "VirtualInterfaceState",
          "variable" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "virtualInterfaceState",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "virtualInterfaceState",
            "marshallLocationName" : "virtualInterfaceState",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "VirtualInterfaceState",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**\n@param virtualInterfaceState \n@see VirtualInterfaceState*/",
          "getterDocumentation" : "/**\n@return \n@see VirtualInterfaceState*/",
          "fluentSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/",
          "varargSetterDocumentation" : "/**\n@param virtualInterfaceState \n@return Returns a reference to this object so that method calls can be chained together.\n@see VirtualInterfaceState*/"
        }
      }
    }
  },
  "customizationConfig" : {
    "requestMetrics" : null,
    "useAutoConstructList" : true,
    "useAutoConstructMap" : false,
    "serviceClientHoldInputStream" : false,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customClientConfiguration" : null,
    "customResponseMetadataClassName" : null,
    "skipInterfaceAdditions" : false,
    "customServiceNameForRequest" : null,
    "requiredParamValidationEnabled" : false,
    "additionalShapeConstructors" : null,
    "simpleMethods" : {
      "DescribeLocations" : {
        "methodForms" : [ [ ] ]
      },
      "DescribeVirtualInterfaces" : {
        "methodForms" : [ [ ] ]
      },
      "DescribeInterconnects" : {
        "methodForms" : [ [ ] ]
      },
      "DescribeVirtualGateways" : {
        "methodForms" : [ [ ] ]
      },
      "DescribeConnections" : {
        "methodForms" : [ [ ] ]
      }
    },
    "authPolicyActions" : {
      "skip" : false,
      "actionPrefix" : null,
      "fileNamePrefix" : "DirectConnect"
    },
    "customCodeTemplates" : null,
    "operationModifiers" : null,
    "shapeSubstitutions" : null,
    "shapeModifiers" : null
  },
  "defaultClientConfiguration" : "com.amazonaws.PredefinedClientConfigurations.defaultConfig()"
}