{
  "metadata" : {
    "apiVersion" : "2012-08-10",
    "exceptionUnmarshallerImpl" : null,
    "protocol" : "json",
    "checksumFormat" : null,
    "documentation" : "<fullname>Amazon DynamoDB Streams</fullname> <p>This is the Amazon DynamoDB Streams API Reference. This guide describes the low-level API actions for accessing streams and processing stream records. For information about application development with DynamoDB Streams, see the <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide//Streams.html\">Amazon DynamoDB Developer Guide</a>.</p> <p>Note that this document is intended for use with the following DynamoDB documentation:</p> <ul> <li> <p> <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/\">Amazon DynamoDB Developer Guide</a> </p> </li> <li> <p> <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/\">Amazon DynamoDB API Reference</a> </p> </li> </ul> <p>The following are short descriptions of each low-level DynamoDB Streams API action, organized by function.</p> <ul> <li><p><i>DescribeStream</i> - Returns detailed information about a particular stream.</p></li> <li> <p><i>GetRecords</i> - Retrieves the stream records from within a shard.</p> </li> <li> <p><i>GetShardIterator</i> - Returns information on how to retrieve the streams record from a shard with a given shard ID.</p> </li> <li> <p><i>ListStreams</i> - Returns a list of all the streams associated with the current AWS account and endpoint.</p> </li> </ul>",
    "defaultEndpoint" : "https://streams.dynamodb.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "streams.dynamodb.us-east-1.amazonaws.com",
    "syncInterface" : "AmazonDynamoDBStreams",
    "syncClient" : "AmazonDynamoDBStreamsClient",
    "asyncInterface" : "AmazonDynamoDBStreamsAsync",
    "asyncClient" : "AmazonDynamoDBStreamsAsyncClient",
    "packageName" : "com.amazonaws.services.dynamodbv2",
    "packagePath" : "com/amazonaws/services/dynamodbv2",
    "serviceAbbreviation" : null,
    "serviceFullName" : "Amazon DynamoDB Streams",
    "hasApiWithStreamInput" : false,
    "jsonContentVersion" : "application/x-amz-json-1.0",
    "endpointPrefix" : "streams.dynamodb",
    "signingName" : "dynamodb",
    "serviceName" : "Amazon DynamoDB Streams",
    "jsonProtocol" : true,
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "protocolDefaultExceptionUnmarshallerType" : "JsonErrorUnmarshaller"
  },
  "operations" : {
    "DescribeStream" : {
      "documentation" : "<p>Returns information about a stream, including the current status of the stream, its Amazon Resource Name (ARN), the composition of its shards, and its corresponding DynamoDB table.</p> <note><p>You can call <i>DescribeStream</i> at a maximum rate of 10 times per second.</p></note> <p>Each shard in the stream has a <code>SequenceNumberRange</code> associated with it. If the <code>SequenceNumberRange</code> has a <code>StartingSequenceNumber</code> but no <code>EndingSequenceNumber</code>, then the shard is still open (able to receive more stream records). If both <code>StartingSequenceNumber</code> and <code>EndingSequenceNumber</code> are present, the that shared is closed and can no longer receive more data.</p>",
      "operationName" : "DescribeStream",
      "deprecated" : false,
      "input" : {
        "variableName" : "describeStreamRequest",
        "variableType" : "DescribeStreamRequest",
        "variableDeclarationType" : "DescribeStreamRequest",
        "documentation" : "<p>Represents the input of a <i>DescribeStream</i> operation.</p>",
        "simpleType" : "DescribeStreamRequest",
        "variableSetterType" : "DescribeStreamRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "DescribeStreamResult",
        "documentation" : "<p>Represents the output of a <i>DescribeStream</i> operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The operation tried to access a nonexistent stream. </p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>An error occurred on the server side.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "asyncDocumentationWithHandler" : "/**<p>Returns information about a stream, including the current status of the stream, its Amazon Resource Name (ARN), the composition of its shards, and its corresponding DynamoDB table.</p> <note><p>You can call <i>DescribeStream</i> at a maximum rate of 10 times per second.</p></note> <p>Each shard in the stream has a <code>SequenceNumberRange</code> associated with it. If the <code>SequenceNumberRange</code> has a <code>StartingSequenceNumber</code> but no <code>EndingSequenceNumber</code>, then the shard is still open (able to receive more stream records). If both <code>StartingSequenceNumber</code> and <code>EndingSequenceNumber</code> are present, the that shared is closed and can no longer receive more data.</p>\n@param describeStreamRequest Represents the input of a <i>DescribeStream</i> operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the DescribeStream operation returned by the service.*/",
      "syncDocumentation" : "/**<p>Returns information about a stream, including the current status of the stream, its Amazon Resource Name (ARN), the composition of its shards, and its corresponding DynamoDB table.</p> <note><p>You can call <i>DescribeStream</i> at a maximum rate of 10 times per second.</p></note> <p>Each shard in the stream has a <code>SequenceNumberRange</code> associated with it. If the <code>SequenceNumberRange</code> has a <code>StartingSequenceNumber</code> but no <code>EndingSequenceNumber</code>, then the shard is still open (able to receive more stream records). If both <code>StartingSequenceNumber</code> and <code>EndingSequenceNumber</code> are present, the that shared is closed and can no longer receive more data.</p>\n@param describeStreamRequest Represents the input of a <i>DescribeStream</i> operation.\n@return Result of the DescribeStream operation returned by the service.\n@throws ResourceNotFoundException The operation tried to access a nonexistent stream.\n@throws InternalServerErrorException An error occurred on the server side.*/",
      "asyncDocumentation" : "/**<p>Returns information about a stream, including the current status of the stream, its Amazon Resource Name (ARN), the composition of its shards, and its corresponding DynamoDB table.</p> <note><p>You can call <i>DescribeStream</i> at a maximum rate of 10 times per second.</p></note> <p>Each shard in the stream has a <code>SequenceNumberRange</code> associated with it. If the <code>SequenceNumberRange</code> has a <code>StartingSequenceNumber</code> but no <code>EndingSequenceNumber</code>, then the shard is still open (able to receive more stream records). If both <code>StartingSequenceNumber</code> and <code>EndingSequenceNumber</code> are present, the that shared is closed and can no longer receive more data.</p>\n@param describeStreamRequest Represents the input of a <i>DescribeStream</i> operation.\n@return A Java Future containing the result of the DescribeStream operation returned by the service.*/",
      "syncReturnType" : "DescribeStreamResult",
      "asyncReturnType" : "DescribeStreamResult",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeStreamResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeStreamResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult>",
      "methodName" : "describeStream"
    },
    "GetRecords" : {
      "documentation" : "<p>Retrieves the stream records from a given shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard iterator specifies the position in the shard from which you want to start reading stream records sequentially. If there are no stream records available in the portion of the shard that the iterator points to, <code>GetRecords</code> returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains stream records.</p> <note><p><function>GetRecords</function> can retrieve a maximum of 1 MB of data or 2000 stream records, whichever comes first.</p></note>",
      "operationName" : "GetRecords",
      "deprecated" : false,
      "input" : {
        "variableName" : "getRecordsRequest",
        "variableType" : "GetRecordsRequest",
        "variableDeclarationType" : "GetRecordsRequest",
        "documentation" : "<p>Represents the input of a <i>GetRecords</i> operation.</p>",
        "simpleType" : "GetRecordsRequest",
        "variableSetterType" : "GetRecordsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetRecordsResult",
        "documentation" : "<p>Represents the output of a <i>GetRecords</i> operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The operation tried to access a nonexistent stream. </p>"
      }, {
        "exceptionName" : "LimitExceededException",
        "documentation" : "<p>Your request rate is too high. The AWS SDKs for DynamoDB automatically retry requests that receive this exception. Your request is eventually successful, unless your retry queue is too large to finish. Reduce the frequency of requests and use exponential backoff. For more information, go to <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#APIRetries\">Error Retries and Exponential Backoff</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>An error occurred on the server side.</p>"
      }, {
        "exceptionName" : "ExpiredIteratorException",
        "documentation" : "<p>The shard iterator has expired and can no longer be used to retrieve stream records. A shard iterator expires 15 minutes after it is retrieved using the <i>GetShardIterator</i> action.</p>"
      }, {
        "exceptionName" : "TrimmedDataAccessException",
        "documentation" : "<p>The operation attempted to read past the oldest stream record in a shard.</p> <p>In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream. You might receive a TrimmedDataAccessException if:</p> <ul> <li>You request a shard iterator with a sequence number older than the trim point (24 hours).</li> <li>You obtain a shard iterator, but before you use the iterator in a <i>GetRecords</i> request, a stream record in the shard exceeds the 24 hour period and is trimmed. This causes the iterator to access a record that no longer exists.</li> </ul>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "asyncDocumentationWithHandler" : "/**<p>Retrieves the stream records from a given shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard iterator specifies the position in the shard from which you want to start reading stream records sequentially. If there are no stream records available in the portion of the shard that the iterator points to, <code>GetRecords</code> returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains stream records.</p> <note><p><function>GetRecords</function> can retrieve a maximum of 1 MB of data or 2000 stream records, whichever comes first.</p></note>\n@param getRecordsRequest Represents the input of a <i>GetRecords</i> operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetRecords operation returned by the service.*/",
      "syncDocumentation" : "/**<p>Retrieves the stream records from a given shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard iterator specifies the position in the shard from which you want to start reading stream records sequentially. If there are no stream records available in the portion of the shard that the iterator points to, <code>GetRecords</code> returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains stream records.</p> <note><p><function>GetRecords</function> can retrieve a maximum of 1 MB of data or 2000 stream records, whichever comes first.</p></note>\n@param getRecordsRequest Represents the input of a <i>GetRecords</i> operation.\n@return Result of the GetRecords operation returned by the service.\n@throws ResourceNotFoundException The operation tried to access a nonexistent stream.\n@throws LimitExceededException Your request rate is too high. The AWS SDKs for DynamoDB automatically retry requests that receive this exception. Your request is eventually successful, unless your retry queue is too large to finish. Reduce the frequency of requests and use exponential backoff. For more information, go to <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#APIRetries\">Error Retries and Exponential Backoff</a> in the <i>Amazon DynamoDB Developer Guide</i>.\n@throws InternalServerErrorException An error occurred on the server side.\n@throws ExpiredIteratorException The shard iterator has expired and can no longer be used to retrieve stream records. A shard iterator expires 15 minutes after it is retrieved using the <i>GetShardIterator</i> action.\n@throws TrimmedDataAccessException The operation attempted to read past the oldest stream record in a shard.</p> <p>In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream. You might receive a TrimmedDataAccessException if:</p> <ul> <li>You request a shard iterator with a sequence number older than the trim point (24 hours).</li> <li>You obtain a shard iterator, but before you use the iterator in a <i>GetRecords</i> request, a stream record in the shard exceeds the 24 hour period and is trimmed. This causes the iterator to access a record that no longer exists.</li>*/",
      "asyncDocumentation" : "/**<p>Retrieves the stream records from a given shard.</p> <p>Specify a shard iterator using the <code>ShardIterator</code> parameter. The shard iterator specifies the position in the shard from which you want to start reading stream records sequentially. If there are no stream records available in the portion of the shard that the iterator points to, <code>GetRecords</code> returns an empty list. Note that it might take multiple calls to get to a portion of the shard that contains stream records.</p> <note><p><function>GetRecords</function> can retrieve a maximum of 1 MB of data or 2000 stream records, whichever comes first.</p></note>\n@param getRecordsRequest Represents the input of a <i>GetRecords</i> operation.\n@return A Java Future containing the result of the GetRecords operation returned by the service.*/",
      "syncReturnType" : "GetRecordsResult",
      "asyncReturnType" : "GetRecordsResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetRecordsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetRecordsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetRecordsRequest, GetRecordsResult>",
      "methodName" : "getRecords"
    },
    "GetShardIterator" : {
      "documentation" : "<p>Returns a shard iterator. A shard iterator provides information about how to retrieve the stream records from within a shard. Use the shard iterator in a subsequent <code>GetRecords</code> request to read the stream records from the shard.</p> <note><p>A shard iterator expires 15 minutes after it is returned to the requester.</p></note>",
      "operationName" : "GetShardIterator",
      "deprecated" : false,
      "input" : {
        "variableName" : "getShardIteratorRequest",
        "variableType" : "GetShardIteratorRequest",
        "variableDeclarationType" : "GetShardIteratorRequest",
        "documentation" : "<p>Represents the input of a <i>GetShardIterator</i> operation.</p>",
        "simpleType" : "GetShardIteratorRequest",
        "variableSetterType" : "GetShardIteratorRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "GetShardIteratorResult",
        "documentation" : "<p>Represents the output of a <i>GetShardIterator</i> operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The operation tried to access a nonexistent stream. </p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>An error occurred on the server side.</p>"
      }, {
        "exceptionName" : "TrimmedDataAccessException",
        "documentation" : "<p>The operation attempted to read past the oldest stream record in a shard.</p> <p>In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream. You might receive a TrimmedDataAccessException if:</p> <ul> <li>You request a shard iterator with a sequence number older than the trim point (24 hours).</li> <li>You obtain a shard iterator, but before you use the iterator in a <i>GetRecords</i> request, a stream record in the shard exceeds the 24 hour period and is trimmed. This causes the iterator to access a record that no longer exists.</li> </ul>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "asyncDocumentationWithHandler" : "/**<p>Returns a shard iterator. A shard iterator provides information about how to retrieve the stream records from within a shard. Use the shard iterator in a subsequent <code>GetRecords</code> request to read the stream records from the shard.</p> <note><p>A shard iterator expires 15 minutes after it is returned to the requester.</p></note>\n@param getShardIteratorRequest Represents the input of a <i>GetShardIterator</i> operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the GetShardIterator operation returned by the service.*/",
      "syncDocumentation" : "/**<p>Returns a shard iterator. A shard iterator provides information about how to retrieve the stream records from within a shard. Use the shard iterator in a subsequent <code>GetRecords</code> request to read the stream records from the shard.</p> <note><p>A shard iterator expires 15 minutes after it is returned to the requester.</p></note>\n@param getShardIteratorRequest Represents the input of a <i>GetShardIterator</i> operation.\n@return Result of the GetShardIterator operation returned by the service.\n@throws ResourceNotFoundException The operation tried to access a nonexistent stream.\n@throws InternalServerErrorException An error occurred on the server side.\n@throws TrimmedDataAccessException The operation attempted to read past the oldest stream record in a shard.</p> <p>In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream. You might receive a TrimmedDataAccessException if:</p> <ul> <li>You request a shard iterator with a sequence number older than the trim point (24 hours).</li> <li>You obtain a shard iterator, but before you use the iterator in a <i>GetRecords</i> request, a stream record in the shard exceeds the 24 hour period and is trimmed. This causes the iterator to access a record that no longer exists.</li>*/",
      "asyncDocumentation" : "/**<p>Returns a shard iterator. A shard iterator provides information about how to retrieve the stream records from within a shard. Use the shard iterator in a subsequent <code>GetRecords</code> request to read the stream records from the shard.</p> <note><p>A shard iterator expires 15 minutes after it is returned to the requester.</p></note>\n@param getShardIteratorRequest Represents the input of a <i>GetShardIterator</i> operation.\n@return A Java Future containing the result of the GetShardIterator operation returned by the service.*/",
      "syncReturnType" : "GetShardIteratorResult",
      "asyncReturnType" : "GetShardIteratorResult",
      "asyncFutureType" : "java.util.concurrent.Future<GetShardIteratorResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<GetShardIteratorResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetShardIteratorRequest, GetShardIteratorResult>",
      "methodName" : "getShardIterator"
    },
    "ListStreams" : {
      "documentation" : "<p>Returns an array of stream ARNs associated with the current account and endpoint. If the <code>TableName</code> parameter is present, then <i>ListStreams</i> will return only the streams ARNs for that table.</p> <note><p>You can call <i>ListStreams</i> at a maximum rate of 5 times per second.</p></note>",
      "operationName" : "ListStreams",
      "deprecated" : false,
      "input" : {
        "variableName" : "listStreamsRequest",
        "variableType" : "ListStreamsRequest",
        "variableDeclarationType" : "ListStreamsRequest",
        "documentation" : "<p>Represents the input of a <i>ListStreams</i> operation.</p>",
        "simpleType" : "ListStreamsRequest",
        "variableSetterType" : "ListStreamsRequest"
      },
      "inputStreamPropertyName" : null,
      "returnType" : {
        "returnType" : "ListStreamsResult",
        "documentation" : "<p>Represents the output of a <i>ListStreams</i> operation.</p>"
      },
      "exceptions" : [ {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>The operation tried to access a nonexistent stream. </p>"
      }, {
        "exceptionName" : "InternalServerErrorException",
        "documentation" : "<p>An error occurred on the server side.</p>"
      } ],
      "hasBlobMemberAsPayload" : false,
      "asyncDocumentationWithHandler" : "/**<p>Returns an array of stream ARNs associated with the current account and endpoint. If the <code>TableName</code> parameter is present, then <i>ListStreams</i> will return only the streams ARNs for that table.</p> <note><p>You can call <i>ListStreams</i> at a maximum rate of 5 times per second.</p></note>\n@param listStreamsRequest Represents the input of a <i>ListStreams</i> operation.\n@param asyncHandler Asynchronous callback handler for events in the lifecycle of the request. Users can provide an implementation of the callback methods in this interface to receive notification of successful or unsuccessful completion of the operation.\n@return A Java Future containing the result of the ListStreams operation returned by the service.*/",
      "syncDocumentation" : "/**<p>Returns an array of stream ARNs associated with the current account and endpoint. If the <code>TableName</code> parameter is present, then <i>ListStreams</i> will return only the streams ARNs for that table.</p> <note><p>You can call <i>ListStreams</i> at a maximum rate of 5 times per second.</p></note>\n@param listStreamsRequest Represents the input of a <i>ListStreams</i> operation.\n@return Result of the ListStreams operation returned by the service.\n@throws ResourceNotFoundException The operation tried to access a nonexistent stream.\n@throws InternalServerErrorException An error occurred on the server side.*/",
      "asyncDocumentation" : "/**<p>Returns an array of stream ARNs associated with the current account and endpoint. If the <code>TableName</code> parameter is present, then <i>ListStreams</i> will return only the streams ARNs for that table.</p> <note><p>You can call <i>ListStreams</i> at a maximum rate of 5 times per second.</p></note>\n@param listStreamsRequest Represents the input of a <i>ListStreams</i> operation.\n@return A Java Future containing the result of the ListStreams operation returned by the service.*/",
      "syncReturnType" : "ListStreamsResult",
      "asyncReturnType" : "ListStreamsResult",
      "asyncFutureType" : "java.util.concurrent.Future<ListStreamsResult>",
      "asyncCallableType" : "java.util.concurrent.Callable<ListStreamsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult>",
      "methodName" : "listStreams"
    }
  },
  "shapes" : {
    "DescribeStreamRequest" : {
      "c2jName" : "DescribeStreamInput",
      "documentation" : "<p>Represents the input of a <i>DescribeStream</i> operation.</p>",
      "shapeName" : "DescribeStreamRequest",
      "deprecated" : false,
      "required" : [ "StreamArn" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
        "name" : "StreamArn",
        "c2jName" : "StreamArn",
        "c2jShape" : "StreamArn",
        "variable" : {
          "variableName" : "streamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamArn",
          "marshallLocationName" : "StreamArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.*/",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@return The Amazon Resource Name (ARN) for the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The maximum number of shard objects to return. The upper limit is 100.</p>",
        "name" : "Limit",
        "c2jName" : "Limit",
        "c2jShape" : "PositiveIntegerObject",
        "variable" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of shard objects to return. The upper limit is 100.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Limit",
          "marshallLocationName" : "Limit",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of shard objects to return. The upper limit is 100.</p>\n@param limit The maximum number of shard objects to return. The upper limit is 100.*/",
        "getterDocumentation" : "/**<p>The maximum number of shard objects to return. The upper limit is 100.</p>\n@return The maximum number of shard objects to return. The upper limit is 100.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of shard objects to return. The upper limit is 100.</p>\n@param limit The maximum number of shard objects to return. The upper limit is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of shard objects to return. The upper limit is 100.</p>\n@param limit The maximum number of shard objects to return. The upper limit is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>",
        "name" : "ExclusiveStartShardId",
        "c2jName" : "ExclusiveStartShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "exclusiveStartShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "exclusiveStartShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ExclusiveStartShardId",
          "marshallLocationName" : "ExclusiveStartShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>\n@param exclusiveStartShardId The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation.*/",
        "getterDocumentation" : "/**<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>\n@return The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>\n@param exclusiveStartShardId The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>\n@param exclusiveStartShardId The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeStreamRequest",
        "variableType" : "DescribeStreamRequest",
        "variableDeclarationType" : "DescribeStreamRequest",
        "documentation" : null,
        "simpleType" : "DescribeStreamRequest",
        "variableSetterType" : "DescribeStreamRequest"
      },
      "marshaller" : {
        "action" : "DescribeStream",
        "verb" : "POST",
        "target" : "DynamoDBStreams_20120810.DescribeStream",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ExclusiveStartShardId" : {
          "documentation" : "<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>",
          "name" : "ExclusiveStartShardId",
          "c2jName" : "ExclusiveStartShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "exclusiveStartShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "exclusiveStartShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ExclusiveStartShardId",
            "marshallLocationName" : "ExclusiveStartShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>\n@param exclusiveStartShardId The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation.*/",
          "getterDocumentation" : "/**<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>\n@return The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>\n@param exclusiveStartShardId The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation. </p>\n@param exclusiveStartShardId The shard ID of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedShardId</code> in the previous operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamArn" : {
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
          "name" : "StreamArn",
          "c2jName" : "StreamArn",
          "c2jShape" : "StreamArn",
          "variable" : {
            "variableName" : "streamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamArn",
            "marshallLocationName" : "StreamArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.*/",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@return The Amazon Resource Name (ARN) for the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Limit" : {
          "documentation" : "<p>The maximum number of shard objects to return. The upper limit is 100.</p>",
          "name" : "Limit",
          "c2jName" : "Limit",
          "c2jShape" : "PositiveIntegerObject",
          "variable" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of shard objects to return. The upper limit is 100.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Limit",
            "marshallLocationName" : "Limit",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of shard objects to return. The upper limit is 100.</p>\n@param limit The maximum number of shard objects to return. The upper limit is 100.*/",
          "getterDocumentation" : "/**<p>The maximum number of shard objects to return. The upper limit is 100.</p>\n@return The maximum number of shard objects to return. The upper limit is 100.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of shard objects to return. The upper limit is 100.</p>\n@param limit The maximum number of shard objects to return. The upper limit is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of shard objects to return. The upper limit is 100.</p>\n@param limit The maximum number of shard objects to return. The upper limit is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "SequenceNumberRange" : {
      "c2jName" : "SequenceNumberRange",
      "documentation" : "<p>The beginning and ending sequence numbers for the stream records contained within a shard.</p>",
      "shapeName" : "SequenceNumberRange",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The first sequence number.</p>",
        "name" : "StartingSequenceNumber",
        "c2jName" : "StartingSequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "startingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The first sequence number.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "startingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StartingSequenceNumber",
          "marshallLocationName" : "StartingSequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The first sequence number.</p>\n@param startingSequenceNumber The first sequence number.*/",
        "getterDocumentation" : "/**<p>The first sequence number.</p>\n@return The first sequence number.*/",
        "fluentSetterDocumentation" : "/**<p>The first sequence number.</p>\n@param startingSequenceNumber The first sequence number.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The first sequence number.</p>\n@param startingSequenceNumber The first sequence number.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The last sequence number.</p>",
        "name" : "EndingSequenceNumber",
        "c2jName" : "EndingSequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "endingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The last sequence number.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "endingSequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "EndingSequenceNumber",
          "marshallLocationName" : "EndingSequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The last sequence number.</p>\n@param endingSequenceNumber The last sequence number.*/",
        "getterDocumentation" : "/**<p>The last sequence number.</p>\n@return The last sequence number.*/",
        "fluentSetterDocumentation" : "/**<p>The last sequence number.</p>\n@param endingSequenceNumber The last sequence number.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The last sequence number.</p>\n@param endingSequenceNumber The last sequence number.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "sequenceNumberRange",
        "variableType" : "SequenceNumberRange",
        "variableDeclarationType" : "SequenceNumberRange",
        "documentation" : null,
        "simpleType" : "SequenceNumberRange",
        "variableSetterType" : "SequenceNumberRange"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StartingSequenceNumber" : {
          "documentation" : "<p>The first sequence number.</p>",
          "name" : "StartingSequenceNumber",
          "c2jName" : "StartingSequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "startingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The first sequence number.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "startingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StartingSequenceNumber",
            "marshallLocationName" : "StartingSequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The first sequence number.</p>\n@param startingSequenceNumber The first sequence number.*/",
          "getterDocumentation" : "/**<p>The first sequence number.</p>\n@return The first sequence number.*/",
          "fluentSetterDocumentation" : "/**<p>The first sequence number.</p>\n@param startingSequenceNumber The first sequence number.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The first sequence number.</p>\n@param startingSequenceNumber The first sequence number.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "EndingSequenceNumber" : {
          "documentation" : "<p>The last sequence number.</p>",
          "name" : "EndingSequenceNumber",
          "c2jName" : "EndingSequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "endingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The last sequence number.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "endingSequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "EndingSequenceNumber",
            "marshallLocationName" : "EndingSequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The last sequence number.</p>\n@param endingSequenceNumber The last sequence number.*/",
          "getterDocumentation" : "/**<p>The last sequence number.</p>\n@return The last sequence number.*/",
          "fluentSetterDocumentation" : "/**<p>The last sequence number.</p>\n@param endingSequenceNumber The last sequence number.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The last sequence number.</p>\n@param endingSequenceNumber The last sequence number.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ShardIteratorType" : {
      "c2jName" : "ShardIteratorType",
      "documentation" : "",
      "shapeName" : "ShardIteratorType",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "TRIM_HORIZON",
        "value" : "TRIM_HORIZON"
      }, {
        "name" : "LATEST",
        "value" : "LATEST"
      }, {
        "name" : "AT_SEQUENCE_NUMBER",
        "value" : "AT_SEQUENCE_NUMBER"
      }, {
        "name" : "AFTER_SEQUENCE_NUMBER",
        "value" : "AFTER_SEQUENCE_NUMBER"
      } ],
      "variable" : {
        "variableName" : "shardIteratorType",
        "variableType" : "ShardIteratorType",
        "variableDeclarationType" : "ShardIteratorType",
        "documentation" : null,
        "simpleType" : "ShardIteratorType",
        "variableSetterType" : "ShardIteratorType"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "StreamViewType" : {
      "c2jName" : "StreamViewType",
      "documentation" : "",
      "shapeName" : "StreamViewType",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "NEW_IMAGE",
        "value" : "NEW_IMAGE"
      }, {
        "name" : "OLD_IMAGE",
        "value" : "OLD_IMAGE"
      }, {
        "name" : "NEW_AND_OLD_IMAGES",
        "value" : "NEW_AND_OLD_IMAGES"
      }, {
        "name" : "KEYS_ONLY",
        "value" : "KEYS_ONLY"
      } ],
      "variable" : {
        "variableName" : "streamViewType",
        "variableType" : "StreamViewType",
        "variableDeclarationType" : "StreamViewType",
        "documentation" : null,
        "simpleType" : "StreamViewType",
        "variableSetterType" : "StreamViewType"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : true,
        "skipGeneratingMarshaller" : true,
        "skipGeneratingUnmarshaller" : true
      },
      "membersAsMap" : { }
    },
    "Shard" : {
      "c2jName" : "Shard",
      "documentation" : "<p>A uniquely identified group of stream records within a stream.</p>",
      "shapeName" : "Shard",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The system-generated identifier for this shard.</p>",
        "name" : "ShardId",
        "c2jName" : "ShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The system-generated identifier for this shard.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardId",
          "marshallLocationName" : "ShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The system-generated identifier for this shard.</p>\n@param shardId The system-generated identifier for this shard.*/",
        "getterDocumentation" : "/**<p>The system-generated identifier for this shard.</p>\n@return The system-generated identifier for this shard.*/",
        "fluentSetterDocumentation" : "/**<p>The system-generated identifier for this shard.</p>\n@param shardId The system-generated identifier for this shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The system-generated identifier for this shard.</p>\n@param shardId The system-generated identifier for this shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
        "name" : "SequenceNumberRange",
        "c2jName" : "SequenceNumberRange",
        "c2jShape" : "SequenceNumberRange",
        "variable" : {
          "variableName" : "sequenceNumberRange",
          "variableType" : "SequenceNumberRange",
          "variableDeclarationType" : "SequenceNumberRange",
          "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
          "simpleType" : "SequenceNumberRange",
          "variableSetterType" : "SequenceNumberRange"
        },
        "setterModel" : {
          "variableName" : "sequenceNumberRange",
          "variableType" : "SequenceNumberRange",
          "variableDeclarationType" : "SequenceNumberRange",
          "documentation" : "",
          "simpleType" : "SequenceNumberRange",
          "variableSetterType" : "SequenceNumberRange"
        },
        "getterModel" : {
          "returnType" : "SequenceNumberRange",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SequenceNumberRange",
          "marshallLocationName" : "SequenceNumberRange",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.*/",
        "getterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@return The range of possible sequence numbers for the shard.*/",
        "fluentSetterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID of the current shard's parent.</p>",
        "name" : "ParentShardId",
        "c2jName" : "ParentShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "parentShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the current shard's parent.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "parentShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ParentShardId",
          "marshallLocationName" : "ParentShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the current shard's parent.</p>\n@param parentShardId The shard ID of the current shard's parent.*/",
        "getterDocumentation" : "/**<p>The shard ID of the current shard's parent.</p>\n@return The shard ID of the current shard's parent.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the current shard's parent.</p>\n@param parentShardId The shard ID of the current shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the current shard's parent.</p>\n@param parentShardId The shard ID of the current shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "shard",
        "variableType" : "Shard",
        "variableDeclarationType" : "Shard",
        "documentation" : null,
        "simpleType" : "Shard",
        "variableSetterType" : "Shard"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ParentShardId" : {
          "documentation" : "<p>The shard ID of the current shard's parent.</p>",
          "name" : "ParentShardId",
          "c2jName" : "ParentShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "parentShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the current shard's parent.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "parentShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ParentShardId",
            "marshallLocationName" : "ParentShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the current shard's parent.</p>\n@param parentShardId The shard ID of the current shard's parent.*/",
          "getterDocumentation" : "/**<p>The shard ID of the current shard's parent.</p>\n@return The shard ID of the current shard's parent.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the current shard's parent.</p>\n@param parentShardId The shard ID of the current shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the current shard's parent.</p>\n@param parentShardId The shard ID of the current shard's parent.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SequenceNumberRange" : {
          "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
          "name" : "SequenceNumberRange",
          "c2jName" : "SequenceNumberRange",
          "c2jShape" : "SequenceNumberRange",
          "variable" : {
            "variableName" : "sequenceNumberRange",
            "variableType" : "SequenceNumberRange",
            "variableDeclarationType" : "SequenceNumberRange",
            "documentation" : "<p>The range of possible sequence numbers for the shard.</p>",
            "simpleType" : "SequenceNumberRange",
            "variableSetterType" : "SequenceNumberRange"
          },
          "setterModel" : {
            "variableName" : "sequenceNumberRange",
            "variableType" : "SequenceNumberRange",
            "variableDeclarationType" : "SequenceNumberRange",
            "documentation" : "",
            "simpleType" : "SequenceNumberRange",
            "variableSetterType" : "SequenceNumberRange"
          },
          "getterModel" : {
            "returnType" : "SequenceNumberRange",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SequenceNumberRange",
            "marshallLocationName" : "SequenceNumberRange",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.*/",
          "getterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@return The range of possible sequence numbers for the shard.*/",
          "fluentSetterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The range of possible sequence numbers for the shard.</p>\n@param sequenceNumberRange The range of possible sequence numbers for the shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ShardId" : {
          "documentation" : "<p>The system-generated identifier for this shard.</p>",
          "name" : "ShardId",
          "c2jName" : "ShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The system-generated identifier for this shard.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardId",
            "marshallLocationName" : "ShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The system-generated identifier for this shard.</p>\n@param shardId The system-generated identifier for this shard.*/",
          "getterDocumentation" : "/**<p>The system-generated identifier for this shard.</p>\n@return The system-generated identifier for this shard.*/",
          "fluentSetterDocumentation" : "/**<p>The system-generated identifier for this shard.</p>\n@param shardId The system-generated identifier for this shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The system-generated identifier for this shard.</p>\n@param shardId The system-generated identifier for this shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "InternalServerErrorException" : {
      "c2jName" : "InternalServerError",
      "documentation" : "<p>An error occurred on the server side.</p>",
      "shapeName" : "InternalServerErrorException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "internalServerErrorException",
        "variableType" : "InternalServerErrorException",
        "variableDeclarationType" : "InternalServerErrorException",
        "documentation" : null,
        "simpleType" : "InternalServerErrorException",
        "variableSetterType" : "InternalServerErrorException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "InternalServerError",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : true,
        "skipGeneratingMarshaller" : true,
        "skipGeneratingUnmarshaller" : true
      },
      "membersAsMap" : { }
    },
    "AttributeValue" : {
      "c2jName" : "AttributeValue",
      "documentation" : "<p>Represents the data for an attribute. You can set one, and only one, of the elements.</p> <p>Each attribute in an item is a name-value pair. An attribute can be single-valued or multi-valued set. For example, a book item can have title and authors attributes. Each book has one title but can have many authors. The multi-valued attribute is a set; duplicate values are not allowed. </p>",
      "shapeName" : "AttributeValue",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A String data type.</p>",
        "name" : "S",
        "c2jName" : "S",
        "c2jShape" : "StringAttributeValue",
        "variable" : {
          "variableName" : "s",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A String data type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "s",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "S",
          "marshallLocationName" : "S",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A String data type.</p>\n@param s A String data type.*/",
        "getterDocumentation" : "/**<p>A String data type.</p>\n@return A String data type.*/",
        "fluentSetterDocumentation" : "/**<p>A String data type.</p>\n@param s A String data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A String data type.</p>\n@param s A String data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A Number data type.</p>",
        "name" : "N",
        "c2jName" : "N",
        "c2jShape" : "NumberAttributeValue",
        "variable" : {
          "variableName" : "n",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A Number data type.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "n",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "N",
          "marshallLocationName" : "N",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A Number data type.</p>\n@param n A Number data type.*/",
        "getterDocumentation" : "/**<p>A Number data type.</p>\n@return A Number data type.*/",
        "fluentSetterDocumentation" : "/**<p>A Number data type.</p>\n@param n A Number data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A Number data type.</p>\n@param n A Number data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A Binary data type.</p>",
        "name" : "B",
        "c2jName" : "B",
        "c2jShape" : "BinaryAttributeValue",
        "variable" : {
          "variableName" : "b",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "<p>A Binary data type.</p>",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "setterModel" : {
          "variableName" : "b",
          "variableType" : "java.nio.ByteBuffer",
          "variableDeclarationType" : "java.nio.ByteBuffer",
          "documentation" : "",
          "simpleType" : "ByteBuffer",
          "variableSetterType" : "java.nio.ByteBuffer"
        },
        "getterModel" : {
          "returnType" : "java.nio.ByteBuffer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "B",
          "marshallLocationName" : "B",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A Binary data type.</p>\n@param b A Binary data type.*/",
        "getterDocumentation" : "/**<p>A Binary data type.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return A Binary data type.*/",
        "fluentSetterDocumentation" : "/**<p>A Binary data type.</p>\n@param b A Binary data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A Binary data type.</p>\n@param b A Binary data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A String Set data type.</p>",
        "name" : "SS",
        "c2jName" : "SS",
        "c2jShape" : "StringSetAttributeValue",
        "variable" : {
          "variableName" : "sS",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A String Set data type.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "sS",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SS",
          "marshallLocationName" : "SS",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A String Set data type.</p>\n@param sS A String Set data type.*/",
        "getterDocumentation" : "/**<p>A String Set data type.</p>\n@return A String Set data type.*/",
        "fluentSetterDocumentation" : "/**<p>A String Set data type.</p>\n@param sS A String Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A String Set data type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSS(java.util.Collection)} or {@link #withSS(java.util.Collection)} if you want to override the existing values.</p>\n@param sS A String Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A Number Set data type.</p>",
        "name" : "NS",
        "c2jName" : "NS",
        "c2jShape" : "NumberSetAttributeValue",
        "variable" : {
          "variableName" : "nS",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "<p>A Number Set data type.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "setterModel" : {
          "variableName" : "nS",
          "variableType" : "java.util.List<String>",
          "variableDeclarationType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NS",
          "marshallLocationName" : "NS",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "String",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "String",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<String>",
          "templateImplType" : "java.util.ArrayList<String>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A Number Set data type.</p>\n@param nS A Number Set data type.*/",
        "getterDocumentation" : "/**<p>A Number Set data type.</p>\n@return A Number Set data type.*/",
        "fluentSetterDocumentation" : "/**<p>A Number Set data type.</p>\n@param nS A Number Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A Number Set data type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setNS(java.util.Collection)} or {@link #withNS(java.util.Collection)} if you want to override the existing values.</p>\n@param nS A Number Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A Binary Set data type.</p>",
        "name" : "BS",
        "c2jName" : "BS",
        "c2jShape" : "BinarySetAttributeValue",
        "variable" : {
          "variableName" : "bS",
          "variableType" : "java.util.List<java.nio.ByteBuffer>",
          "variableDeclarationType" : "java.util.List<java.nio.ByteBuffer>",
          "documentation" : "<p>A Binary Set data type.</p>",
          "simpleType" : "ByteBuffer>",
          "variableSetterType" : "java.util.Collection<java.nio.ByteBuffer>"
        },
        "setterModel" : {
          "variableName" : "bS",
          "variableType" : "java.util.List<java.nio.ByteBuffer>",
          "variableDeclarationType" : "java.util.List<java.nio.ByteBuffer>",
          "documentation" : "",
          "simpleType" : "ByteBuffer>",
          "variableSetterType" : "java.util.Collection<java.nio.ByteBuffer>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<java.nio.ByteBuffer>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BS",
          "marshallLocationName" : "BS",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "java.nio.ByteBuffer",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : null,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "ByteBuffer",
          "simple" : true,
          "map" : false,
          "templateType" : "java.util.List<java.nio.ByteBuffer>",
          "templateImplType" : "java.util.ArrayList<java.nio.ByteBuffer>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A Binary Set data type.</p>\n@param bS A Binary Set data type.*/",
        "getterDocumentation" : "/**<p>A Binary Set data type.</p>\n@return A Binary Set data type.*/",
        "fluentSetterDocumentation" : "/**<p>A Binary Set data type.</p>\n@param bS A Binary Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A Binary Set data type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBS(java.util.Collection)} or {@link #withBS(java.util.Collection)} if you want to override the existing values.</p>\n@param bS A Binary Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A Map data type.</p>",
        "name" : "M",
        "c2jName" : "M",
        "c2jShape" : "MapAttributeValue",
        "variable" : {
          "variableName" : "m",
          "variableType" : "java.util.Map<String,AttributeValue>",
          "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
          "documentation" : "<p>A Map data type.</p>",
          "simpleType" : "Map<String,AttributeValue>",
          "variableSetterType" : "java.util.Map<String,AttributeValue>"
        },
        "setterModel" : {
          "variableName" : "m",
          "variableType" : "java.util.Map<String,AttributeValue>",
          "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
          "documentation" : "",
          "simpleType" : "Map<String,AttributeValue>",
          "variableSetterType" : "java.util.Map<String,AttributeValue>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,AttributeValue>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "M",
          "marshallLocationName" : "M",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "AttributeValue",
          "valueLocationName" : "value",
          "valueModel" : {
            "documentation" : "",
            "name" : "Value",
            "c2jName" : "value",
            "c2jShape" : "AttributeValue",
            "variable" : {
              "variableName" : "value",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "setterModel" : {
              "variableName" : "value",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "getterModel" : {
              "returnType" : "AttributeValue",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "value",
              "marshallLocationName" : "value",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param value */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "templateType" : "java.util.Map<String,AttributeValue>",
          "templateImplType" : "java.util.HashMap<String,AttributeValue>",
          "keySimple" : true,
          "valueSimple" : false,
          "valueList" : false
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>A Map data type.</p>\n@param m A Map data type.*/",
        "getterDocumentation" : "/**<p>A Map data type.</p>\n@return A Map data type.*/",
        "fluentSetterDocumentation" : "/**<p>A Map data type.</p>\n@param m A Map data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A Map data type.</p>\n@param m A Map data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A List data type.</p>",
        "name" : "L",
        "c2jName" : "L",
        "c2jShape" : "ListAttributeValue",
        "variable" : {
          "variableName" : "l",
          "variableType" : "java.util.List<AttributeValue>",
          "variableDeclarationType" : "java.util.List<AttributeValue>",
          "documentation" : "<p>A List data type.</p>",
          "simpleType" : "List<AttributeValue>",
          "variableSetterType" : "java.util.Collection<AttributeValue>"
        },
        "setterModel" : {
          "variableName" : "l",
          "variableType" : "java.util.List<AttributeValue>",
          "variableDeclarationType" : "java.util.List<AttributeValue>",
          "documentation" : "",
          "simpleType" : "List<AttributeValue>",
          "variableSetterType" : "java.util.Collection<AttributeValue>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<AttributeValue>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "L",
          "marshallLocationName" : "L",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "AttributeValue",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "AttributeValue",
            "variable" : {
              "variableName" : "member",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "getterModel" : {
              "returnType" : "AttributeValue",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "AttributeValue",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<AttributeValue>",
          "templateImplType" : "java.util.ArrayList<AttributeValue>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A List data type.</p>\n@param l A List data type.*/",
        "getterDocumentation" : "/**<p>A List data type.</p>\n@return A List data type.*/",
        "fluentSetterDocumentation" : "/**<p>A List data type.</p>\n@param l A List data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A List data type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setL(java.util.Collection)} or {@link #withL(java.util.Collection)} if you want to override the existing values.</p>\n@param l A List data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A Null data type.</p>",
        "name" : "NULL",
        "c2jName" : "NULL",
        "c2jShape" : "NullAttributeValue",
        "variable" : {
          "variableName" : "nULLValue",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p>A Null data type.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "nULLValue",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NULL",
          "marshallLocationName" : "NULL",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A Null data type.</p>\n@param nULLValue A Null data type.*/",
        "getterDocumentation" : "/**<p>A Null data type.</p>\n@return A Null data type.*/",
        "fluentSetterDocumentation" : "/**<p>A Null data type.</p>\n@param nULLValue A Null data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A Null data type.</p>\n@param nULLValue A Null data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p> A Boolean data type.</p>",
        "name" : "BOOL",
        "c2jName" : "BOOL",
        "c2jShape" : "BooleanAttributeValue",
        "variable" : {
          "variableName" : "bOOL",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "<p> A Boolean data type.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "setterModel" : {
          "variableName" : "bOOL",
          "variableType" : "Boolean",
          "variableDeclarationType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "BOOL",
          "marshallLocationName" : "BOOL",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p> A Boolean data type.</p>\n@param bOOL A Boolean data type.*/",
        "getterDocumentation" : "/**<p> A Boolean data type.</p>\n@return A Boolean data type.*/",
        "fluentSetterDocumentation" : "/**<p> A Boolean data type.</p>\n@param bOOL A Boolean data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p> A Boolean data type.</p>\n@param bOOL A Boolean data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "attributeValue",
        "variableType" : "AttributeValue",
        "variableDeclarationType" : "AttributeValue",
        "documentation" : null,
        "simpleType" : "AttributeValue",
        "variableSetterType" : "AttributeValue"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : true,
        "skipGeneratingMarshaller" : true,
        "skipGeneratingUnmarshaller" : true
      },
      "membersAsMap" : {
        "SS" : {
          "documentation" : "<p>A String Set data type.</p>",
          "name" : "SS",
          "c2jName" : "SS",
          "c2jShape" : "StringSetAttributeValue",
          "variable" : {
            "variableName" : "sS",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A String Set data type.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "sS",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SS",
            "marshallLocationName" : "SS",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A String Set data type.</p>\n@param sS A String Set data type.*/",
          "getterDocumentation" : "/**<p>A String Set data type.</p>\n@return A String Set data type.*/",
          "fluentSetterDocumentation" : "/**<p>A String Set data type.</p>\n@param sS A String Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A String Set data type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setSS(java.util.Collection)} or {@link #withSS(java.util.Collection)} if you want to override the existing values.</p>\n@param sS A String Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "BS" : {
          "documentation" : "<p>A Binary Set data type.</p>",
          "name" : "BS",
          "c2jName" : "BS",
          "c2jShape" : "BinarySetAttributeValue",
          "variable" : {
            "variableName" : "bS",
            "variableType" : "java.util.List<java.nio.ByteBuffer>",
            "variableDeclarationType" : "java.util.List<java.nio.ByteBuffer>",
            "documentation" : "<p>A Binary Set data type.</p>",
            "simpleType" : "ByteBuffer>",
            "variableSetterType" : "java.util.Collection<java.nio.ByteBuffer>"
          },
          "setterModel" : {
            "variableName" : "bS",
            "variableType" : "java.util.List<java.nio.ByteBuffer>",
            "variableDeclarationType" : "java.util.List<java.nio.ByteBuffer>",
            "documentation" : "",
            "simpleType" : "ByteBuffer>",
            "variableSetterType" : "java.util.Collection<java.nio.ByteBuffer>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<java.nio.ByteBuffer>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BS",
            "marshallLocationName" : "BS",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "java.nio.ByteBuffer",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "ByteBuffer",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<java.nio.ByteBuffer>",
            "templateImplType" : "java.util.ArrayList<java.nio.ByteBuffer>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A Binary Set data type.</p>\n@param bS A Binary Set data type.*/",
          "getterDocumentation" : "/**<p>A Binary Set data type.</p>\n@return A Binary Set data type.*/",
          "fluentSetterDocumentation" : "/**<p>A Binary Set data type.</p>\n@param bS A Binary Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A Binary Set data type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setBS(java.util.Collection)} or {@link #withBS(java.util.Collection)} if you want to override the existing values.</p>\n@param bS A Binary Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "B" : {
          "documentation" : "<p>A Binary data type.</p>",
          "name" : "B",
          "c2jName" : "B",
          "c2jShape" : "BinaryAttributeValue",
          "variable" : {
            "variableName" : "b",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "<p>A Binary data type.</p>",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "setterModel" : {
            "variableName" : "b",
            "variableType" : "java.nio.ByteBuffer",
            "variableDeclarationType" : "java.nio.ByteBuffer",
            "documentation" : "",
            "simpleType" : "ByteBuffer",
            "variableSetterType" : "java.nio.ByteBuffer"
          },
          "getterModel" : {
            "returnType" : "java.nio.ByteBuffer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "B",
            "marshallLocationName" : "B",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A Binary data type.</p>\n@param b A Binary data type.*/",
          "getterDocumentation" : "/**<p>A Binary data type.</p>\n<p>\n{@code ByteBuffer}s are stateful. Calling their {@code get} methods changes their {@code position}. We recommend using {@link java.nio.ByteBuffer#asReadOnlyBuffer()} to create a read-only view of the buffer with an independent {@code position}, and calling {@code get} methods on this rather than directly on the returned {@code ByteBuffer}. Doing so will ensure that anyone else using the {@code ByteBuffer} will not be affected by changes to the {@code position}.\n</p>\n@return A Binary data type.*/",
          "fluentSetterDocumentation" : "/**<p>A Binary data type.</p>\n@param b A Binary data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A Binary data type.</p>\n@param b A Binary data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "S" : {
          "documentation" : "<p>A String data type.</p>",
          "name" : "S",
          "c2jName" : "S",
          "c2jShape" : "StringAttributeValue",
          "variable" : {
            "variableName" : "s",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A String data type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "s",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "S",
            "marshallLocationName" : "S",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A String data type.</p>\n@param s A String data type.*/",
          "getterDocumentation" : "/**<p>A String data type.</p>\n@return A String data type.*/",
          "fluentSetterDocumentation" : "/**<p>A String data type.</p>\n@param s A String data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A String data type.</p>\n@param s A String data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "L" : {
          "documentation" : "<p>A List data type.</p>",
          "name" : "L",
          "c2jName" : "L",
          "c2jShape" : "ListAttributeValue",
          "variable" : {
            "variableName" : "l",
            "variableType" : "java.util.List<AttributeValue>",
            "variableDeclarationType" : "java.util.List<AttributeValue>",
            "documentation" : "<p>A List data type.</p>",
            "simpleType" : "List<AttributeValue>",
            "variableSetterType" : "java.util.Collection<AttributeValue>"
          },
          "setterModel" : {
            "variableName" : "l",
            "variableType" : "java.util.List<AttributeValue>",
            "variableDeclarationType" : "java.util.List<AttributeValue>",
            "documentation" : "",
            "simpleType" : "List<AttributeValue>",
            "variableSetterType" : "java.util.Collection<AttributeValue>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<AttributeValue>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "L",
            "marshallLocationName" : "L",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "AttributeValue",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "AttributeValue",
              "variable" : {
                "variableName" : "member",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "getterModel" : {
                "returnType" : "AttributeValue",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "AttributeValue",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<AttributeValue>",
            "templateImplType" : "java.util.ArrayList<AttributeValue>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A List data type.</p>\n@param l A List data type.*/",
          "getterDocumentation" : "/**<p>A List data type.</p>\n@return A List data type.*/",
          "fluentSetterDocumentation" : "/**<p>A List data type.</p>\n@param l A List data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A List data type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setL(java.util.Collection)} or {@link #withL(java.util.Collection)} if you want to override the existing values.</p>\n@param l A List data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "M" : {
          "documentation" : "<p>A Map data type.</p>",
          "name" : "M",
          "c2jName" : "M",
          "c2jShape" : "MapAttributeValue",
          "variable" : {
            "variableName" : "m",
            "variableType" : "java.util.Map<String,AttributeValue>",
            "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
            "documentation" : "<p>A Map data type.</p>",
            "simpleType" : "Map<String,AttributeValue>",
            "variableSetterType" : "java.util.Map<String,AttributeValue>"
          },
          "setterModel" : {
            "variableName" : "m",
            "variableType" : "java.util.Map<String,AttributeValue>",
            "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
            "documentation" : "",
            "simpleType" : "Map<String,AttributeValue>",
            "variableSetterType" : "java.util.Map<String,AttributeValue>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,AttributeValue>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "M",
            "marshallLocationName" : "M",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "AttributeValue",
            "valueLocationName" : "value",
            "valueModel" : {
              "documentation" : "",
              "name" : "Value",
              "c2jName" : "value",
              "c2jShape" : "AttributeValue",
              "variable" : {
                "variableName" : "value",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "setterModel" : {
                "variableName" : "value",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "getterModel" : {
                "returnType" : "AttributeValue",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "value",
                "marshallLocationName" : "value",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param value */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "templateType" : "java.util.Map<String,AttributeValue>",
            "templateImplType" : "java.util.HashMap<String,AttributeValue>",
            "keySimple" : true,
            "valueSimple" : false,
            "valueList" : false
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>A Map data type.</p>\n@param m A Map data type.*/",
          "getterDocumentation" : "/**<p>A Map data type.</p>\n@return A Map data type.*/",
          "fluentSetterDocumentation" : "/**<p>A Map data type.</p>\n@param m A Map data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A Map data type.</p>\n@param m A Map data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NS" : {
          "documentation" : "<p>A Number Set data type.</p>",
          "name" : "NS",
          "c2jName" : "NS",
          "c2jShape" : "NumberSetAttributeValue",
          "variable" : {
            "variableName" : "nS",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "<p>A Number Set data type.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "setterModel" : {
            "variableName" : "nS",
            "variableType" : "java.util.List<String>",
            "variableDeclarationType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NS",
            "marshallLocationName" : "NS",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "String",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : null,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "String",
            "simple" : true,
            "map" : false,
            "templateType" : "java.util.List<String>",
            "templateImplType" : "java.util.ArrayList<String>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A Number Set data type.</p>\n@param nS A Number Set data type.*/",
          "getterDocumentation" : "/**<p>A Number Set data type.</p>\n@return A Number Set data type.*/",
          "fluentSetterDocumentation" : "/**<p>A Number Set data type.</p>\n@param nS A Number Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A Number Set data type.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setNS(java.util.Collection)} or {@link #withNS(java.util.Collection)} if you want to override the existing values.</p>\n@param nS A Number Set data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "N" : {
          "documentation" : "<p>A Number data type.</p>",
          "name" : "N",
          "c2jName" : "N",
          "c2jShape" : "NumberAttributeValue",
          "variable" : {
            "variableName" : "n",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A Number data type.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "n",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "N",
            "marshallLocationName" : "N",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A Number data type.</p>\n@param n A Number data type.*/",
          "getterDocumentation" : "/**<p>A Number data type.</p>\n@return A Number data type.*/",
          "fluentSetterDocumentation" : "/**<p>A Number data type.</p>\n@param n A Number data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A Number data type.</p>\n@param n A Number data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "NULL" : {
          "documentation" : "<p>A Null data type.</p>",
          "name" : "NULL",
          "c2jName" : "NULL",
          "c2jShape" : "NullAttributeValue",
          "variable" : {
            "variableName" : "nULLValue",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p>A Null data type.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "nULLValue",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NULL",
            "marshallLocationName" : "NULL",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A Null data type.</p>\n@param nULLValue A Null data type.*/",
          "getterDocumentation" : "/**<p>A Null data type.</p>\n@return A Null data type.*/",
          "fluentSetterDocumentation" : "/**<p>A Null data type.</p>\n@param nULLValue A Null data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A Null data type.</p>\n@param nULLValue A Null data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "BOOL" : {
          "documentation" : "<p> A Boolean data type.</p>",
          "name" : "BOOL",
          "c2jName" : "BOOL",
          "c2jShape" : "BooleanAttributeValue",
          "variable" : {
            "variableName" : "bOOL",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "<p> A Boolean data type.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "setterModel" : {
            "variableName" : "bOOL",
            "variableType" : "Boolean",
            "variableDeclarationType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "BOOL",
            "marshallLocationName" : "BOOL",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p> A Boolean data type.</p>\n@param bOOL A Boolean data type.*/",
          "getterDocumentation" : "/**<p> A Boolean data type.</p>\n@return A Boolean data type.*/",
          "fluentSetterDocumentation" : "/**<p> A Boolean data type.</p>\n@param bOOL A Boolean data type.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p> A Boolean data type.</p>\n@param bOOL A Boolean data type.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "KeyType" : {
      "c2jName" : "KeyType",
      "documentation" : "",
      "shapeName" : "KeyType",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "HASH",
        "value" : "HASH"
      }, {
        "name" : "RANGE",
        "value" : "RANGE"
      } ],
      "variable" : {
        "variableName" : "keyType",
        "variableType" : "KeyType",
        "variableDeclarationType" : "KeyType",
        "documentation" : null,
        "simpleType" : "KeyType",
        "variableSetterType" : "KeyType"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : true,
        "skipGeneratingMarshaller" : true,
        "skipGeneratingUnmarshaller" : true
      },
      "membersAsMap" : { }
    },
    "StreamDescription" : {
      "c2jName" : "StreamDescription",
      "documentation" : "<p>Represents all of the data describing a particular stream.</p>",
      "shapeName" : "StreamDescription",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
        "name" : "StreamArn",
        "c2jName" : "StreamArn",
        "c2jShape" : "StreamArn",
        "variable" : {
          "variableName" : "streamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamArn",
          "marshallLocationName" : "StreamArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.*/",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@return The Amazon Resource Name (ARN) for the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>",
        "name" : "StreamLabel",
        "c2jName" : "StreamLabel",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "streamLabel",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamLabel",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamLabel",
          "marshallLocationName" : "StreamLabel",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>*/",
        "getterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@return A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>*/",
        "fluentSetterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>",
        "name" : "StreamStatus",
        "c2jName" : "StreamStatus",
        "c2jShape" : "StreamStatus",
        "variable" : {
          "variableName" : "streamStatus",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamStatus",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamStatus",
          "marshallLocationName" : "StreamStatus",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "StreamStatus",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>\n@param streamStatus Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li>\n@see StreamStatus*/",
        "getterDocumentation" : "/**<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>\n@return Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li>\n@see StreamStatus*/",
        "fluentSetterDocumentation" : "/**<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>\n@param streamStatus Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamStatus*/",
        "varargSetterDocumentation" : "/**<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>\n@param streamStatus Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamStatus*/"
      }, {
        "documentation" : "<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>",
        "name" : "StreamViewType",
        "c2jName" : "StreamViewType",
        "c2jShape" : "StreamViewType",
        "variable" : {
          "variableName" : "streamViewType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamViewType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamViewType",
          "marshallLocationName" : "StreamViewType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "StreamViewType",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>\n@param streamViewType Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li>\n@see StreamViewType*/",
        "getterDocumentation" : "/**<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>\n@return Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li>\n@see StreamViewType*/",
        "fluentSetterDocumentation" : "/**<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>\n@param streamViewType Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamViewType*/",
        "varargSetterDocumentation" : "/**<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>\n@param streamViewType Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamViewType*/"
      }, {
        "documentation" : "<p>The date and time when the request to create this stream was issued.</p>",
        "name" : "CreationRequestDateTime",
        "c2jName" : "CreationRequestDateTime",
        "c2jShape" : "Date",
        "variable" : {
          "variableName" : "creationRequestDateTime",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "<p>The date and time when the request to create this stream was issued.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "setterModel" : {
          "variableName" : "creationRequestDateTime",
          "variableType" : "java.util.Date",
          "variableDeclarationType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "CreationRequestDateTime",
          "marshallLocationName" : "CreationRequestDateTime",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The date and time when the request to create this stream was issued.</p>\n@param creationRequestDateTime The date and time when the request to create this stream was issued.*/",
        "getterDocumentation" : "/**<p>The date and time when the request to create this stream was issued.</p>\n@return The date and time when the request to create this stream was issued.*/",
        "fluentSetterDocumentation" : "/**<p>The date and time when the request to create this stream was issued.</p>\n@param creationRequestDateTime The date and time when the request to create this stream was issued.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The date and time when the request to create this stream was issued.</p>\n@param creationRequestDateTime The date and time when the request to create this stream was issued.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The DynamoDB table with which the stream is associated.</p>",
        "name" : "TableName",
        "c2jName" : "TableName",
        "c2jShape" : "TableName",
        "variable" : {
          "variableName" : "tableName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The DynamoDB table with which the stream is associated.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "tableName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "TableName",
          "marshallLocationName" : "TableName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.*/",
        "getterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@return The DynamoDB table with which the stream is associated.*/",
        "fluentSetterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The key attribute(s) of the stream's DynamoDB table.</p>",
        "name" : "KeySchema",
        "c2jName" : "KeySchema",
        "c2jShape" : "KeySchema",
        "variable" : {
          "variableName" : "keySchema",
          "variableType" : "java.util.List<KeySchemaElement>",
          "variableDeclarationType" : "java.util.List<KeySchemaElement>",
          "documentation" : "<p>The key attribute(s) of the stream's DynamoDB table.</p>",
          "simpleType" : "List<KeySchemaElement>",
          "variableSetterType" : "java.util.Collection<KeySchemaElement>"
        },
        "setterModel" : {
          "variableName" : "keySchema",
          "variableType" : "java.util.List<KeySchemaElement>",
          "variableDeclarationType" : "java.util.List<KeySchemaElement>",
          "documentation" : "",
          "simpleType" : "List<KeySchemaElement>",
          "variableSetterType" : "java.util.Collection<KeySchemaElement>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<KeySchemaElement>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "KeySchema",
          "marshallLocationName" : "KeySchema",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "KeySchemaElement",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "KeySchemaElement",
            "variable" : {
              "variableName" : "member",
              "variableType" : "KeySchemaElement",
              "variableDeclarationType" : "KeySchemaElement",
              "documentation" : "",
              "simpleType" : "KeySchemaElement",
              "variableSetterType" : "KeySchemaElement"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "KeySchemaElement",
              "variableDeclarationType" : "KeySchemaElement",
              "documentation" : "",
              "simpleType" : "KeySchemaElement",
              "variableSetterType" : "KeySchemaElement"
            },
            "getterModel" : {
              "returnType" : "KeySchemaElement",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "KeySchemaElement",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<KeySchemaElement>",
          "templateImplType" : "java.util.ArrayList<KeySchemaElement>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The key attribute(s) of the stream's DynamoDB table.</p>\n@param keySchema The key attribute(s) of the stream's DynamoDB table.*/",
        "getterDocumentation" : "/**<p>The key attribute(s) of the stream's DynamoDB table.</p>\n@return The key attribute(s) of the stream's DynamoDB table.*/",
        "fluentSetterDocumentation" : "/**<p>The key attribute(s) of the stream's DynamoDB table.</p>\n@param keySchema The key attribute(s) of the stream's DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The key attribute(s) of the stream's DynamoDB table.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setKeySchema(java.util.Collection)} or {@link #withKeySchema(java.util.Collection)} if you want to override the existing values.</p>\n@param keySchema The key attribute(s) of the stream's DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shards that comprise the stream.</p>",
        "name" : "Shards",
        "c2jName" : "Shards",
        "c2jShape" : "ShardDescriptionList",
        "variable" : {
          "variableName" : "shards",
          "variableType" : "java.util.List<Shard>",
          "variableDeclarationType" : "java.util.List<Shard>",
          "documentation" : "<p>The shards that comprise the stream.</p>",
          "simpleType" : "List<Shard>",
          "variableSetterType" : "java.util.Collection<Shard>"
        },
        "setterModel" : {
          "variableName" : "shards",
          "variableType" : "java.util.List<Shard>",
          "variableDeclarationType" : "java.util.List<Shard>",
          "documentation" : "",
          "simpleType" : "List<Shard>",
          "variableSetterType" : "java.util.Collection<Shard>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Shard>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Shards",
          "marshallLocationName" : "Shards",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Shard",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Shard",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Shard",
              "variableDeclarationType" : "Shard",
              "documentation" : "",
              "simpleType" : "Shard",
              "variableSetterType" : "Shard"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Shard",
              "variableDeclarationType" : "Shard",
              "documentation" : "",
              "simpleType" : "Shard",
              "variableSetterType" : "Shard"
            },
            "getterModel" : {
              "returnType" : "Shard",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Shard",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Shard>",
          "templateImplType" : "java.util.ArrayList<Shard>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@param shards The shards that comprise the stream.*/",
        "getterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@return The shards that comprise the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@param shards The shards that comprise the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setShards(java.util.Collection)} or {@link #withShards(java.util.Collection)} if you want to override the existing values.</p>\n@param shards The shards that comprise the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>",
        "name" : "LastEvaluatedShardId",
        "c2jName" : "LastEvaluatedShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "lastEvaluatedShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "lastEvaluatedShardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "LastEvaluatedShardId",
          "marshallLocationName" : "LastEvaluatedShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>\n@param lastEvaluatedShardId The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.*/",
        "getterDocumentation" : "/**<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>\n@return The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.*/",
        "fluentSetterDocumentation" : "/**<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>\n@param lastEvaluatedShardId The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>\n@param lastEvaluatedShardId The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "streamDescription",
        "variableType" : "StreamDescription",
        "variableDeclarationType" : "StreamDescription",
        "documentation" : null,
        "simpleType" : "StreamDescription",
        "variableSetterType" : "StreamDescription"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StreamLabel" : {
          "documentation" : "<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>",
          "name" : "StreamLabel",
          "c2jName" : "StreamLabel",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "streamLabel",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamLabel",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamLabel",
            "marshallLocationName" : "StreamLabel",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>*/",
          "getterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@return A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>*/",
          "fluentSetterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Shards" : {
          "documentation" : "<p>The shards that comprise the stream.</p>",
          "name" : "Shards",
          "c2jName" : "Shards",
          "c2jShape" : "ShardDescriptionList",
          "variable" : {
            "variableName" : "shards",
            "variableType" : "java.util.List<Shard>",
            "variableDeclarationType" : "java.util.List<Shard>",
            "documentation" : "<p>The shards that comprise the stream.</p>",
            "simpleType" : "List<Shard>",
            "variableSetterType" : "java.util.Collection<Shard>"
          },
          "setterModel" : {
            "variableName" : "shards",
            "variableType" : "java.util.List<Shard>",
            "variableDeclarationType" : "java.util.List<Shard>",
            "documentation" : "",
            "simpleType" : "List<Shard>",
            "variableSetterType" : "java.util.Collection<Shard>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Shard>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Shards",
            "marshallLocationName" : "Shards",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Shard",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Shard",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Shard",
                "variableDeclarationType" : "Shard",
                "documentation" : "",
                "simpleType" : "Shard",
                "variableSetterType" : "Shard"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Shard",
                "variableDeclarationType" : "Shard",
                "documentation" : "",
                "simpleType" : "Shard",
                "variableSetterType" : "Shard"
              },
              "getterModel" : {
                "returnType" : "Shard",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Shard",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Shard>",
            "templateImplType" : "java.util.ArrayList<Shard>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@param shards The shards that comprise the stream.*/",
          "getterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@return The shards that comprise the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n@param shards The shards that comprise the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shards that comprise the stream.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setShards(java.util.Collection)} or {@link #withShards(java.util.Collection)} if you want to override the existing values.</p>\n@param shards The shards that comprise the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "TableName" : {
          "documentation" : "<p>The DynamoDB table with which the stream is associated.</p>",
          "name" : "TableName",
          "c2jName" : "TableName",
          "c2jShape" : "TableName",
          "variable" : {
            "variableName" : "tableName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The DynamoDB table with which the stream is associated.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "tableName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "TableName",
            "marshallLocationName" : "TableName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.*/",
          "getterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@return The DynamoDB table with which the stream is associated.*/",
          "fluentSetterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "KeySchema" : {
          "documentation" : "<p>The key attribute(s) of the stream's DynamoDB table.</p>",
          "name" : "KeySchema",
          "c2jName" : "KeySchema",
          "c2jShape" : "KeySchema",
          "variable" : {
            "variableName" : "keySchema",
            "variableType" : "java.util.List<KeySchemaElement>",
            "variableDeclarationType" : "java.util.List<KeySchemaElement>",
            "documentation" : "<p>The key attribute(s) of the stream's DynamoDB table.</p>",
            "simpleType" : "List<KeySchemaElement>",
            "variableSetterType" : "java.util.Collection<KeySchemaElement>"
          },
          "setterModel" : {
            "variableName" : "keySchema",
            "variableType" : "java.util.List<KeySchemaElement>",
            "variableDeclarationType" : "java.util.List<KeySchemaElement>",
            "documentation" : "",
            "simpleType" : "List<KeySchemaElement>",
            "variableSetterType" : "java.util.Collection<KeySchemaElement>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<KeySchemaElement>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "KeySchema",
            "marshallLocationName" : "KeySchema",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "KeySchemaElement",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "KeySchemaElement",
              "variable" : {
                "variableName" : "member",
                "variableType" : "KeySchemaElement",
                "variableDeclarationType" : "KeySchemaElement",
                "documentation" : "",
                "simpleType" : "KeySchemaElement",
                "variableSetterType" : "KeySchemaElement"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "KeySchemaElement",
                "variableDeclarationType" : "KeySchemaElement",
                "documentation" : "",
                "simpleType" : "KeySchemaElement",
                "variableSetterType" : "KeySchemaElement"
              },
              "getterModel" : {
                "returnType" : "KeySchemaElement",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "KeySchemaElement",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<KeySchemaElement>",
            "templateImplType" : "java.util.ArrayList<KeySchemaElement>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The key attribute(s) of the stream's DynamoDB table.</p>\n@param keySchema The key attribute(s) of the stream's DynamoDB table.*/",
          "getterDocumentation" : "/**<p>The key attribute(s) of the stream's DynamoDB table.</p>\n@return The key attribute(s) of the stream's DynamoDB table.*/",
          "fluentSetterDocumentation" : "/**<p>The key attribute(s) of the stream's DynamoDB table.</p>\n@param keySchema The key attribute(s) of the stream's DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The key attribute(s) of the stream's DynamoDB table.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setKeySchema(java.util.Collection)} or {@link #withKeySchema(java.util.Collection)} if you want to override the existing values.</p>\n@param keySchema The key attribute(s) of the stream's DynamoDB table.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamViewType" : {
          "documentation" : "<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>",
          "name" : "StreamViewType",
          "c2jName" : "StreamViewType",
          "c2jShape" : "StreamViewType",
          "variable" : {
            "variableName" : "streamViewType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamViewType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamViewType",
            "marshallLocationName" : "StreamViewType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "StreamViewType",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>\n@param streamViewType Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li>\n@see StreamViewType*/",
          "getterDocumentation" : "/**<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>\n@return Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li>\n@see StreamViewType*/",
          "fluentSetterDocumentation" : "/**<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>\n@param streamViewType Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamViewType*/",
          "varargSetterDocumentation" : "/**<p>Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li> </ul>\n@param streamViewType Indicates the format of the records within this stream:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of items that were modified in the DynamoDB table.</p></li> <li><p><code>NEW_IMAGE</code> - entire item from the table, as it appeared after they were modified.</p></li> <li><p><code>OLD_IMAGE</code> - entire item from the table, as it appeared before they were modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> - both the new and the old images of the items from the table.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamViewType*/"
        },
        "StreamArn" : {
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
          "name" : "StreamArn",
          "c2jName" : "StreamArn",
          "c2jShape" : "StreamArn",
          "variable" : {
            "variableName" : "streamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamArn",
            "marshallLocationName" : "StreamArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.*/",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@return The Amazon Resource Name (ARN) for the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "CreationRequestDateTime" : {
          "documentation" : "<p>The date and time when the request to create this stream was issued.</p>",
          "name" : "CreationRequestDateTime",
          "c2jName" : "CreationRequestDateTime",
          "c2jShape" : "Date",
          "variable" : {
            "variableName" : "creationRequestDateTime",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "<p>The date and time when the request to create this stream was issued.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "setterModel" : {
            "variableName" : "creationRequestDateTime",
            "variableType" : "java.util.Date",
            "variableDeclarationType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "CreationRequestDateTime",
            "marshallLocationName" : "CreationRequestDateTime",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The date and time when the request to create this stream was issued.</p>\n@param creationRequestDateTime The date and time when the request to create this stream was issued.*/",
          "getterDocumentation" : "/**<p>The date and time when the request to create this stream was issued.</p>\n@return The date and time when the request to create this stream was issued.*/",
          "fluentSetterDocumentation" : "/**<p>The date and time when the request to create this stream was issued.</p>\n@param creationRequestDateTime The date and time when the request to create this stream was issued.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The date and time when the request to create this stream was issued.</p>\n@param creationRequestDateTime The date and time when the request to create this stream was issued.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "LastEvaluatedShardId" : {
          "documentation" : "<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>",
          "name" : "LastEvaluatedShardId",
          "c2jName" : "LastEvaluatedShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "lastEvaluatedShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "lastEvaluatedShardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "LastEvaluatedShardId",
            "marshallLocationName" : "LastEvaluatedShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>\n@param lastEvaluatedShardId The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.*/",
          "getterDocumentation" : "/**<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>\n@return The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.*/",
          "fluentSetterDocumentation" : "/**<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>\n@param lastEvaluatedShardId The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.</p>\n@param lastEvaluatedShardId The shard ID of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedShardId</code> is empty, then the \"last page\" of results has been processed and there is currently no more data to be retrieved.</p> <p>If <code>LastEvaluatedShardId</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedShardId</code> is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamStatus" : {
          "documentation" : "<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>",
          "name" : "StreamStatus",
          "c2jName" : "StreamStatus",
          "c2jShape" : "StreamStatus",
          "variable" : {
            "variableName" : "streamStatus",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamStatus",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamStatus",
            "marshallLocationName" : "StreamStatus",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "StreamStatus",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>\n@param streamStatus Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li>\n@see StreamStatus*/",
          "getterDocumentation" : "/**<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>\n@return Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li>\n@see StreamStatus*/",
          "fluentSetterDocumentation" : "/**<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>\n@param streamStatus Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamStatus*/",
          "varargSetterDocumentation" : "/**<p>Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li> </ul>\n@param streamStatus Indicates the current status of the stream:</p> <ul> <li><p><code>ENABLING</code> - Streams is currently being enabled on the DynamoDB table.</p></li> <li><p><code>ENABLING</code> - the stream is enabled.</p></li> <li><p><code>DISABLING</code> - Streams is currently being disabled on the DynamoDB table.</p></li> <li><p><code>DISABLED</code> - the stream is disabled.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamStatus*/"
        }
      }
    },
    "LimitExceededException" : {
      "c2jName" : "LimitExceededException",
      "documentation" : "<p>Your request rate is too high. The AWS SDKs for DynamoDB automatically retry requests that receive this exception. Your request is eventually successful, unless your retry queue is too large to finish. Reduce the frequency of requests and use exponential backoff. For more information, go to <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#APIRetries\">Error Retries and Exponential Backoff</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>",
      "shapeName" : "LimitExceededException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "limitExceededException",
        "variableType" : "LimitExceededException",
        "variableDeclarationType" : "LimitExceededException",
        "documentation" : null,
        "simpleType" : "LimitExceededException",
        "variableSetterType" : "LimitExceededException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "LimitExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : true,
        "skipGeneratingMarshaller" : true,
        "skipGeneratingUnmarshaller" : true
      },
      "membersAsMap" : { }
    },
    "GetRecordsRequest" : {
      "c2jName" : "GetRecordsInput",
      "documentation" : "<p>Represents the input of a <i>GetRecords</i> operation.</p>",
      "shapeName" : "GetRecordsRequest",
      "deprecated" : false,
      "required" : [ "ShardIterator" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>",
        "name" : "ShardIterator",
        "c2jName" : "ShardIterator",
        "c2jShape" : "ShardIterator",
        "variable" : {
          "variableName" : "shardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardIterator",
          "marshallLocationName" : "ShardIterator",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>\n@param shardIterator A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.*/",
        "getterDocumentation" : "/**<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>\n@return A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.*/",
        "fluentSetterDocumentation" : "/**<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>\n@param shardIterator A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>\n@param shardIterator A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>",
        "name" : "Limit",
        "c2jName" : "Limit",
        "c2jShape" : "PositiveIntegerObject",
        "variable" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Limit",
          "marshallLocationName" : "Limit",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>\n@param limit The maximum number of records to return from the shard. The upper limit is 1000.*/",
        "getterDocumentation" : "/**<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>\n@return The maximum number of records to return from the shard. The upper limit is 1000.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>\n@param limit The maximum number of records to return from the shard. The upper limit is 1000.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>\n@param limit The maximum number of records to return from the shard. The upper limit is 1000.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getRecordsRequest",
        "variableType" : "GetRecordsRequest",
        "variableDeclarationType" : "GetRecordsRequest",
        "documentation" : null,
        "simpleType" : "GetRecordsRequest",
        "variableSetterType" : "GetRecordsRequest"
      },
      "marshaller" : {
        "action" : "GetRecords",
        "verb" : "POST",
        "target" : "DynamoDBStreams_20120810.GetRecords",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ShardIterator" : {
          "documentation" : "<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>",
          "name" : "ShardIterator",
          "c2jName" : "ShardIterator",
          "c2jShape" : "ShardIterator",
          "variable" : {
            "variableName" : "shardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardIterator",
            "marshallLocationName" : "ShardIterator",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>\n@param shardIterator A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.*/",
          "getterDocumentation" : "/**<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>\n@return A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.*/",
          "fluentSetterDocumentation" : "/**<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>\n@param shardIterator A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.</p>\n@param shardIterator A shard iterator that was retrieved from a previous GetShardIterator operation. This iterator can be used to access the stream records in this shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Limit" : {
          "documentation" : "<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>",
          "name" : "Limit",
          "c2jName" : "Limit",
          "c2jShape" : "PositiveIntegerObject",
          "variable" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Limit",
            "marshallLocationName" : "Limit",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>\n@param limit The maximum number of records to return from the shard. The upper limit is 1000.*/",
          "getterDocumentation" : "/**<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>\n@return The maximum number of records to return from the shard. The upper limit is 1000.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>\n@param limit The maximum number of records to return from the shard. The upper limit is 1000.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of records to return from the shard. The upper limit is 1000.</p>\n@param limit The maximum number of records to return from the shard. The upper limit is 1000.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetRecordsResult" : {
      "c2jName" : "GetRecordsOutput",
      "documentation" : "<p>Represents the output of a <i>GetRecords</i> operation.</p>",
      "shapeName" : "GetRecordsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The stream records from the shard, which were retrieved using the shard iterator.</p>",
        "name" : "Records",
        "c2jName" : "Records",
        "c2jShape" : "RecordList",
        "variable" : {
          "variableName" : "records",
          "variableType" : "java.util.List<Record>",
          "variableDeclarationType" : "java.util.List<Record>",
          "documentation" : "<p>The stream records from the shard, which were retrieved using the shard iterator.</p>",
          "simpleType" : "List<Record>",
          "variableSetterType" : "java.util.Collection<Record>"
        },
        "setterModel" : {
          "variableName" : "records",
          "variableType" : "java.util.List<Record>",
          "variableDeclarationType" : "java.util.List<Record>",
          "documentation" : "",
          "simpleType" : "List<Record>",
          "variableSetterType" : "java.util.Collection<Record>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Record>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Records",
          "marshallLocationName" : "Records",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Record",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Record",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Record",
              "variableDeclarationType" : "Record",
              "documentation" : "",
              "simpleType" : "Record",
              "variableSetterType" : "Record"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Record",
              "variableDeclarationType" : "Record",
              "documentation" : "",
              "simpleType" : "Record",
              "variableSetterType" : "Record"
            },
            "getterModel" : {
              "returnType" : "Record",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Record",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Record>",
          "templateImplType" : "java.util.ArrayList<Record>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>The stream records from the shard, which were retrieved using the shard iterator.</p>\n@param records The stream records from the shard, which were retrieved using the shard iterator.*/",
        "getterDocumentation" : "/**<p>The stream records from the shard, which were retrieved using the shard iterator.</p>\n@return The stream records from the shard, which were retrieved using the shard iterator.*/",
        "fluentSetterDocumentation" : "/**<p>The stream records from the shard, which were retrieved using the shard iterator.</p>\n@param records The stream records from the shard, which were retrieved using the shard iterator.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The stream records from the shard, which were retrieved using the shard iterator.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRecords(java.util.Collection)} or {@link #withRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param records The stream records from the shard, which were retrieved using the shard iterator.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>",
        "name" : "NextShardIterator",
        "c2jName" : "NextShardIterator",
        "c2jShape" : "ShardIterator",
        "variable" : {
          "variableName" : "nextShardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "nextShardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NextShardIterator",
          "marshallLocationName" : "NextShardIterator",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.*/",
        "getterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>\n@return The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.*/",
        "fluentSetterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getRecordsResult",
        "variableType" : "GetRecordsResult",
        "variableDeclarationType" : "GetRecordsResult",
        "documentation" : null,
        "simpleType" : "GetRecordsResult",
        "variableSetterType" : "GetRecordsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NextShardIterator" : {
          "documentation" : "<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>",
          "name" : "NextShardIterator",
          "c2jName" : "NextShardIterator",
          "c2jShape" : "ShardIterator",
          "variable" : {
            "variableName" : "nextShardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "nextShardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NextShardIterator",
            "marshallLocationName" : "NextShardIterator",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.*/",
          "getterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>\n@return The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.*/",
          "fluentSetterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.</p>\n@param nextShardIterator The next position in the shard from which to start sequentially reading stream records. If set to <code>null</code>, the shard has been closed and the requested iterator will not return any more data.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Records" : {
          "documentation" : "<p>The stream records from the shard, which were retrieved using the shard iterator.</p>",
          "name" : "Records",
          "c2jName" : "Records",
          "c2jShape" : "RecordList",
          "variable" : {
            "variableName" : "records",
            "variableType" : "java.util.List<Record>",
            "variableDeclarationType" : "java.util.List<Record>",
            "documentation" : "<p>The stream records from the shard, which were retrieved using the shard iterator.</p>",
            "simpleType" : "List<Record>",
            "variableSetterType" : "java.util.Collection<Record>"
          },
          "setterModel" : {
            "variableName" : "records",
            "variableType" : "java.util.List<Record>",
            "variableDeclarationType" : "java.util.List<Record>",
            "documentation" : "",
            "simpleType" : "List<Record>",
            "variableSetterType" : "java.util.Collection<Record>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Record>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Records",
            "marshallLocationName" : "Records",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Record",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Record",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Record",
                "variableDeclarationType" : "Record",
                "documentation" : "",
                "simpleType" : "Record",
                "variableSetterType" : "Record"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Record",
                "variableDeclarationType" : "Record",
                "documentation" : "",
                "simpleType" : "Record",
                "variableSetterType" : "Record"
              },
              "getterModel" : {
                "returnType" : "Record",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Record",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Record>",
            "templateImplType" : "java.util.ArrayList<Record>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>The stream records from the shard, which were retrieved using the shard iterator.</p>\n@param records The stream records from the shard, which were retrieved using the shard iterator.*/",
          "getterDocumentation" : "/**<p>The stream records from the shard, which were retrieved using the shard iterator.</p>\n@return The stream records from the shard, which were retrieved using the shard iterator.*/",
          "fluentSetterDocumentation" : "/**<p>The stream records from the shard, which were retrieved using the shard iterator.</p>\n@param records The stream records from the shard, which were retrieved using the shard iterator.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The stream records from the shard, which were retrieved using the shard iterator.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRecords(java.util.Collection)} or {@link #withRecords(java.util.Collection)} if you want to override the existing values.</p>\n@param records The stream records from the shard, which were retrieved using the shard iterator.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "DescribeStreamResult" : {
      "c2jName" : "DescribeStreamOutput",
      "documentation" : "<p>Represents the output of a <i>DescribeStream</i> operation.</p>",
      "shapeName" : "DescribeStreamResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>",
        "name" : "StreamDescription",
        "c2jName" : "StreamDescription",
        "c2jShape" : "StreamDescription",
        "variable" : {
          "variableName" : "streamDescription",
          "variableType" : "StreamDescription",
          "variableDeclarationType" : "StreamDescription",
          "documentation" : "<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>",
          "simpleType" : "StreamDescription",
          "variableSetterType" : "StreamDescription"
        },
        "setterModel" : {
          "variableName" : "streamDescription",
          "variableType" : "StreamDescription",
          "variableDeclarationType" : "StreamDescription",
          "documentation" : "",
          "simpleType" : "StreamDescription",
          "variableSetterType" : "StreamDescription"
        },
        "getterModel" : {
          "returnType" : "StreamDescription",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamDescription",
          "marshallLocationName" : "StreamDescription",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>\n@param streamDescription A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.*/",
        "getterDocumentation" : "/**<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>\n@return A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.*/",
        "fluentSetterDocumentation" : "/**<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>\n@param streamDescription A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>\n@param streamDescription A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "describeStreamResult",
        "variableType" : "DescribeStreamResult",
        "variableDeclarationType" : "DescribeStreamResult",
        "documentation" : null,
        "simpleType" : "DescribeStreamResult",
        "variableSetterType" : "DescribeStreamResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StreamDescription" : {
          "documentation" : "<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>",
          "name" : "StreamDescription",
          "c2jName" : "StreamDescription",
          "c2jShape" : "StreamDescription",
          "variable" : {
            "variableName" : "streamDescription",
            "variableType" : "StreamDescription",
            "variableDeclarationType" : "StreamDescription",
            "documentation" : "<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>",
            "simpleType" : "StreamDescription",
            "variableSetterType" : "StreamDescription"
          },
          "setterModel" : {
            "variableName" : "streamDescription",
            "variableType" : "StreamDescription",
            "variableDeclarationType" : "StreamDescription",
            "documentation" : "",
            "simpleType" : "StreamDescription",
            "variableSetterType" : "StreamDescription"
          },
          "getterModel" : {
            "returnType" : "StreamDescription",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamDescription",
            "marshallLocationName" : "StreamDescription",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>\n@param streamDescription A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.*/",
          "getterDocumentation" : "/**<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>\n@return A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.*/",
          "fluentSetterDocumentation" : "/**<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>\n@param streamDescription A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.</p>\n@param streamDescription A complete description of the stream, including its creation date and time, the DynamoDB table associated with the stream, the shard IDs within the stream, and the beginning and ending sequence numbers of stream records within the shards.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListStreamsRequest" : {
      "c2jName" : "ListStreamsInput",
      "documentation" : "<p>Represents the input of a <i>ListStreams</i> operation.</p>",
      "shapeName" : "ListStreamsRequest",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>",
        "name" : "TableName",
        "c2jName" : "TableName",
        "c2jShape" : "TableName",
        "variable" : {
          "variableName" : "tableName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "tableName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "TableName",
          "marshallLocationName" : "TableName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>\n@param tableName If this parameter is provided, then only the streams associated with this table name are returned.*/",
        "getterDocumentation" : "/**<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>\n@return If this parameter is provided, then only the streams associated with this table name are returned.*/",
        "fluentSetterDocumentation" : "/**<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>\n@param tableName If this parameter is provided, then only the streams associated with this table name are returned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>\n@param tableName If this parameter is provided, then only the streams associated with this table name are returned.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The maximum number of streams to return. The upper limit is 100.</p>",
        "name" : "Limit",
        "c2jName" : "Limit",
        "c2jShape" : "PositiveIntegerObject",
        "variable" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "<p>The maximum number of streams to return. The upper limit is 100.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "setterModel" : {
          "variableName" : "limit",
          "variableType" : "Integer",
          "variableDeclarationType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Limit",
          "marshallLocationName" : "Limit",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The maximum number of streams to return. The upper limit is 100.</p>\n@param limit The maximum number of streams to return. The upper limit is 100.*/",
        "getterDocumentation" : "/**<p>The maximum number of streams to return. The upper limit is 100.</p>\n@return The maximum number of streams to return. The upper limit is 100.*/",
        "fluentSetterDocumentation" : "/**<p>The maximum number of streams to return. The upper limit is 100.</p>\n@param limit The maximum number of streams to return. The upper limit is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The maximum number of streams to return. The upper limit is 100.</p>\n@param limit The maximum number of streams to return. The upper limit is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>",
        "name" : "ExclusiveStartStreamArn",
        "c2jName" : "ExclusiveStartStreamArn",
        "c2jShape" : "StreamArn",
        "variable" : {
          "variableName" : "exclusiveStartStreamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "exclusiveStartStreamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ExclusiveStartStreamArn",
          "marshallLocationName" : "ExclusiveStartStreamArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>\n@param exclusiveStartStreamArn The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation.*/",
        "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>\n@return The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation.*/",
        "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>\n@param exclusiveStartStreamArn The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>\n@param exclusiveStartStreamArn The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listStreamsRequest",
        "variableType" : "ListStreamsRequest",
        "variableDeclarationType" : "ListStreamsRequest",
        "documentation" : null,
        "simpleType" : "ListStreamsRequest",
        "variableSetterType" : "ListStreamsRequest"
      },
      "marshaller" : {
        "action" : "ListStreams",
        "verb" : "POST",
        "target" : "DynamoDBStreams_20120810.ListStreams",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "TableName" : {
          "documentation" : "<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>",
          "name" : "TableName",
          "c2jName" : "TableName",
          "c2jShape" : "TableName",
          "variable" : {
            "variableName" : "tableName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "tableName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "TableName",
            "marshallLocationName" : "TableName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>\n@param tableName If this parameter is provided, then only the streams associated with this table name are returned.*/",
          "getterDocumentation" : "/**<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>\n@return If this parameter is provided, then only the streams associated with this table name are returned.*/",
          "fluentSetterDocumentation" : "/**<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>\n@param tableName If this parameter is provided, then only the streams associated with this table name are returned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>If this parameter is provided, then only the streams associated with this table name are returned.</p>\n@param tableName If this parameter is provided, then only the streams associated with this table name are returned.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "ExclusiveStartStreamArn" : {
          "documentation" : "<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>",
          "name" : "ExclusiveStartStreamArn",
          "c2jName" : "ExclusiveStartStreamArn",
          "c2jShape" : "StreamArn",
          "variable" : {
            "variableName" : "exclusiveStartStreamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "exclusiveStartStreamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ExclusiveStartStreamArn",
            "marshallLocationName" : "ExclusiveStartStreamArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>\n@param exclusiveStartStreamArn The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation.*/",
          "getterDocumentation" : "/**<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>\n@return The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation.*/",
          "fluentSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>\n@param exclusiveStartStreamArn The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation. </p>\n@param exclusiveStartStreamArn The ARN (Amazon Resource Name) of the first item that this operation will evaluate. Use the value that was returned for <code>LastEvaluatedStreamArn</code> in the previous operation.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Limit" : {
          "documentation" : "<p>The maximum number of streams to return. The upper limit is 100.</p>",
          "name" : "Limit",
          "c2jName" : "Limit",
          "c2jShape" : "PositiveIntegerObject",
          "variable" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "<p>The maximum number of streams to return. The upper limit is 100.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "setterModel" : {
            "variableName" : "limit",
            "variableType" : "Integer",
            "variableDeclarationType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Limit",
            "marshallLocationName" : "Limit",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The maximum number of streams to return. The upper limit is 100.</p>\n@param limit The maximum number of streams to return. The upper limit is 100.*/",
          "getterDocumentation" : "/**<p>The maximum number of streams to return. The upper limit is 100.</p>\n@return The maximum number of streams to return. The upper limit is 100.*/",
          "fluentSetterDocumentation" : "/**<p>The maximum number of streams to return. The upper limit is 100.</p>\n@param limit The maximum number of streams to return. The upper limit is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The maximum number of streams to return. The upper limit is 100.</p>\n@param limit The maximum number of streams to return. The upper limit is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ListStreamsResult" : {
      "c2jName" : "ListStreamsOutput",
      "documentation" : "<p>Represents the output of a <i>ListStreams</i> operation.</p>",
      "shapeName" : "ListStreamsResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A list of stream descriptors associated with the current account and endpoint.</p>",
        "name" : "Streams",
        "c2jName" : "Streams",
        "c2jShape" : "StreamList",
        "variable" : {
          "variableName" : "streams",
          "variableType" : "java.util.List<Stream>",
          "variableDeclarationType" : "java.util.List<Stream>",
          "documentation" : "<p>A list of stream descriptors associated with the current account and endpoint.</p>",
          "simpleType" : "List<Stream>",
          "variableSetterType" : "java.util.Collection<Stream>"
        },
        "setterModel" : {
          "variableName" : "streams",
          "variableType" : "java.util.List<Stream>",
          "variableDeclarationType" : "java.util.List<Stream>",
          "documentation" : "",
          "simpleType" : "List<Stream>",
          "variableSetterType" : "java.util.Collection<Stream>"
        },
        "getterModel" : {
          "returnType" : "java.util.List<Stream>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Streams",
          "marshallLocationName" : "Streams",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : {
          "memberType" : "Stream",
          "memberLocationName" : null,
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "documentation" : "",
            "name" : "Member",
            "c2jName" : "member",
            "c2jShape" : "Stream",
            "variable" : {
              "variableName" : "member",
              "variableType" : "Stream",
              "variableDeclarationType" : "Stream",
              "documentation" : "",
              "simpleType" : "Stream",
              "variableSetterType" : "Stream"
            },
            "setterModel" : {
              "variableName" : "member",
              "variableType" : "Stream",
              "variableDeclarationType" : "Stream",
              "documentation" : "",
              "simpleType" : "Stream",
              "variableSetterType" : "Stream"
            },
            "getterModel" : {
              "returnType" : "Stream",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "member",
              "marshallLocationName" : "member",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param member */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "simpleType" : "Stream",
          "simple" : false,
          "map" : false,
          "templateType" : "java.util.List<Stream>",
          "templateImplType" : "java.util.ArrayList<Stream>"
        },
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : true,
        "map" : false,
        "setterDocumentation" : "/**<p>A list of stream descriptors associated with the current account and endpoint.</p>\n@param streams A list of stream descriptors associated with the current account and endpoint.*/",
        "getterDocumentation" : "/**<p>A list of stream descriptors associated with the current account and endpoint.</p>\n@return A list of stream descriptors associated with the current account and endpoint.*/",
        "fluentSetterDocumentation" : "/**<p>A list of stream descriptors associated with the current account and endpoint.</p>\n@param streams A list of stream descriptors associated with the current account and endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A list of stream descriptors associated with the current account and endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setStreams(java.util.Collection)} or {@link #withStreams(java.util.Collection)} if you want to override the existing values.</p>\n@param streams A list of stream descriptors associated with the current account and endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>",
        "name" : "LastEvaluatedStreamArn",
        "c2jName" : "LastEvaluatedStreamArn",
        "c2jShape" : "StreamArn",
        "variable" : {
          "variableName" : "lastEvaluatedStreamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "lastEvaluatedStreamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "LastEvaluatedStreamArn",
          "marshallLocationName" : "LastEvaluatedStreamArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>\n@param lastEvaluatedStreamArn The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.*/",
        "getterDocumentation" : "/**<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>\n@return The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.*/",
        "fluentSetterDocumentation" : "/**<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>\n@param lastEvaluatedStreamArn The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>\n@param lastEvaluatedStreamArn The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "listStreamsResult",
        "variableType" : "ListStreamsResult",
        "variableDeclarationType" : "ListStreamsResult",
        "documentation" : null,
        "simpleType" : "ListStreamsResult",
        "variableSetterType" : "ListStreamsResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "LastEvaluatedStreamArn" : {
          "documentation" : "<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>",
          "name" : "LastEvaluatedStreamArn",
          "c2jName" : "LastEvaluatedStreamArn",
          "c2jShape" : "StreamArn",
          "variable" : {
            "variableName" : "lastEvaluatedStreamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "lastEvaluatedStreamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "LastEvaluatedStreamArn",
            "marshallLocationName" : "LastEvaluatedStreamArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>\n@param lastEvaluatedStreamArn The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.*/",
          "getterDocumentation" : "/**<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>\n@return The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.*/",
          "fluentSetterDocumentation" : "/**<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>\n@param lastEvaluatedStreamArn The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.</p>\n@param lastEvaluatedStreamArn The stream ARN of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedStreamArn</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedStreamArn</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedStreamArn</code> is empty.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Streams" : {
          "documentation" : "<p>A list of stream descriptors associated with the current account and endpoint.</p>",
          "name" : "Streams",
          "c2jName" : "Streams",
          "c2jShape" : "StreamList",
          "variable" : {
            "variableName" : "streams",
            "variableType" : "java.util.List<Stream>",
            "variableDeclarationType" : "java.util.List<Stream>",
            "documentation" : "<p>A list of stream descriptors associated with the current account and endpoint.</p>",
            "simpleType" : "List<Stream>",
            "variableSetterType" : "java.util.Collection<Stream>"
          },
          "setterModel" : {
            "variableName" : "streams",
            "variableType" : "java.util.List<Stream>",
            "variableDeclarationType" : "java.util.List<Stream>",
            "documentation" : "",
            "simpleType" : "List<Stream>",
            "variableSetterType" : "java.util.Collection<Stream>"
          },
          "getterModel" : {
            "returnType" : "java.util.List<Stream>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Streams",
            "marshallLocationName" : "Streams",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : {
            "memberType" : "Stream",
            "memberLocationName" : null,
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "documentation" : "",
              "name" : "Member",
              "c2jName" : "member",
              "c2jShape" : "Stream",
              "variable" : {
                "variableName" : "member",
                "variableType" : "Stream",
                "variableDeclarationType" : "Stream",
                "documentation" : "",
                "simpleType" : "Stream",
                "variableSetterType" : "Stream"
              },
              "setterModel" : {
                "variableName" : "member",
                "variableType" : "Stream",
                "variableDeclarationType" : "Stream",
                "documentation" : "",
                "simpleType" : "Stream",
                "variableSetterType" : "Stream"
              },
              "getterModel" : {
                "returnType" : "Stream",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "member",
                "marshallLocationName" : "member",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param member */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "simpleType" : "Stream",
            "simple" : false,
            "map" : false,
            "templateType" : "java.util.List<Stream>",
            "templateImplType" : "java.util.ArrayList<Stream>"
          },
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : true,
          "map" : false,
          "setterDocumentation" : "/**<p>A list of stream descriptors associated with the current account and endpoint.</p>\n@param streams A list of stream descriptors associated with the current account and endpoint.*/",
          "getterDocumentation" : "/**<p>A list of stream descriptors associated with the current account and endpoint.</p>\n@return A list of stream descriptors associated with the current account and endpoint.*/",
          "fluentSetterDocumentation" : "/**<p>A list of stream descriptors associated with the current account and endpoint.</p>\n@param streams A list of stream descriptors associated with the current account and endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A list of stream descriptors associated with the current account and endpoint.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setStreams(java.util.Collection)} or {@link #withStreams(java.util.Collection)} if you want to override the existing values.</p>\n@param streams A list of stream descriptors associated with the current account and endpoint.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetShardIteratorRequest" : {
      "c2jName" : "GetShardIteratorInput",
      "documentation" : "<p>Represents the input of a <i>GetShardIterator</i> operation.</p>",
      "shapeName" : "GetShardIteratorRequest",
      "deprecated" : false,
      "required" : [ "StreamArn", "ShardId", "ShardIteratorType" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
        "name" : "StreamArn",
        "c2jName" : "StreamArn",
        "c2jShape" : "StreamArn",
        "variable" : {
          "variableName" : "streamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamArn",
          "marshallLocationName" : "StreamArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.*/",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@return The Amazon Resource Name (ARN) for the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>",
        "name" : "ShardId",
        "c2jName" : "ShardId",
        "c2jShape" : "ShardId",
        "variable" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardId",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardId",
          "marshallLocationName" : "ShardId",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>\n@param shardId The identifier of the shard. The iterator will be returned for this shard ID.*/",
        "getterDocumentation" : "/**<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>\n@return The identifier of the shard. The iterator will be returned for this shard ID.*/",
        "fluentSetterDocumentation" : "/**<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>\n@param shardId The identifier of the shard. The iterator will be returned for this shard ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>\n@param shardId The identifier of the shard. The iterator will be returned for this shard ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>",
        "name" : "ShardIteratorType",
        "c2jName" : "ShardIteratorType",
        "c2jShape" : "ShardIteratorType",
        "variable" : {
          "variableName" : "shardIteratorType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardIteratorType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardIteratorType",
          "marshallLocationName" : "ShardIteratorType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "ShardIteratorType",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li>\n@see ShardIteratorType*/",
        "getterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>\n@return Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li>\n@see ShardIteratorType*/",
        "fluentSetterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShardIteratorType*/",
        "varargSetterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShardIteratorType*/"
      }, {
        "documentation" : "<p>The sequence number of a stream record in the shard from which to start reading.</p>",
        "name" : "SequenceNumber",
        "c2jName" : "SequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The sequence number of a stream record in the shard from which to start reading.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SequenceNumber",
          "marshallLocationName" : "SequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The sequence number of a stream record in the shard from which to start reading.</p>\n@param sequenceNumber The sequence number of a stream record in the shard from which to start reading.*/",
        "getterDocumentation" : "/**<p>The sequence number of a stream record in the shard from which to start reading.</p>\n@return The sequence number of a stream record in the shard from which to start reading.*/",
        "fluentSetterDocumentation" : "/**<p>The sequence number of a stream record in the shard from which to start reading.</p>\n@param sequenceNumber The sequence number of a stream record in the shard from which to start reading.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The sequence number of a stream record in the shard from which to start reading.</p>\n@param sequenceNumber The sequence number of a stream record in the shard from which to start reading.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getShardIteratorRequest",
        "variableType" : "GetShardIteratorRequest",
        "variableDeclarationType" : "GetShardIteratorRequest",
        "documentation" : null,
        "simpleType" : "GetShardIteratorRequest",
        "variableSetterType" : "GetShardIteratorRequest"
      },
      "marshaller" : {
        "action" : "GetShardIterator",
        "verb" : "POST",
        "target" : "DynamoDBStreams_20120810.GetShardIterator",
        "requestUri" : "/",
        "locationName" : null,
        "xmlNameSpaceUri" : null
      },
      "unmarshaller" : null,
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ShardIteratorType" : {
          "documentation" : "<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>",
          "name" : "ShardIteratorType",
          "c2jName" : "ShardIteratorType",
          "c2jShape" : "ShardIteratorType",
          "variable" : {
            "variableName" : "shardIteratorType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardIteratorType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardIteratorType",
            "marshallLocationName" : "ShardIteratorType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "ShardIteratorType",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li>\n@see ShardIteratorType*/",
          "getterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>\n@return Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li>\n@see ShardIteratorType*/",
          "fluentSetterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShardIteratorType*/",
          "varargSetterDocumentation" : "/**<p>Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li> </ul>\n@param shardIteratorType Determines how the shard iterator is used to start reading stream records from the shard:</p> <ul> <li> <p><code>AT_SEQUENCE_NUMBER</code> - Start reading exactly from the position denoted by a specific sequence number.</p> </li> <li> <p><code>AFTER_SEQUENCE_NUMBER</code> - Start reading right after the position denoted by a specific sequence number.</p> </li> <li> <p><code>TRIM_HORIZON</code> - Start reading at the last (untrimmed) stream record, which is the oldest record in the shard. In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream.</p> </li> <li> <p><code>LATEST</code> - Start reading just after the most recent stream record in the shard, so that you always read the most recent data in the shard.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see ShardIteratorType*/"
        },
        "ShardId" : {
          "documentation" : "<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>",
          "name" : "ShardId",
          "c2jName" : "ShardId",
          "c2jShape" : "ShardId",
          "variable" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardId",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardId",
            "marshallLocationName" : "ShardId",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>\n@param shardId The identifier of the shard. The iterator will be returned for this shard ID.*/",
          "getterDocumentation" : "/**<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>\n@return The identifier of the shard. The iterator will be returned for this shard ID.*/",
          "fluentSetterDocumentation" : "/**<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>\n@param shardId The identifier of the shard. The iterator will be returned for this shard ID.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The identifier of the shard. The iterator will be returned for this shard ID.</p>\n@param shardId The identifier of the shard. The iterator will be returned for this shard ID.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SequenceNumber" : {
          "documentation" : "<p>The sequence number of a stream record in the shard from which to start reading.</p>",
          "name" : "SequenceNumber",
          "c2jName" : "SequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The sequence number of a stream record in the shard from which to start reading.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SequenceNumber",
            "marshallLocationName" : "SequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The sequence number of a stream record in the shard from which to start reading.</p>\n@param sequenceNumber The sequence number of a stream record in the shard from which to start reading.*/",
          "getterDocumentation" : "/**<p>The sequence number of a stream record in the shard from which to start reading.</p>\n@return The sequence number of a stream record in the shard from which to start reading.*/",
          "fluentSetterDocumentation" : "/**<p>The sequence number of a stream record in the shard from which to start reading.</p>\n@param sequenceNumber The sequence number of a stream record in the shard from which to start reading.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The sequence number of a stream record in the shard from which to start reading.</p>\n@param sequenceNumber The sequence number of a stream record in the shard from which to start reading.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamArn" : {
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
          "name" : "StreamArn",
          "c2jName" : "StreamArn",
          "c2jShape" : "StreamArn",
          "variable" : {
            "variableName" : "streamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamArn",
            "marshallLocationName" : "StreamArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.*/",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@return The Amazon Resource Name (ARN) for the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "GetShardIteratorResult" : {
      "c2jName" : "GetShardIteratorOutput",
      "documentation" : "<p>Represents the output of a <i>GetShardIterator</i> operation.</p>",
      "shapeName" : "GetShardIteratorResult",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>",
        "name" : "ShardIterator",
        "c2jName" : "ShardIterator",
        "c2jShape" : "ShardIterator",
        "variable" : {
          "variableName" : "shardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "shardIterator",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "ShardIterator",
          "marshallLocationName" : "ShardIterator",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.*/",
        "getterDocumentation" : "/**<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>\n@return The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.*/",
        "fluentSetterDocumentation" : "/**<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "getShardIteratorResult",
        "variableType" : "GetShardIteratorResult",
        "variableDeclarationType" : "GetShardIteratorResult",
        "documentation" : null,
        "simpleType" : "GetShardIteratorResult",
        "variableSetterType" : "GetShardIteratorResult"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "ShardIterator" : {
          "documentation" : "<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>",
          "name" : "ShardIterator",
          "c2jName" : "ShardIterator",
          "c2jShape" : "ShardIterator",
          "variable" : {
            "variableName" : "shardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "shardIterator",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "ShardIterator",
            "marshallLocationName" : "ShardIterator",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.*/",
          "getterDocumentation" : "/**<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>\n@return The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.*/",
          "fluentSetterDocumentation" : "/**<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.</p>\n@param shardIterator The position in the shard from which to start reading stream records sequentially. A shard iterator specifies this position using the sequence number of a stream record in a shard.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "KeySchemaElement" : {
      "c2jName" : "KeySchemaElement",
      "documentation" : "<p>Represents <i>a single element</i> of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index.</p> <p>A <i>KeySchemaElement</i> represents exactly one attribute of the primary key. For example, a hash type primary key would be represented by one <i>KeySchemaElement</i>. A hash-and-range type primary key would require one <i>KeySchemaElement</i> for the hash attribute, and another <i>KeySchemaElement</i> for the range attribute.</p>",
      "shapeName" : "KeySchemaElement",
      "deprecated" : false,
      "required" : [ "AttributeName", "KeyType" ],
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The name of a key attribute.</p>",
        "name" : "AttributeName",
        "c2jName" : "AttributeName",
        "c2jShape" : "KeySchemaAttributeName",
        "variable" : {
          "variableName" : "attributeName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The name of a key attribute.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "attributeName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "AttributeName",
          "marshallLocationName" : "AttributeName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The name of a key attribute.</p>\n@param attributeName The name of a key attribute.*/",
        "getterDocumentation" : "/**<p>The name of a key attribute.</p>\n@return The name of a key attribute.*/",
        "fluentSetterDocumentation" : "/**<p>The name of a key attribute.</p>\n@param attributeName The name of a key attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The name of a key attribute.</p>\n@param attributeName The name of a key attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The attribute data, consisting of the data type and the attribute value itself.</p>",
        "name" : "KeyType",
        "c2jName" : "KeyType",
        "c2jShape" : "KeyType",
        "variable" : {
          "variableName" : "keyType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The attribute data, consisting of the data type and the attribute value itself.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "keyType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "KeyType",
          "marshallLocationName" : "KeyType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "KeyType",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The attribute data, consisting of the data type and the attribute value itself.</p>\n@param keyType The attribute data, consisting of the data type and the attribute value itself.\n@see KeyType*/",
        "getterDocumentation" : "/**<p>The attribute data, consisting of the data type and the attribute value itself.</p>\n@return The attribute data, consisting of the data type and the attribute value itself.\n@see KeyType*/",
        "fluentSetterDocumentation" : "/**<p>The attribute data, consisting of the data type and the attribute value itself.</p>\n@param keyType The attribute data, consisting of the data type and the attribute value itself.\n@return Returns a reference to this object so that method calls can be chained together.\n@see KeyType*/",
        "varargSetterDocumentation" : "/**<p>The attribute data, consisting of the data type and the attribute value itself.</p>\n@param keyType The attribute data, consisting of the data type and the attribute value itself.\n@return Returns a reference to this object so that method calls can be chained together.\n@see KeyType*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "keySchemaElement",
        "variableType" : "KeySchemaElement",
        "variableDeclarationType" : "KeySchemaElement",
        "documentation" : null,
        "simpleType" : "KeySchemaElement",
        "variableSetterType" : "KeySchemaElement"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : true,
        "skipGeneratingMarshaller" : true,
        "skipGeneratingUnmarshaller" : true
      },
      "membersAsMap" : {
        "KeyType" : {
          "documentation" : "<p>The attribute data, consisting of the data type and the attribute value itself.</p>",
          "name" : "KeyType",
          "c2jName" : "KeyType",
          "c2jShape" : "KeyType",
          "variable" : {
            "variableName" : "keyType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The attribute data, consisting of the data type and the attribute value itself.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "keyType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "KeyType",
            "marshallLocationName" : "KeyType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "KeyType",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The attribute data, consisting of the data type and the attribute value itself.</p>\n@param keyType The attribute data, consisting of the data type and the attribute value itself.\n@see KeyType*/",
          "getterDocumentation" : "/**<p>The attribute data, consisting of the data type and the attribute value itself.</p>\n@return The attribute data, consisting of the data type and the attribute value itself.\n@see KeyType*/",
          "fluentSetterDocumentation" : "/**<p>The attribute data, consisting of the data type and the attribute value itself.</p>\n@param keyType The attribute data, consisting of the data type and the attribute value itself.\n@return Returns a reference to this object so that method calls can be chained together.\n@see KeyType*/",
          "varargSetterDocumentation" : "/**<p>The attribute data, consisting of the data type and the attribute value itself.</p>\n@param keyType The attribute data, consisting of the data type and the attribute value itself.\n@return Returns a reference to this object so that method calls can be chained together.\n@see KeyType*/"
        },
        "AttributeName" : {
          "documentation" : "<p>The name of a key attribute.</p>",
          "name" : "AttributeName",
          "c2jName" : "AttributeName",
          "c2jShape" : "KeySchemaAttributeName",
          "variable" : {
            "variableName" : "attributeName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The name of a key attribute.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "attributeName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "AttributeName",
            "marshallLocationName" : "AttributeName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The name of a key attribute.</p>\n@param attributeName The name of a key attribute.*/",
          "getterDocumentation" : "/**<p>The name of a key attribute.</p>\n@return The name of a key attribute.*/",
          "fluentSetterDocumentation" : "/**<p>The name of a key attribute.</p>\n@param attributeName The name of a key attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The name of a key attribute.</p>\n@param attributeName The name of a key attribute.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Record" : {
      "c2jName" : "Record",
      "documentation" : "<p>A description of a unique event within a stream.</p>",
      "shapeName" : "Record",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>A globally unique identifier for the event that was recorded in this stream record.</p>",
        "name" : "EventID",
        "c2jName" : "eventID",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "eventID",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A globally unique identifier for the event that was recorded in this stream record.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "eventID",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "eventID",
          "marshallLocationName" : "eventID",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A globally unique identifier for the event that was recorded in this stream record.</p>\n@param eventID A globally unique identifier for the event that was recorded in this stream record.*/",
        "getterDocumentation" : "/**<p>A globally unique identifier for the event that was recorded in this stream record.</p>\n@return A globally unique identifier for the event that was recorded in this stream record.*/",
        "fluentSetterDocumentation" : "/**<p>A globally unique identifier for the event that was recorded in this stream record.</p>\n@param eventID A globally unique identifier for the event that was recorded in this stream record.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A globally unique identifier for the event that was recorded in this stream record.</p>\n@param eventID A globally unique identifier for the event that was recorded in this stream record.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>",
        "name" : "EventName",
        "c2jName" : "eventName",
        "c2jShape" : "OperationType",
        "variable" : {
          "variableName" : "eventName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "eventName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "eventName",
          "marshallLocationName" : "eventName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "OperationType",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>\n@param eventName The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li>\n@see OperationType*/",
        "getterDocumentation" : "/**<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>\n@return The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li>\n@see OperationType*/",
        "fluentSetterDocumentation" : "/**<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>\n@param eventName The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OperationType*/",
        "varargSetterDocumentation" : "/**<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>\n@param eventName The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OperationType*/"
      }, {
        "documentation" : "<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>",
        "name" : "EventVersion",
        "c2jName" : "eventVersion",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "eventVersion",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "eventVersion",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "eventVersion",
          "marshallLocationName" : "eventVersion",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>\n@param eventVersion The version number of the stream record format. Currently, this is <i>1.0</i>.*/",
        "getterDocumentation" : "/**<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>\n@return The version number of the stream record format. Currently, this is <i>1.0</i>.*/",
        "fluentSetterDocumentation" : "/**<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>\n@param eventVersion The version number of the stream record format. Currently, this is <i>1.0</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>\n@param eventVersion The version number of the stream record format. Currently, this is <i>1.0</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>",
        "name" : "EventSource",
        "c2jName" : "eventSource",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "eventSource",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "eventSource",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "eventSource",
          "marshallLocationName" : "eventSource",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>\n@param eventSource The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.*/",
        "getterDocumentation" : "/**<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>\n@return The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.*/",
        "fluentSetterDocumentation" : "/**<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>\n@param eventSource The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>\n@param eventSource The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The region in which the <i>GetRecords</i> request was received.</p>",
        "name" : "AwsRegion",
        "c2jName" : "awsRegion",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "awsRegion",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The region in which the <i>GetRecords</i> request was received.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "awsRegion",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "awsRegion",
          "marshallLocationName" : "awsRegion",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The region in which the <i>GetRecords</i> request was received.</p>\n@param awsRegion The region in which the <i>GetRecords</i> request was received.*/",
        "getterDocumentation" : "/**<p>The region in which the <i>GetRecords</i> request was received.</p>\n@return The region in which the <i>GetRecords</i> request was received.*/",
        "fluentSetterDocumentation" : "/**<p>The region in which the <i>GetRecords</i> request was received.</p>\n@param awsRegion The region in which the <i>GetRecords</i> request was received.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The region in which the <i>GetRecords</i> request was received.</p>\n@param awsRegion The region in which the <i>GetRecords</i> request was received.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>",
        "name" : "Dynamodb",
        "c2jName" : "dynamodb",
        "c2jShape" : "StreamRecord",
        "variable" : {
          "variableName" : "dynamodb",
          "variableType" : "StreamRecord",
          "variableDeclarationType" : "StreamRecord",
          "documentation" : "<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>",
          "simpleType" : "StreamRecord",
          "variableSetterType" : "StreamRecord"
        },
        "setterModel" : {
          "variableName" : "dynamodb",
          "variableType" : "StreamRecord",
          "variableDeclarationType" : "StreamRecord",
          "documentation" : "",
          "simpleType" : "StreamRecord",
          "variableSetterType" : "StreamRecord"
        },
        "getterModel" : {
          "returnType" : "StreamRecord",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "dynamodb",
          "marshallLocationName" : "dynamodb",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>\n@param dynamodb The main body of the stream record, containing all of the DynamoDB-specific fields.*/",
        "getterDocumentation" : "/**<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>\n@return The main body of the stream record, containing all of the DynamoDB-specific fields.*/",
        "fluentSetterDocumentation" : "/**<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>\n@param dynamodb The main body of the stream record, containing all of the DynamoDB-specific fields.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>\n@param dynamodb The main body of the stream record, containing all of the DynamoDB-specific fields.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "record",
        "variableType" : "Record",
        "variableDeclarationType" : "Record",
        "documentation" : null,
        "simpleType" : "Record",
        "variableSetterType" : "Record"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "EventName" : {
          "documentation" : "<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>",
          "name" : "EventName",
          "c2jName" : "eventName",
          "c2jShape" : "OperationType",
          "variable" : {
            "variableName" : "eventName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "eventName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "eventName",
            "marshallLocationName" : "eventName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "OperationType",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>\n@param eventName The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li>\n@see OperationType*/",
          "getterDocumentation" : "/**<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>\n@return The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li>\n@see OperationType*/",
          "fluentSetterDocumentation" : "/**<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>\n@param eventName The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OperationType*/",
          "varargSetterDocumentation" : "/**<p>The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li> </ul>\n@param eventName The type of data modification that was performed on the DynamoDB table:</p> <ul> <li><p><code>INSERT</code> - a new item was added to the table.</p></li> <li><p><code>MODIFY</code> - one or more of the item's attributes were updated.</p></li> <li><p><code>REMOVE</code> - the item was deleted from the table</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see OperationType*/"
        },
        "Dynamodb" : {
          "documentation" : "<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>",
          "name" : "Dynamodb",
          "c2jName" : "dynamodb",
          "c2jShape" : "StreamRecord",
          "variable" : {
            "variableName" : "dynamodb",
            "variableType" : "StreamRecord",
            "variableDeclarationType" : "StreamRecord",
            "documentation" : "<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>",
            "simpleType" : "StreamRecord",
            "variableSetterType" : "StreamRecord"
          },
          "setterModel" : {
            "variableName" : "dynamodb",
            "variableType" : "StreamRecord",
            "variableDeclarationType" : "StreamRecord",
            "documentation" : "",
            "simpleType" : "StreamRecord",
            "variableSetterType" : "StreamRecord"
          },
          "getterModel" : {
            "returnType" : "StreamRecord",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "dynamodb",
            "marshallLocationName" : "dynamodb",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>\n@param dynamodb The main body of the stream record, containing all of the DynamoDB-specific fields.*/",
          "getterDocumentation" : "/**<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>\n@return The main body of the stream record, containing all of the DynamoDB-specific fields.*/",
          "fluentSetterDocumentation" : "/**<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>\n@param dynamodb The main body of the stream record, containing all of the DynamoDB-specific fields.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>\n@param dynamodb The main body of the stream record, containing all of the DynamoDB-specific fields.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "EventSource" : {
          "documentation" : "<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>",
          "name" : "EventSource",
          "c2jName" : "eventSource",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "eventSource",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "eventSource",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "eventSource",
            "marshallLocationName" : "eventSource",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>\n@param eventSource The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.*/",
          "getterDocumentation" : "/**<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>\n@return The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.*/",
          "fluentSetterDocumentation" : "/**<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>\n@param eventSource The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.</p>\n@param eventSource The AWS service from which the stream record originated. For DynamoDB Streams, this is <i>aws:dynamodb</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "EventVersion" : {
          "documentation" : "<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>",
          "name" : "EventVersion",
          "c2jName" : "eventVersion",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "eventVersion",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "eventVersion",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "eventVersion",
            "marshallLocationName" : "eventVersion",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>\n@param eventVersion The version number of the stream record format. Currently, this is <i>1.0</i>.*/",
          "getterDocumentation" : "/**<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>\n@return The version number of the stream record format. Currently, this is <i>1.0</i>.*/",
          "fluentSetterDocumentation" : "/**<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>\n@param eventVersion The version number of the stream record format. Currently, this is <i>1.0</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The version number of the stream record format. Currently, this is <i>1.0</i>.</p>\n@param eventVersion The version number of the stream record format. Currently, this is <i>1.0</i>.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "EventID" : {
          "documentation" : "<p>A globally unique identifier for the event that was recorded in this stream record.</p>",
          "name" : "EventID",
          "c2jName" : "eventID",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "eventID",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A globally unique identifier for the event that was recorded in this stream record.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "eventID",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "eventID",
            "marshallLocationName" : "eventID",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A globally unique identifier for the event that was recorded in this stream record.</p>\n@param eventID A globally unique identifier for the event that was recorded in this stream record.*/",
          "getterDocumentation" : "/**<p>A globally unique identifier for the event that was recorded in this stream record.</p>\n@return A globally unique identifier for the event that was recorded in this stream record.*/",
          "fluentSetterDocumentation" : "/**<p>A globally unique identifier for the event that was recorded in this stream record.</p>\n@param eventID A globally unique identifier for the event that was recorded in this stream record.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A globally unique identifier for the event that was recorded in this stream record.</p>\n@param eventID A globally unique identifier for the event that was recorded in this stream record.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "AwsRegion" : {
          "documentation" : "<p>The region in which the <i>GetRecords</i> request was received.</p>",
          "name" : "AwsRegion",
          "c2jName" : "awsRegion",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "awsRegion",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The region in which the <i>GetRecords</i> request was received.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "awsRegion",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "awsRegion",
            "marshallLocationName" : "awsRegion",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The region in which the <i>GetRecords</i> request was received.</p>\n@param awsRegion The region in which the <i>GetRecords</i> request was received.*/",
          "getterDocumentation" : "/**<p>The region in which the <i>GetRecords</i> request was received.</p>\n@return The region in which the <i>GetRecords</i> request was received.*/",
          "fluentSetterDocumentation" : "/**<p>The region in which the <i>GetRecords</i> request was received.</p>\n@param awsRegion The region in which the <i>GetRecords</i> request was received.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The region in which the <i>GetRecords</i> request was received.</p>\n@param awsRegion The region in which the <i>GetRecords</i> request was received.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "Stream" : {
      "c2jName" : "Stream",
      "documentation" : "<p>Represents all of the data describing a particular stream.</p>",
      "shapeName" : "Stream",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
        "name" : "StreamArn",
        "c2jName" : "StreamArn",
        "c2jShape" : "StreamArn",
        "variable" : {
          "variableName" : "streamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamArn",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamArn",
          "marshallLocationName" : "StreamArn",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.*/",
        "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@return The Amazon Resource Name (ARN) for the stream.*/",
        "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The DynamoDB table with which the stream is associated.</p>",
        "name" : "TableName",
        "c2jName" : "TableName",
        "c2jShape" : "TableName",
        "variable" : {
          "variableName" : "tableName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The DynamoDB table with which the stream is associated.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "tableName",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "TableName",
          "marshallLocationName" : "TableName",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.*/",
        "getterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@return The DynamoDB table with which the stream is associated.*/",
        "fluentSetterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>",
        "name" : "StreamLabel",
        "c2jName" : "StreamLabel",
        "c2jShape" : "String",
        "variable" : {
          "variableName" : "streamLabel",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamLabel",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamLabel",
          "marshallLocationName" : "StreamLabel",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>*/",
        "getterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@return A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>*/",
        "fluentSetterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>\n@return Returns a reference to this object so that method calls can be chained together.*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "stream",
        "variableType" : "Stream",
        "variableDeclarationType" : "Stream",
        "documentation" : null,
        "simpleType" : "Stream",
        "variableSetterType" : "Stream"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "StreamLabel" : {
          "documentation" : "<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>",
          "name" : "StreamLabel",
          "c2jName" : "StreamLabel",
          "c2jShape" : "String",
          "variable" : {
            "variableName" : "streamLabel",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamLabel",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamLabel",
            "marshallLocationName" : "StreamLabel",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>*/",
          "getterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@return A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>*/",
          "fluentSetterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li> </ul>\n@param streamLabel A timestamp, in ISO 8601 format, for this stream.</p> <p>Note that <i>LatestStreamLabel</i> is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:</p> <ul> <li><p>the AWS customer ID.</p></li> <li><p>the table name</p></li> <li><p>the <i>StreamLabel</i></p></li>\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "TableName" : {
          "documentation" : "<p>The DynamoDB table with which the stream is associated.</p>",
          "name" : "TableName",
          "c2jName" : "TableName",
          "c2jShape" : "TableName",
          "variable" : {
            "variableName" : "tableName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The DynamoDB table with which the stream is associated.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "tableName",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "TableName",
            "marshallLocationName" : "TableName",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.*/",
          "getterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@return The DynamoDB table with which the stream is associated.*/",
          "fluentSetterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The DynamoDB table with which the stream is associated.</p>\n@param tableName The DynamoDB table with which the stream is associated.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamArn" : {
          "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
          "name" : "StreamArn",
          "c2jName" : "StreamArn",
          "c2jShape" : "StreamArn",
          "variable" : {
            "variableName" : "streamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The Amazon Resource Name (ARN) for the stream.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamArn",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamArn",
            "marshallLocationName" : "StreamArn",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.*/",
          "getterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@return The Amazon Resource Name (ARN) for the stream.*/",
          "fluentSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The Amazon Resource Name (ARN) for the stream.</p>\n@param streamArn The Amazon Resource Name (ARN) for the stream.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "documentation" : "<p>The operation tried to access a nonexistent stream. </p>",
      "shapeName" : "ResourceNotFoundException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "variableDeclarationType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : true,
        "skipGeneratingMarshaller" : true,
        "skipGeneratingUnmarshaller" : true
      },
      "membersAsMap" : { }
    },
    "StreamRecord" : {
      "c2jName" : "StreamRecord",
      "documentation" : "<p>A description of a single data modification that was performed on an item in a DynamoDB table.</p>",
      "shapeName" : "StreamRecord",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ {
        "documentation" : "<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>",
        "name" : "Keys",
        "c2jName" : "Keys",
        "c2jShape" : "AttributeMap",
        "variable" : {
          "variableName" : "keys",
          "variableType" : "java.util.Map<String,AttributeValue>",
          "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
          "documentation" : "<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>",
          "simpleType" : "Map<String,AttributeValue>",
          "variableSetterType" : "java.util.Map<String,AttributeValue>"
        },
        "setterModel" : {
          "variableName" : "keys",
          "variableType" : "java.util.Map<String,AttributeValue>",
          "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
          "documentation" : "",
          "simpleType" : "Map<String,AttributeValue>",
          "variableSetterType" : "java.util.Map<String,AttributeValue>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,AttributeValue>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "Keys",
          "marshallLocationName" : "Keys",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "AttributeValue",
          "valueLocationName" : "value",
          "valueModel" : {
            "documentation" : "",
            "name" : "Value",
            "c2jName" : "value",
            "c2jShape" : "AttributeValue",
            "variable" : {
              "variableName" : "value",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "setterModel" : {
              "variableName" : "value",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "getterModel" : {
              "returnType" : "AttributeValue",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "value",
              "marshallLocationName" : "value",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param value */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "templateType" : "java.util.Map<String,AttributeValue>",
          "templateImplType" : "java.util.HashMap<String,AttributeValue>",
          "keySimple" : true,
          "valueSimple" : false,
          "valueList" : false
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>\n@param keys The primary key attribute(s) for the DynamoDB item that was modified.*/",
        "getterDocumentation" : "/**<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>\n@return The primary key attribute(s) for the DynamoDB item that was modified.*/",
        "fluentSetterDocumentation" : "/**<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>\n@param keys The primary key attribute(s) for the DynamoDB item that was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>\n@param keys The primary key attribute(s) for the DynamoDB item that was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The item in the DynamoDB table as it appeared after it was modified.</p>",
        "name" : "NewImage",
        "c2jName" : "NewImage",
        "c2jShape" : "AttributeMap",
        "variable" : {
          "variableName" : "newImage",
          "variableType" : "java.util.Map<String,AttributeValue>",
          "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
          "documentation" : "<p>The item in the DynamoDB table as it appeared after it was modified.</p>",
          "simpleType" : "Map<String,AttributeValue>",
          "variableSetterType" : "java.util.Map<String,AttributeValue>"
        },
        "setterModel" : {
          "variableName" : "newImage",
          "variableType" : "java.util.Map<String,AttributeValue>",
          "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
          "documentation" : "",
          "simpleType" : "Map<String,AttributeValue>",
          "variableSetterType" : "java.util.Map<String,AttributeValue>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,AttributeValue>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "NewImage",
          "marshallLocationName" : "NewImage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "AttributeValue",
          "valueLocationName" : "value",
          "valueModel" : {
            "documentation" : "",
            "name" : "Value",
            "c2jName" : "value",
            "c2jShape" : "AttributeValue",
            "variable" : {
              "variableName" : "value",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "setterModel" : {
              "variableName" : "value",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "getterModel" : {
              "returnType" : "AttributeValue",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "value",
              "marshallLocationName" : "value",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param value */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "templateType" : "java.util.Map<String,AttributeValue>",
          "templateImplType" : "java.util.HashMap<String,AttributeValue>",
          "keySimple" : true,
          "valueSimple" : false,
          "valueList" : false
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared after it was modified.</p>\n@param newImage The item in the DynamoDB table as it appeared after it was modified.*/",
        "getterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared after it was modified.</p>\n@return The item in the DynamoDB table as it appeared after it was modified.*/",
        "fluentSetterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared after it was modified.</p>\n@param newImage The item in the DynamoDB table as it appeared after it was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared after it was modified.</p>\n@param newImage The item in the DynamoDB table as it appeared after it was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The item in the DynamoDB table as it appeared before it was modified.</p>",
        "name" : "OldImage",
        "c2jName" : "OldImage",
        "c2jShape" : "AttributeMap",
        "variable" : {
          "variableName" : "oldImage",
          "variableType" : "java.util.Map<String,AttributeValue>",
          "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
          "documentation" : "<p>The item in the DynamoDB table as it appeared before it was modified.</p>",
          "simpleType" : "Map<String,AttributeValue>",
          "variableSetterType" : "java.util.Map<String,AttributeValue>"
        },
        "setterModel" : {
          "variableName" : "oldImage",
          "variableType" : "java.util.Map<String,AttributeValue>",
          "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
          "documentation" : "",
          "simpleType" : "Map<String,AttributeValue>",
          "variableSetterType" : "java.util.Map<String,AttributeValue>"
        },
        "getterModel" : {
          "returnType" : "java.util.Map<String,AttributeValue>",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "OldImage",
          "marshallLocationName" : "OldImage",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyType" : "String",
          "keyLocationName" : "key",
          "keyModel" : null,
          "valueType" : "AttributeValue",
          "valueLocationName" : "value",
          "valueModel" : {
            "documentation" : "",
            "name" : "Value",
            "c2jName" : "value",
            "c2jShape" : "AttributeValue",
            "variable" : {
              "variableName" : "value",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "setterModel" : {
              "variableName" : "value",
              "variableType" : "AttributeValue",
              "variableDeclarationType" : "AttributeValue",
              "documentation" : "",
              "simpleType" : "AttributeValue",
              "variableSetterType" : "AttributeValue"
            },
            "getterModel" : {
              "returnType" : "AttributeValue",
              "documentation" : null
            },
            "http" : {
              "unmarshallLocationName" : "value",
              "marshallLocationName" : "value",
              "additionalUnmarshallingPath" : null,
              "additionalMarshallingPath" : null,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "flattened" : false,
              "header" : false,
              "uri" : false,
              "statusCode" : false,
              "queryString" : false
            },
            "deprecated" : false,
            "listModel" : null,
            "mapModel" : null,
            "enumType" : null,
            "xmlNameSpaceUri" : null,
            "simple" : false,
            "list" : false,
            "map" : false,
            "setterDocumentation" : "/**\n@param value */",
            "getterDocumentation" : "/**\n@return */",
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/"
          },
          "templateType" : "java.util.Map<String,AttributeValue>",
          "templateImplType" : "java.util.HashMap<String,AttributeValue>",
          "keySimple" : true,
          "valueSimple" : false,
          "valueList" : false
        },
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : false,
        "list" : false,
        "map" : true,
        "setterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared before it was modified.</p>\n@param oldImage The item in the DynamoDB table as it appeared before it was modified.*/",
        "getterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared before it was modified.</p>\n@return The item in the DynamoDB table as it appeared before it was modified.*/",
        "fluentSetterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared before it was modified.</p>\n@param oldImage The item in the DynamoDB table as it appeared before it was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared before it was modified.</p>\n@param oldImage The item in the DynamoDB table as it appeared before it was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The sequence number of the stream record.</p>",
        "name" : "SequenceNumber",
        "c2jName" : "SequenceNumber",
        "c2jShape" : "SequenceNumber",
        "variable" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The sequence number of the stream record.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "sequenceNumber",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SequenceNumber",
          "marshallLocationName" : "SequenceNumber",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The sequence number of the stream record.</p>\n@param sequenceNumber The sequence number of the stream record.*/",
        "getterDocumentation" : "/**<p>The sequence number of the stream record.</p>\n@return The sequence number of the stream record.*/",
        "fluentSetterDocumentation" : "/**<p>The sequence number of the stream record.</p>\n@param sequenceNumber The sequence number of the stream record.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The sequence number of the stream record.</p>\n@param sequenceNumber The sequence number of the stream record.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The size of the stream record, in bytes.</p>",
        "name" : "SizeBytes",
        "c2jName" : "SizeBytes",
        "c2jShape" : "PositiveLongObject",
        "variable" : {
          "variableName" : "sizeBytes",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "<p>The size of the stream record, in bytes.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "setterModel" : {
          "variableName" : "sizeBytes",
          "variableType" : "Long",
          "variableDeclarationType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "SizeBytes",
          "marshallLocationName" : "SizeBytes",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : null,
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The size of the stream record, in bytes.</p>\n@param sizeBytes The size of the stream record, in bytes.*/",
        "getterDocumentation" : "/**<p>The size of the stream record, in bytes.</p>\n@return The size of the stream record, in bytes.*/",
        "fluentSetterDocumentation" : "/**<p>The size of the stream record, in bytes.</p>\n@param sizeBytes The size of the stream record, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "varargSetterDocumentation" : "/**<p>The size of the stream record, in bytes.</p>\n@param sizeBytes The size of the stream record, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
      }, {
        "documentation" : "<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>",
        "name" : "StreamViewType",
        "c2jName" : "StreamViewType",
        "c2jShape" : "StreamViewType",
        "variable" : {
          "variableName" : "streamViewType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "setterModel" : {
          "variableName" : "streamViewType",
          "variableType" : "String",
          "variableDeclarationType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "unmarshallLocationName" : "StreamViewType",
          "marshallLocationName" : "StreamViewType",
          "additionalUnmarshallingPath" : null,
          "additionalMarshallingPath" : null,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "flattened" : false,
          "header" : false,
          "uri" : false,
          "statusCode" : false,
          "queryString" : false
        },
        "deprecated" : false,
        "listModel" : null,
        "mapModel" : null,
        "enumType" : "StreamViewType",
        "xmlNameSpaceUri" : null,
        "simple" : true,
        "list" : false,
        "map" : false,
        "setterDocumentation" : "/**<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>\n@param streamViewType The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li>\n@see StreamViewType*/",
        "getterDocumentation" : "/**<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>\n@return The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li>\n@see StreamViewType*/",
        "fluentSetterDocumentation" : "/**<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>\n@param streamViewType The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamViewType*/",
        "varargSetterDocumentation" : "/**<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>\n@param streamViewType The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamViewType*/"
      } ],
      "enums" : null,
      "variable" : {
        "variableName" : "streamRecord",
        "variableType" : "StreamRecord",
        "variableDeclarationType" : "StreamRecord",
        "documentation" : null,
        "simpleType" : "StreamRecord",
        "variableSetterType" : "StreamRecord"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : {
        "NewImage" : {
          "documentation" : "<p>The item in the DynamoDB table as it appeared after it was modified.</p>",
          "name" : "NewImage",
          "c2jName" : "NewImage",
          "c2jShape" : "AttributeMap",
          "variable" : {
            "variableName" : "newImage",
            "variableType" : "java.util.Map<String,AttributeValue>",
            "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
            "documentation" : "<p>The item in the DynamoDB table as it appeared after it was modified.</p>",
            "simpleType" : "Map<String,AttributeValue>",
            "variableSetterType" : "java.util.Map<String,AttributeValue>"
          },
          "setterModel" : {
            "variableName" : "newImage",
            "variableType" : "java.util.Map<String,AttributeValue>",
            "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
            "documentation" : "",
            "simpleType" : "Map<String,AttributeValue>",
            "variableSetterType" : "java.util.Map<String,AttributeValue>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,AttributeValue>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "NewImage",
            "marshallLocationName" : "NewImage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "AttributeValue",
            "valueLocationName" : "value",
            "valueModel" : {
              "documentation" : "",
              "name" : "Value",
              "c2jName" : "value",
              "c2jShape" : "AttributeValue",
              "variable" : {
                "variableName" : "value",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "setterModel" : {
                "variableName" : "value",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "getterModel" : {
                "returnType" : "AttributeValue",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "value",
                "marshallLocationName" : "value",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param value */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "templateType" : "java.util.Map<String,AttributeValue>",
            "templateImplType" : "java.util.HashMap<String,AttributeValue>",
            "keySimple" : true,
            "valueSimple" : false,
            "valueList" : false
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared after it was modified.</p>\n@param newImage The item in the DynamoDB table as it appeared after it was modified.*/",
          "getterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared after it was modified.</p>\n@return The item in the DynamoDB table as it appeared after it was modified.*/",
          "fluentSetterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared after it was modified.</p>\n@param newImage The item in the DynamoDB table as it appeared after it was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared after it was modified.</p>\n@param newImage The item in the DynamoDB table as it appeared after it was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "SizeBytes" : {
          "documentation" : "<p>The size of the stream record, in bytes.</p>",
          "name" : "SizeBytes",
          "c2jName" : "SizeBytes",
          "c2jShape" : "PositiveLongObject",
          "variable" : {
            "variableName" : "sizeBytes",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "<p>The size of the stream record, in bytes.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "setterModel" : {
            "variableName" : "sizeBytes",
            "variableType" : "Long",
            "variableDeclarationType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SizeBytes",
            "marshallLocationName" : "SizeBytes",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The size of the stream record, in bytes.</p>\n@param sizeBytes The size of the stream record, in bytes.*/",
          "getterDocumentation" : "/**<p>The size of the stream record, in bytes.</p>\n@return The size of the stream record, in bytes.*/",
          "fluentSetterDocumentation" : "/**<p>The size of the stream record, in bytes.</p>\n@param sizeBytes The size of the stream record, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The size of the stream record, in bytes.</p>\n@param sizeBytes The size of the stream record, in bytes.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "StreamViewType" : {
          "documentation" : "<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>",
          "name" : "StreamViewType",
          "c2jName" : "StreamViewType",
          "c2jShape" : "StreamViewType",
          "variable" : {
            "variableName" : "streamViewType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "streamViewType",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "StreamViewType",
            "marshallLocationName" : "StreamViewType",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : "StreamViewType",
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>\n@param streamViewType The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li>\n@see StreamViewType*/",
          "getterDocumentation" : "/**<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>\n@return The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li>\n@see StreamViewType*/",
          "fluentSetterDocumentation" : "/**<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>\n@param streamViewType The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamViewType*/",
          "varargSetterDocumentation" : "/**<p>The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li> </ul>\n@param streamViewType The type of data from the modified DynamoDB item that was captured in this stream record:</p> <ul> <li><p><code>KEYS_ONLY</code> - only the key attributes of the modified item.</p></li> <li><p><code>NEW_IMAGE</code> - the entire item, as it appears after it was modified.</p></li> <li><p><code>OLD_IMAGE</code> - the entire item, as it appeared before it was modified.</p></li> <li><p><code>NEW_AND_OLD_IMAGES</code> — both the new and the old item images of the item.</p></li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see StreamViewType*/"
        },
        "SequenceNumber" : {
          "documentation" : "<p>The sequence number of the stream record.</p>",
          "name" : "SequenceNumber",
          "c2jName" : "SequenceNumber",
          "c2jShape" : "SequenceNumber",
          "variable" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "<p>The sequence number of the stream record.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "setterModel" : {
            "variableName" : "sequenceNumber",
            "variableType" : "String",
            "variableDeclarationType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "SequenceNumber",
            "marshallLocationName" : "SequenceNumber",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : null,
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : true,
          "list" : false,
          "map" : false,
          "setterDocumentation" : "/**<p>The sequence number of the stream record.</p>\n@param sequenceNumber The sequence number of the stream record.*/",
          "getterDocumentation" : "/**<p>The sequence number of the stream record.</p>\n@return The sequence number of the stream record.*/",
          "fluentSetterDocumentation" : "/**<p>The sequence number of the stream record.</p>\n@param sequenceNumber The sequence number of the stream record.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The sequence number of the stream record.</p>\n@param sequenceNumber The sequence number of the stream record.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "OldImage" : {
          "documentation" : "<p>The item in the DynamoDB table as it appeared before it was modified.</p>",
          "name" : "OldImage",
          "c2jName" : "OldImage",
          "c2jShape" : "AttributeMap",
          "variable" : {
            "variableName" : "oldImage",
            "variableType" : "java.util.Map<String,AttributeValue>",
            "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
            "documentation" : "<p>The item in the DynamoDB table as it appeared before it was modified.</p>",
            "simpleType" : "Map<String,AttributeValue>",
            "variableSetterType" : "java.util.Map<String,AttributeValue>"
          },
          "setterModel" : {
            "variableName" : "oldImage",
            "variableType" : "java.util.Map<String,AttributeValue>",
            "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
            "documentation" : "",
            "simpleType" : "Map<String,AttributeValue>",
            "variableSetterType" : "java.util.Map<String,AttributeValue>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,AttributeValue>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "OldImage",
            "marshallLocationName" : "OldImage",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "AttributeValue",
            "valueLocationName" : "value",
            "valueModel" : {
              "documentation" : "",
              "name" : "Value",
              "c2jName" : "value",
              "c2jShape" : "AttributeValue",
              "variable" : {
                "variableName" : "value",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "setterModel" : {
                "variableName" : "value",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "getterModel" : {
                "returnType" : "AttributeValue",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "value",
                "marshallLocationName" : "value",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param value */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "templateType" : "java.util.Map<String,AttributeValue>",
            "templateImplType" : "java.util.HashMap<String,AttributeValue>",
            "keySimple" : true,
            "valueSimple" : false,
            "valueList" : false
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared before it was modified.</p>\n@param oldImage The item in the DynamoDB table as it appeared before it was modified.*/",
          "getterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared before it was modified.</p>\n@return The item in the DynamoDB table as it appeared before it was modified.*/",
          "fluentSetterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared before it was modified.</p>\n@param oldImage The item in the DynamoDB table as it appeared before it was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The item in the DynamoDB table as it appeared before it was modified.</p>\n@param oldImage The item in the DynamoDB table as it appeared before it was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        },
        "Keys" : {
          "documentation" : "<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>",
          "name" : "Keys",
          "c2jName" : "Keys",
          "c2jShape" : "AttributeMap",
          "variable" : {
            "variableName" : "keys",
            "variableType" : "java.util.Map<String,AttributeValue>",
            "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
            "documentation" : "<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>",
            "simpleType" : "Map<String,AttributeValue>",
            "variableSetterType" : "java.util.Map<String,AttributeValue>"
          },
          "setterModel" : {
            "variableName" : "keys",
            "variableType" : "java.util.Map<String,AttributeValue>",
            "variableDeclarationType" : "java.util.Map<String,AttributeValue>",
            "documentation" : "",
            "simpleType" : "Map<String,AttributeValue>",
            "variableSetterType" : "java.util.Map<String,AttributeValue>"
          },
          "getterModel" : {
            "returnType" : "java.util.Map<String,AttributeValue>",
            "documentation" : null
          },
          "http" : {
            "unmarshallLocationName" : "Keys",
            "marshallLocationName" : "Keys",
            "additionalUnmarshallingPath" : null,
            "additionalMarshallingPath" : null,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "flattened" : false,
            "header" : false,
            "uri" : false,
            "statusCode" : false,
            "queryString" : false
          },
          "deprecated" : false,
          "listModel" : null,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyType" : "String",
            "keyLocationName" : "key",
            "keyModel" : null,
            "valueType" : "AttributeValue",
            "valueLocationName" : "value",
            "valueModel" : {
              "documentation" : "",
              "name" : "Value",
              "c2jName" : "value",
              "c2jShape" : "AttributeValue",
              "variable" : {
                "variableName" : "value",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "setterModel" : {
                "variableName" : "value",
                "variableType" : "AttributeValue",
                "variableDeclarationType" : "AttributeValue",
                "documentation" : "",
                "simpleType" : "AttributeValue",
                "variableSetterType" : "AttributeValue"
              },
              "getterModel" : {
                "returnType" : "AttributeValue",
                "documentation" : null
              },
              "http" : {
                "unmarshallLocationName" : "value",
                "marshallLocationName" : "value",
                "additionalUnmarshallingPath" : null,
                "additionalMarshallingPath" : null,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "flattened" : false,
                "header" : false,
                "uri" : false,
                "statusCode" : false,
                "queryString" : false
              },
              "deprecated" : false,
              "listModel" : null,
              "mapModel" : null,
              "enumType" : null,
              "xmlNameSpaceUri" : null,
              "simple" : false,
              "list" : false,
              "map" : false,
              "setterDocumentation" : "/**\n@param value */",
              "getterDocumentation" : "/**\n@return */",
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/"
            },
            "templateType" : "java.util.Map<String,AttributeValue>",
            "templateImplType" : "java.util.HashMap<String,AttributeValue>",
            "keySimple" : true,
            "valueSimple" : false,
            "valueList" : false
          },
          "enumType" : null,
          "xmlNameSpaceUri" : null,
          "simple" : false,
          "list" : false,
          "map" : true,
          "setterDocumentation" : "/**<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>\n@param keys The primary key attribute(s) for the DynamoDB item that was modified.*/",
          "getterDocumentation" : "/**<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>\n@return The primary key attribute(s) for the DynamoDB item that was modified.*/",
          "fluentSetterDocumentation" : "/**<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>\n@param keys The primary key attribute(s) for the DynamoDB item that was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "varargSetterDocumentation" : "/**<p>The primary key attribute(s) for the DynamoDB item that was modified.</p>\n@param keys The primary key attribute(s) for the DynamoDB item that was modified.\n@return Returns a reference to this object so that method calls can be chained together.*/"
        }
      }
    },
    "TrimmedDataAccessException" : {
      "c2jName" : "TrimmedDataAccessException",
      "documentation" : "<p>The operation attempted to read past the oldest stream record in a shard.</p> <p>In DynamoDB Streams, there is a 24 hour limit on data retention. Stream records whose age exceeds this limit are subject to removal (trimming) from the stream. You might receive a TrimmedDataAccessException if:</p> <ul> <li>You request a shard iterator with a sequence number older than the trim point (24 hours).</li> <li>You obtain a shard iterator, but before you use the iterator in a <i>GetRecords</i> request, a stream record in the shard exceeds the 24 hour period and is trimmed. This causes the iterator to access a record that no longer exists.</li> </ul>",
      "shapeName" : "TrimmedDataAccessException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "trimmedDataAccessException",
        "variableType" : "TrimmedDataAccessException",
        "variableDeclarationType" : "TrimmedDataAccessException",
        "documentation" : null,
        "simpleType" : "TrimmedDataAccessException",
        "variableSetterType" : "TrimmedDataAccessException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "TrimmedDataAccessException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "ExpiredIteratorException" : {
      "c2jName" : "ExpiredIteratorException",
      "documentation" : "<p>The shard iterator has expired and can no longer be used to retrieve stream records. A shard iterator expires 15 minutes after it is retrieved using the <i>GetShardIterator</i> action.</p>",
      "shapeName" : "ExpiredIteratorException",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : [ ],
      "enums" : null,
      "variable" : {
        "variableName" : "expiredIteratorException",
        "variableType" : "ExpiredIteratorException",
        "variableDeclarationType" : "ExpiredIteratorException",
        "documentation" : null,
        "simpleType" : "ExpiredIteratorException",
        "variableSetterType" : "ExpiredIteratorException"
      },
      "marshaller" : null,
      "unmarshaller" : null,
      "errorCode" : "ExpiredIteratorException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "OperationType" : {
      "c2jName" : "OperationType",
      "documentation" : "",
      "shapeName" : "OperationType",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "INSERT",
        "value" : "INSERT"
      }, {
        "name" : "MODIFY",
        "value" : "MODIFY"
      }, {
        "name" : "REMOVE",
        "value" : "REMOVE"
      } ],
      "variable" : {
        "variableName" : "operationType",
        "variableType" : "OperationType",
        "variableDeclarationType" : "OperationType",
        "documentation" : null,
        "simpleType" : "OperationType",
        "variableSetterType" : "OperationType"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    },
    "StreamStatus" : {
      "c2jName" : "StreamStatus",
      "documentation" : "",
      "shapeName" : "StreamStatus",
      "deprecated" : false,
      "required" : null,
      "hasPayloadMember" : false,
      "hasHeaderMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "members" : null,
      "enums" : [ {
        "name" : "ENABLING",
        "value" : "ENABLING"
      }, {
        "name" : "ENABLED",
        "value" : "ENABLED"
      }, {
        "name" : "DISABLING",
        "value" : "DISABLING"
      }, {
        "name" : "DISABLED",
        "value" : "DISABLED"
      } ],
      "variable" : {
        "variableName" : "streamStatus",
        "variableType" : "StreamStatus",
        "variableDeclarationType" : "StreamStatus",
        "documentation" : null,
        "simpleType" : "StreamStatus",
        "variableSetterType" : "StreamStatus"
      },
      "marshaller" : null,
      "unmarshaller" : {
        "resultWrapper" : null,
        "flattened" : false
      },
      "errorCode" : null,
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingModelClass" : false,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "membersAsMap" : { }
    }
  },
  "customizationConfig" : {
    "requestMetrics" : null,
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "serviceClientHoldInputStream" : false,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customClientConfiguration" : null,
    "customResponseMetadataClassName" : null,
    "skipInterfaceAdditions" : false,
    "customServiceNameForRequest" : null,
    "requiredParamValidationEnabled" : false,
    "additionalShapeConstructors" : null,
    "simpleMethods" : null,
    "authPolicyActions" : {
      "skip" : true,
      "actionPrefix" : null,
      "fileNamePrefix" : null
    },
    "customCodeTemplates" : null,
    "operationModifiers" : null,
    "shapeSubstitutions" : null,
    "shapeModifiers" : {
      "AttributeValue" : {
        "excludeShape" : true,
        "exclude" : null,
        "modify" : null,
        "inject" : null
      },
      "KeySchemaElement" : {
        "excludeShape" : true,
        "exclude" : null,
        "modify" : null,
        "inject" : null
      },
      "KeyType" : {
        "excludeShape" : true,
        "exclude" : null,
        "modify" : null,
        "inject" : null
      },
      "StreamViewType" : {
        "excludeShape" : true,
        "exclude" : null,
        "modify" : null,
        "inject" : null
      },
      "InternalServerError" : {
        "excludeShape" : true,
        "exclude" : null,
        "modify" : null,
        "inject" : null
      },
      "LimitExceededException" : {
        "excludeShape" : true,
        "exclude" : null,
        "modify" : null,
        "inject" : null
      },
      "ResourceNotFoundException" : {
        "excludeShape" : true,
        "exclude" : null,
        "modify" : null,
        "inject" : null
      }
    }
  },
  "defaultClientConfiguration" : "com.amazonaws.PredefinedClientConfigurations.defaultConfig()"
}